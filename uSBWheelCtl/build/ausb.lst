ARM GAS  /tmp/ccWEpmOb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ausb.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.bss.magEncPos,"aw",%nobits
  16              		.align	1
  19              	magEncPos:
  20 0000 0000     		.space	2
  21              		.section	.bss.ausb_effectOnTimer,"aw",%nobits
  22              		.align	1
  25              	ausb_effectOnTimer:
  26 0000 0000     		.space	2
  27              		.section	.bss.ausb_effectRepeatCnt,"aw",%nobits
  28              		.align	1
  31              	ausb_effectRepeatCnt:
  32 0000 0000     		.space	2
  33              		.section	.bss.ausb_pidOperation,"aw",%nobits
  36              	ausb_pidOperation:
  37 0000 00       		.space	1
  38              		.comm	ausb_pidEvent,1,1
  39              		.comm	PrevXferComplete,1,1
  40              		.comm	ausb_flags,1,1
  41              		.comm	ausb_pidStateFlags,1,1
  42              		.comm	sendPidStatus,1,1
  43              		.comm	ausb_effectDataLoopCnt,1,1
  44              		.comm	ausb_deviceGain,1,1
  45              		.comm	ausb_effectData,14,4
  46              		.section	.bss.pidbuf,"aw",%nobits
  47              		.align	2
  50              	pidbuf:
  51 0000 00000000 		.space	20
  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.comm	ausb_OperationReportEffectIdx,1,1
  53              		.comm	userButtonStatus,1,1
  54              		.section	.bss.setupEffectOngoing,"aw",%nobits
  55              		.align	1
  58              	setupEffectOngoing:
  59 0000 0000     		.space	2
  60              		.section	.bss.pAccOld,"aw",%nobits
  63              	pAccOld:
  64 0000 00       		.space	1
  65              		.section	.bss.pBrkOld,"aw",%nobits
  68              	pBrkOld:
  69 0000 00       		.space	1
ARM GAS  /tmp/ccWEpmOb.s 			page 2


  70              		.section	.bss.wheelPosRawOld,"aw",%nobits
  71              		.align	1
  74              	wheelPosRawOld:
  75 0000 0000     		.space	2
  76              		.section	.bss.wheelPosOffset,"aw",%nobits
  77              		.align	1
  80              	wheelPosOffset:
  81 0000 0000     		.space	2
  82              		.section	.bss.wheelPosMin,"aw",%nobits
  83              		.align	1
  86              	wheelPosMin:
  87 0000 0000     		.space	2
  88              		.section	.bss.wheelPosMax,"aw",%nobits
  89              		.align	1
  92              	wheelPosMax:
  93 0000 0000     		.space	2
  94              		.comm	wheelPos,2,2
  95              		.section	.text.usbmain_init,"ax",%progbits
  96              		.align	1
  97              		.global	usbmain_init
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu softvfp
 103              	usbmain_init:
 104              	.LFB66:
 105              		.file 1 "Application/aUSB/ausb.c"
   1:Application/aUSB/ausb.c **** /**
   2:Application/aUSB/ausb.c ****   ******************************************************************************
   3:Application/aUSB/ausb.c ****   * @file    hw_config.c
   4:Application/aUSB/ausb.c ****   * @author  MCD Application Team
   5:Application/aUSB/ausb.c ****   * @version V4.0.0
   6:Application/aUSB/ausb.c ****   * @date    21-January-2013
   7:Application/aUSB/ausb.c ****   * @brief   Hardware Configuration & Setup
   8:Application/aUSB/ausb.c ****   ******************************************************************************
   9:Application/aUSB/ausb.c ****   * @attention
  10:Application/aUSB/ausb.c ****   *
  11:Application/aUSB/ausb.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  12:Application/aUSB/ausb.c ****   *
  13:Application/aUSB/ausb.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  14:Application/aUSB/ausb.c ****   * You may not use this file except in compliance with the License.
  15:Application/aUSB/ausb.c ****   * You may obtain a copy of the License at:
  16:Application/aUSB/ausb.c ****   *
  17:Application/aUSB/ausb.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  18:Application/aUSB/ausb.c ****   *
  19:Application/aUSB/ausb.c ****   * Unless required by applicable law or agreed to in writing, software 
  20:Application/aUSB/ausb.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  21:Application/aUSB/ausb.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Application/aUSB/ausb.c ****   * See the License for the specific language governing permissions and
  23:Application/aUSB/ausb.c ****   * limitations under the License.
  24:Application/aUSB/ausb.c ****   *
  25:Application/aUSB/ausb.c ****   ******************************************************************************
  26:Application/aUSB/ausb.c ****   */
  27:Application/aUSB/ausb.c **** 
  28:Application/aUSB/ausb.c **** 
  29:Application/aUSB/ausb.c **** /* Includes ------------------------------------------------------------------*/
  30:Application/aUSB/ausb.c **** 
ARM GAS  /tmp/ccWEpmOb.s 			page 3


  31:Application/aUSB/ausb.c **** #include "ausb.h"
  32:Application/aUSB/ausb.c **** 
  33:Application/aUSB/ausb.c **** // #include "aquadrenc.h"
  34:Application/aUSB/ausb.c **** // #include "usb_lib.h"
  35:Application/aUSB/ausb.c **** // #include "usb_prop.h"
  36:Application/aUSB/ausb.c **** // #include "usb_desc.h"
  37:Application/aUSB/ausb.c **** // #include "usb_pwr.h"
  38:Application/aUSB/ausb.c **** // #include "usb_istr.h"
  39:Application/aUSB/ausb.c **** // //#include "stm32f10x_exti.h"
  40:Application/aUSB/ausb.c **** // #include "stm32f10x_gpio.h"
  41:Application/aUSB/ausb.c **** // #include "stm32f10x_rcc.h"
  42:Application/aUSB/ausb.c **** // #include "stm32f10x_pwr.h"
  43:Application/aUSB/ausb.c **** //#include "misc.h"
  44:Application/aUSB/ausb.c **** #include "aleds.h"
  45:Application/aUSB/ausb.c **** #include "amagenc.h"
  46:Application/aUSB/ausb.c **** #include "apedals.h"
  47:Application/aUSB/ausb.c **** #include "usbd_hid.h"
  48:Application/aUSB/ausb.c **** #include "usb_device.h"
  49:Application/aUSB/ausb.c **** #include "stm32f1xx_hal.h"
  50:Application/aUSB/ausb.c **** #include "stm32f1xx.h"
  51:Application/aUSB/ausb.c **** #include "usbd_def.h"
  52:Application/aUSB/ausb.c **** #include "abuttons.h"
  53:Application/aUSB/ausb.c **** 
  54:Application/aUSB/ausb.c **** /* Private typedef -----------------------------------------------------------*/
  55:Application/aUSB/ausb.c **** /* Private define ------------------------------------------------------------*/
  56:Application/aUSB/ausb.c **** /* Private macro -------------------------------------------------------------*/
  57:Application/aUSB/ausb.c **** /* Private variables ---------------------------------------------------------*/
  58:Application/aUSB/ausb.c **** //ErrorStatus HSEStartUpStatus;
  59:Application/aUSB/ausb.c **** //EXTI_InitTypeDef EXTI_InitStructure;
  60:Application/aUSB/ausb.c **** static uint16_t magEncPos;
  61:Application/aUSB/ausb.c **** static uint16_t ausb_effectOnTimer;
  62:Application/aUSB/ausb.c **** static uint16_t ausb_effectRepeatCnt;
  63:Application/aUSB/ausb.c **** static uint8_t ausb_pidOperation; /*Bits: 	0-Effect Playing
  64:Application/aUSB/ausb.c **** 											1-Device Paused
  65:Application/aUSB/ausb.c **** 											2-Actuators Enabled
  66:Application/aUSB/ausb.c **** 											3-SafetySwitch
  67:Application/aUSB/ausb.c **** 											4-ActuatorOverrideSwitch
  68:Application/aUSB/ausb.c **** 											5-Actuator Power
  69:Application/aUSB/ausb.c **** 								  */
  70:Application/aUSB/ausb.c **** // static uint8_t phyIntDevState;
  71:Application/aUSB/ausb.c **** // enum ePhyIntDevStates
  72:Application/aUSB/ausb.c **** // {
  73:Application/aUSB/ausb.c **** // 	s01Wait4CreateNewEffectSetReportReq, 	/*setup packet with the set report request (report id == 
  74:Application/aUSB/ausb.c **** // 	s02Wait4CreateNewEffectSetReportData, 	/*data packet*/
  75:Application/aUSB/ausb.c **** // 	s03PrepareCreatingEffect,				/*prepare the effect: allocate memory*/
  76:Application/aUSB/ausb.c **** // 	s04Wait4PIDBlockLoadGetReportReq,		/*setup packet with the get report request (report id == PID
  77:Application/aUSB/ausb.c **** // 	s05SendPIDBlockLoadGetReportData,		/*data packet*/
  78:Application/aUSB/ausb.c **** // 	s06Wait4ParametersDownloadSetReportReq, /*setup packet with the effect parameters (report id ==
  79:Application/aUSB/ausb.c **** // 	s07Wait4ParametersDownloadSetReportData,/*data packet; effect block index (second byte) is the 
  80:Application/aUSB/ausb.c **** // 	s08StartEffectorSetConditionReport,		/*most probable SetConditionReport is not sent here*/
  81:Application/aUSB/ausb.c **** // 	s09TimeOut
  82:Application/aUSB/ausb.c **** // };
  83:Application/aUSB/ausb.c **** uint8_t ausb_pidEvent;
  84:Application/aUSB/ausb.c **** 
  85:Application/aUSB/ausb.c **** /* External variables ----------------------------------------------------------*/
  86:Application/aUSB/ausb.c **** volatile uint8_t PrevXferComplete;
  87:Application/aUSB/ausb.c **** volatile uint8_t ausb_flags;
ARM GAS  /tmp/ccWEpmOb.s 			page 4


  88:Application/aUSB/ausb.c **** volatile uint8_t ausb_pidStateFlags; /*Bits: 	0-Start Playing Effect, 1-Stop Playing Effect,
  89:Application/aUSB/ausb.c **** 											2-Pause,				3-Continue,
  90:Application/aUSB/ausb.c **** 											4-Enable actuators,		5-Disable actuators
  91:Application/aUSB/ausb.c **** 								  */
  92:Application/aUSB/ausb.c **** uint8_t sendPidStatus; /*variable set when a status report (id 2) needs to be sent and cleared when
  93:Application/aUSB/ausb.c **** volatile uint8_t ausb_effectDataLoopCnt;
  94:Application/aUSB/ausb.c **** volatile uint8_t ausb_deviceGain;
  95:Application/aUSB/ausb.c **** pidEffectDataType ausb_effectData;
  96:Application/aUSB/ausb.c **** static uint8_t pidbuf[20];
  97:Application/aUSB/ausb.c **** uint8_t ausb_OperationReportEffectIdx;
  98:Application/aUSB/ausb.c **** uint8_t userButtonStatus;
  99:Application/aUSB/ausb.c **** static uint16_t setupEffectOngoing;
 100:Application/aUSB/ausb.c **** static uint8_t pAccOld;
 101:Application/aUSB/ausb.c **** static uint8_t pBrkOld;
 102:Application/aUSB/ausb.c **** 
 103:Application/aUSB/ausb.c **** /*variables used to calculate the wheel pos based on the encoder data*/
 104:Application/aUSB/ausb.c **** static uint16_t wheelPosRawOld; /*no need to initialize this variable*/
 105:Application/aUSB/ausb.c **** static uint16_t wheelPosOffset;
 106:Application/aUSB/ausb.c **** static uint16_t wheelPosMin;
 107:Application/aUSB/ausb.c **** static uint16_t wheelPosMax;
 108:Application/aUSB/ausb.c **** uint16_t wheelPos; // = mePos << (16- WHEELPOS_RESOLUTION_BITS);
 109:Application/aUSB/ausb.c **** 
 110:Application/aUSB/ausb.c **** /*gear shift buttons*/
 111:Application/aUSB/ausb.c **** extern uint8_t btnShiftDw;
 112:Application/aUSB/ausb.c **** extern uint8_t btnShiftUp;
 113:Application/aUSB/ausb.c **** 
 114:Application/aUSB/ausb.c **** 
 115:Application/aUSB/ausb.c **** /* imported variables*/
 116:Application/aUSB/ausb.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
 117:Application/aUSB/ausb.c **** extern uint8_t usbd_hid_EP0rxBuf[];
 118:Application/aUSB/ausb.c **** // extern uint8_t pDataChanged;
 119:Application/aUSB/ausb.c **** extern uint8_t pAcc;
 120:Application/aUSB/ausb.c **** extern uint8_t pBrk;
 121:Application/aUSB/ausb.c **** 
 122:Application/aUSB/ausb.c **** /* Private function prototypes -----------------------------------------------*/
 123:Application/aUSB/ausb.c **** //static void IntToUnicode (uint32_t value , uint8_t *pbuf , uint8_t len);
 124:Application/aUSB/ausb.c **** static void sendNewHIDSensorsData( void );
 125:Application/aUSB/ausb.c **** //static void sendNewHIDPidStateData( void );
 126:Application/aUSB/ausb.c **** //static void Set_System(void);
 127:Application/aUSB/ausb.c **** //static void USB_Interrupts_Config(void);
 128:Application/aUSB/ausb.c **** static uint8_t sensorsDataChanged(void);
 129:Application/aUSB/ausb.c **** //static void Set_USBClock(void);
 130:Application/aUSB/ausb.c **** static void onNewControlEvent( void );
 131:Application/aUSB/ausb.c **** static uint16_t processWheelPos( uint16_t mePos );
 132:Application/aUSB/ausb.c **** 
 133:Application/aUSB/ausb.c **** /* Private functions ---------------------------------------------------------*/
 134:Application/aUSB/ausb.c **** 
 135:Application/aUSB/ausb.c **** /*initialization of the USB peripheral*/
 136:Application/aUSB/ausb.c **** void usbmain_init(void)
 137:Application/aUSB/ausb.c **** {
 106              		.loc 1 137 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110 0000 80B5     		push	{r7, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccWEpmOb.s 			page 5


 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 00AF     		add	r7, sp, #0
 116              	.LCFI1:
 117              		.cfi_def_cfa_register 7
 138:Application/aUSB/ausb.c **** 	/*peripheral initialization is done STMCubeMx generated modules*/
 139:Application/aUSB/ausb.c **** 	// Set_System();
 140:Application/aUSB/ausb.c **** 	// USB_Interrupts_Config();
 141:Application/aUSB/ausb.c **** 	// Set_USBClock();
 142:Application/aUSB/ausb.c **** 	// USB_Init();
 143:Application/aUSB/ausb.c **** 
 144:Application/aUSB/ausb.c **** 	magEncPos = 0u;
 118              		.loc 1 144 0
 119 0004 154B     		ldr	r3, .L2
 120 0006 0022     		movs	r2, #0
 121 0008 1A80     		strh	r2, [r3]	@ movhi
 145:Application/aUSB/ausb.c **** 	ausb_flags = 0u;
 122              		.loc 1 145 0
 123 000a 154B     		ldr	r3, .L2+4
 124 000c 0022     		movs	r2, #0
 125 000e 1A70     		strb	r2, [r3]
 146:Application/aUSB/ausb.c **** 	ausb_pidStateFlags = 0u;
 126              		.loc 1 146 0
 127 0010 144B     		ldr	r3, .L2+8
 128 0012 0022     		movs	r2, #0
 129 0014 1A70     		strb	r2, [r3]
 147:Application/aUSB/ausb.c **** 	ausb_deviceGain = 128u; /*set to half; FixMe after testing with motor see if this default value is
 130              		.loc 1 147 0
 131 0016 144B     		ldr	r3, .L2+12
 132 0018 8022     		movs	r2, #128
 133 001a 1A70     		strb	r2, [r3]
 148:Application/aUSB/ausb.c **** 	ausb_pidOperation = 0x24u; /*actuators are powered and enabled by default (see affmotor_init)*/
 134              		.loc 1 148 0
 135 001c 134B     		ldr	r3, .L2+16
 136 001e 2422     		movs	r2, #36
 137 0020 1A70     		strb	r2, [r3]
 149:Application/aUSB/ausb.c **** 	ausb_pidEvent = evNone;
 138              		.loc 1 149 0
 139 0022 134B     		ldr	r3, .L2+20
 140 0024 0022     		movs	r2, #0
 141 0026 1A70     		strb	r2, [r3]
 150:Application/aUSB/ausb.c **** 	sendPidStatus = 0u;
 142              		.loc 1 150 0
 143 0028 124B     		ldr	r3, .L2+24
 144 002a 0022     		movs	r2, #0
 145 002c 1A70     		strb	r2, [r3]
 151:Application/aUSB/ausb.c **** 	userButtonStatus = 0u;
 146              		.loc 1 151 0
 147 002e 124B     		ldr	r3, .L2+28
 148 0030 0022     		movs	r2, #0
 149 0032 1A70     		strb	r2, [r3]
 152:Application/aUSB/ausb.c **** 
 153:Application/aUSB/ausb.c **** 	pAccOld = 0u;
 150              		.loc 1 153 0
 151 0034 114B     		ldr	r3, .L2+32
 152 0036 0022     		movs	r2, #0
 153 0038 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccWEpmOb.s 			page 6


 154:Application/aUSB/ausb.c **** 	pBrkOld = 0u;
 154              		.loc 1 154 0
 155 003a 114B     		ldr	r3, .L2+36
 156 003c 0022     		movs	r2, #0
 157 003e 1A70     		strb	r2, [r3]
 155:Application/aUSB/ausb.c **** 
 156:Application/aUSB/ausb.c **** 	wheelPosMin = 0xFFFFu;
 158              		.loc 1 156 0
 159 0040 104B     		ldr	r3, .L2+40
 160 0042 4FF6FF72 		movw	r2, #65535
 161 0046 1A80     		strh	r2, [r3]	@ movhi
 157:Application/aUSB/ausb.c **** 	wheelPosMax = 0u;
 162              		.loc 1 157 0
 163 0048 0F4B     		ldr	r3, .L2+44
 164 004a 0022     		movs	r2, #0
 165 004c 1A80     		strh	r2, [r3]	@ movhi
 158:Application/aUSB/ausb.c **** 	wheelPos = 1u; /*dummy value until the wheel is calibrated*/
 166              		.loc 1 158 0
 167 004e 0F4B     		ldr	r3, .L2+48
 168 0050 0122     		movs	r2, #1
 169 0052 1A80     		strh	r2, [r3]	@ movhi
 159:Application/aUSB/ausb.c **** 
 160:Application/aUSB/ausb.c **** 	ausb_initEffectsData();
 170              		.loc 1 160 0
 171 0054 FFF7FEFF 		bl	ausb_initEffectsData
 161:Application/aUSB/ausb.c **** 
 162:Application/aUSB/ausb.c **** }
 172              		.loc 1 162 0
 173 0058 00BF     		nop
 174 005a 80BD     		pop	{r7, pc}
 175              	.L3:
 176              		.align	2
 177              	.L2:
 178 005c 00000000 		.word	magEncPos
 179 0060 00000000 		.word	ausb_flags
 180 0064 00000000 		.word	ausb_pidStateFlags
 181 0068 00000000 		.word	ausb_deviceGain
 182 006c 00000000 		.word	ausb_pidOperation
 183 0070 00000000 		.word	ausb_pidEvent
 184 0074 00000000 		.word	sendPidStatus
 185 0078 00000000 		.word	userButtonStatus
 186 007c 00000000 		.word	pAccOld
 187 0080 00000000 		.word	pBrkOld
 188 0084 00000000 		.word	wheelPosMin
 189 0088 00000000 		.word	wheelPosMax
 190 008c 00000000 		.word	wheelPos
 191              		.cfi_endproc
 192              	.LFE66:
 194              		.section	.text.ausb_manage10ms,"ax",%progbits
 195              		.align	1
 196              		.global	ausb_manage10ms
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu softvfp
 202              	ausb_manage10ms:
 203              	.LFB67:
ARM GAS  /tmp/ccWEpmOb.s 			page 7


 163:Application/aUSB/ausb.c **** 
 164:Application/aUSB/ausb.c **** /*manages sensor data*/
 165:Application/aUSB/ausb.c **** void ausb_manage10ms( void )
 166:Application/aUSB/ausb.c **** {
 204              		.loc 1 166 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 00AF     		add	r7, sp, #0
 214              	.LCFI3:
 215              		.cfi_def_cfa_register 7
 167:Application/aUSB/ausb.c **** 
 168:Application/aUSB/ausb.c **** 	if (sensorsDataChanged() != 0)
 216              		.loc 1 168 0
 217 0004 FFF7FEFF 		bl	sensorsDataChanged
 218 0008 0346     		mov	r3, r0
 219 000a 002B     		cmp	r3, #0
 220 000c 01D0     		beq	.L5
 169:Application/aUSB/ausb.c **** 	{
 170:Application/aUSB/ausb.c **** 		sendNewHIDSensorsData();
 221              		.loc 1 170 0
 222 000e FFF7FEFF 		bl	sendNewHIDSensorsData
 223              	.L5:
 171:Application/aUSB/ausb.c **** 	}
 172:Application/aUSB/ausb.c **** 
 173:Application/aUSB/ausb.c **** 	if ( setupEffectOngoing > 10u )
 224              		.loc 1 173 0
 225 0012 084B     		ldr	r3, .L9
 226 0014 1B88     		ldrh	r3, [r3]
 227 0016 0A2B     		cmp	r3, #10
 228 0018 06D9     		bls	.L6
 174:Application/aUSB/ausb.c **** 	{
 175:Application/aUSB/ausb.c **** 		setupEffectOngoing-=10u;
 229              		.loc 1 175 0
 230 001a 064B     		ldr	r3, .L9
 231 001c 1B88     		ldrh	r3, [r3]
 232 001e 0A3B     		subs	r3, r3, #10
 233 0020 9AB2     		uxth	r2, r3
 234 0022 044B     		ldr	r3, .L9
 235 0024 1A80     		strh	r2, [r3]	@ movhi
 176:Application/aUSB/ausb.c **** 	}
 177:Application/aUSB/ausb.c **** 	else
 178:Application/aUSB/ausb.c **** 	{
 179:Application/aUSB/ausb.c **** 		setupEffectOngoing = 0u;
 180:Application/aUSB/ausb.c **** 	}
 181:Application/aUSB/ausb.c **** 	
 182:Application/aUSB/ausb.c **** }
 236              		.loc 1 182 0
 237 0026 02E0     		b	.L8
 238              	.L6:
 179:Application/aUSB/ausb.c **** 	}
 239              		.loc 1 179 0
ARM GAS  /tmp/ccWEpmOb.s 			page 8


 240 0028 024B     		ldr	r3, .L9
 241 002a 0022     		movs	r2, #0
 242 002c 1A80     		strh	r2, [r3]	@ movhi
 243              	.L8:
 244              		.loc 1 182 0
 245 002e 00BF     		nop
 246 0030 80BD     		pop	{r7, pc}
 247              	.L10:
 248 0032 00BF     		.align	2
 249              	.L9:
 250 0034 00000000 		.word	setupEffectOngoing
 251              		.cfi_endproc
 252              	.LFE67:
 254              		.section	.text.ausb_manage1ms,"ax",%progbits
 255              		.align	1
 256              		.global	ausb_manage1ms
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu softvfp
 262              	ausb_manage1ms:
 263              	.LFB68:
 183:Application/aUSB/ausb.c **** 
 184:Application/aUSB/ausb.c **** /*manages force feetback commands*/
 185:Application/aUSB/ausb.c **** void ausb_manage1ms( void )
 186:Application/aUSB/ausb.c **** {
 264              		.loc 1 186 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269 0000 80B4     		push	{r7}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 4
 272              		.cfi_offset 7, -4
 273 0002 00AF     		add	r7, sp, #0
 274              	.LCFI5:
 275              		.cfi_def_cfa_register 7
 187:Application/aUSB/ausb.c **** 	//static uint16_t ausb_effectOnTimerOld;
 188:Application/aUSB/ausb.c **** 
 189:Application/aUSB/ausb.c **** 	// /*decrement timer and check timeOut*/
 190:Application/aUSB/ausb.c **** 	// if ( (ausb_effectOnTimer > 0) && (0x00 == (ausb_pidOperation & 0x02u)) )
 191:Application/aUSB/ausb.c **** 	// {/*effect still playing and pause flag is not set*/
 192:Application/aUSB/ausb.c **** 
 193:Application/aUSB/ausb.c **** 	// 	ausb_effectOnTimer--;
 194:Application/aUSB/ausb.c **** 
 195:Application/aUSB/ausb.c **** 	// 	if ( (0 == ausb_effectOnTimer) && (ausb_effectOnTimerOld > 0) )
 196:Application/aUSB/ausb.c **** 	// 	{/*timeOutEvent*/
 197:Application/aUSB/ausb.c **** 	// 		if ( ausb_effectRepeatCnt > 0 )
 198:Application/aUSB/ausb.c **** 	// 		{/*effect can be played one more time*/
 199:Application/aUSB/ausb.c **** 	// 			/*restart effect*/
 200:Application/aUSB/ausb.c **** 	// 			ausb_effectOnTimer = ausb_effectData.duration;
 201:Application/aUSB/ausb.c **** 	// 			ausb_effectRepeatCnt = ausb_effectDataLoopCnt;
 202:Application/aUSB/ausb.c **** 	// 			/*TODO: set here a flag to restart the effect (this is valid if for example an envelope is u
 203:Application/aUSB/ausb.c **** 	// 			ausb_effectRepeatCnt--;
 204:Application/aUSB/ausb.c **** 
 205:Application/aUSB/ausb.c **** 	// 		}
ARM GAS  /tmp/ccWEpmOb.s 			page 9


 206:Application/aUSB/ausb.c **** 	// 		else
 207:Application/aUSB/ausb.c **** 	// 		{
 208:Application/aUSB/ausb.c **** 	// 			/*stop effect*/
 209:Application/aUSB/ausb.c **** 	// 			ausb_pidOperation &= 0xFE; /*clear flag*/
 210:Application/aUSB/ausb.c **** 
 211:Application/aUSB/ausb.c **** 	// 			AUSB_STOP_ACTUATOR
 212:Application/aUSB/ausb.c **** 	// 		}
 213:Application/aUSB/ausb.c **** 
 214:Application/aUSB/ausb.c **** 	// 	}else{/*no actions*/}
 215:Application/aUSB/ausb.c **** 
 216:Application/aUSB/ausb.c **** 	// 	ausb_effectOnTimerOld = ausb_effectOnTimer;
 217:Application/aUSB/ausb.c **** 
 218:Application/aUSB/ausb.c **** 	// }else{/*no actions*/}
 219:Application/aUSB/ausb.c **** 
 220:Application/aUSB/ausb.c **** }
 276              		.loc 1 220 0
 277 0004 00BF     		nop
 278 0006 BD46     		mov	sp, r7
 279              	.LCFI6:
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 0008 80BC     		pop	{r7}
 283              	.LCFI7:
 284              		.cfi_restore 7
 285              		.cfi_def_cfa_offset 0
 286 000a 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE68:
 290              		.section	.text.onNewControlEvent,"ax",%progbits
 291              		.align	1
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu softvfp
 297              	onNewControlEvent:
 298              	.LFB69:
 221:Application/aUSB/ausb.c **** 
 222:Application/aUSB/ausb.c **** static void onNewControlEvent( void )
 223:Application/aUSB/ausb.c **** {
 299              		.loc 1 223 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303 0000 80B5     		push	{r7, lr}
 304              	.LCFI8:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 7, -8
 307              		.cfi_offset 14, -4
 308 0002 00AF     		add	r7, sp, #0
 309              	.LCFI9:
 310              		.cfi_def_cfa_register 7
 224:Application/aUSB/ausb.c **** 	/*check flags*/
 225:Application/aUSB/ausb.c **** 	if ( 0 != (0x01u & ausb_pidStateFlags) )
 311              		.loc 1 225 0
 312 0004 554B     		ldr	r3, .L20
 313 0006 1B78     		ldrb	r3, [r3]
 314 0008 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccWEpmOb.s 			page 10


 315 000a 03F00103 		and	r3, r3, #1
 316 000e DBB2     		uxtb	r3, r3
 317 0010 002B     		cmp	r3, #0
 318 0012 15D0     		beq	.L13
 226:Application/aUSB/ausb.c **** 	{/*play effect*/
 227:Application/aUSB/ausb.c **** 
 228:Application/aUSB/ausb.c **** 		AUSB_START_ACTUATOR
 319              		.loc 1 228 0
 320 0014 FFF7FEFF 		bl	affmotor_start
 229:Application/aUSB/ausb.c **** 
 230:Application/aUSB/ausb.c **** 		/*update PID operation flag*/
 231:Application/aUSB/ausb.c **** 		ausb_pidOperation |= 0x01u;
 321              		.loc 1 231 0
 322 0018 514B     		ldr	r3, .L20+4
 323 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 324 001c 43F00103 		orr	r3, r3, #1
 325 0020 DAB2     		uxtb	r2, r3
 326 0022 4F4B     		ldr	r3, .L20+4
 327 0024 1A70     		strb	r2, [r3]
 232:Application/aUSB/ausb.c **** 
 233:Application/aUSB/ausb.c **** 		/*start timer*/
 234:Application/aUSB/ausb.c **** 		ausb_effectOnTimer = ausb_effectData.duration;
 328              		.loc 1 234 0
 329 0026 4F4B     		ldr	r3, .L20+8
 330 0028 1A88     		ldrh	r2, [r3]
 331 002a 4F4B     		ldr	r3, .L20+12
 332 002c 1A80     		strh	r2, [r3]	@ movhi
 235:Application/aUSB/ausb.c **** 		ausb_effectRepeatCnt = ausb_effectDataLoopCnt;
 333              		.loc 1 235 0
 334 002e 4F4B     		ldr	r3, .L20+16
 335 0030 1B78     		ldrb	r3, [r3]
 336 0032 DBB2     		uxtb	r3, r3
 337 0034 9AB2     		uxth	r2, r3
 338 0036 4E4B     		ldr	r3, .L20+20
 339 0038 1A80     		strh	r2, [r3]	@ movhi
 236:Application/aUSB/ausb.c **** 
 237:Application/aUSB/ausb.c **** 		/*play command is sent at the end of the effect setup so enable back the in report 1*/
 238:Application/aUSB/ausb.c **** 		setupEffectOngoing = 0u;
 340              		.loc 1 238 0
 341 003a 4E4B     		ldr	r3, .L20+24
 342 003c 0022     		movs	r2, #0
 343 003e 1A80     		strh	r2, [r3]	@ movhi
 344              	.L13:
 239:Application/aUSB/ausb.c **** 	}else{/*no actions*/}
 240:Application/aUSB/ausb.c **** 	if ( 0 != (0x02u & ausb_pidStateFlags) )
 345              		.loc 1 240 0
 346 0040 464B     		ldr	r3, .L20
 347 0042 1B78     		ldrb	r3, [r3]
 348 0044 DBB2     		uxtb	r3, r3
 349 0046 03F00203 		and	r3, r3, #2
 350 004a DBB2     		uxtb	r3, r3
 351 004c 002B     		cmp	r3, #0
 352 004e 11D0     		beq	.L14
 241:Application/aUSB/ausb.c **** 	{/*stop effect*/
 242:Application/aUSB/ausb.c **** 
 243:Application/aUSB/ausb.c **** 		affmotor_updatePwmDC(/*0,*/ 0);
 353              		.loc 1 243 0
ARM GAS  /tmp/ccWEpmOb.s 			page 11


 354 0050 0020     		movs	r0, #0
 355 0052 FFF7FEFF 		bl	affmotor_updatePwmDC
 244:Application/aUSB/ausb.c **** 		AUSB_STOP_ACTUATOR
 356              		.loc 1 244 0
 357 0056 FFF7FEFF 		bl	affmotor_stop
 245:Application/aUSB/ausb.c **** 
 246:Application/aUSB/ausb.c **** 		/*update PID operation flag*/
 247:Application/aUSB/ausb.c **** 		ausb_pidOperation &= 0xFEu;
 358              		.loc 1 247 0
 359 005a 414B     		ldr	r3, .L20+4
 360 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361 005e 23F00103 		bic	r3, r3, #1
 362 0062 DAB2     		uxtb	r2, r3
 363 0064 3E4B     		ldr	r3, .L20+4
 364 0066 1A70     		strb	r2, [r3]
 248:Application/aUSB/ausb.c **** 
 249:Application/aUSB/ausb.c **** 		ausb_effectOnTimer = 0;
 365              		.loc 1 249 0
 366 0068 3F4B     		ldr	r3, .L20+12
 367 006a 0022     		movs	r2, #0
 368 006c 1A80     		strh	r2, [r3]	@ movhi
 250:Application/aUSB/ausb.c **** 		ausb_effectRepeatCnt = 0;
 369              		.loc 1 250 0
 370 006e 404B     		ldr	r3, .L20+20
 371 0070 0022     		movs	r2, #0
 372 0072 1A80     		strh	r2, [r3]	@ movhi
 373              	.L14:
 251:Application/aUSB/ausb.c **** 	}else{/*no actions*/}
 252:Application/aUSB/ausb.c **** 	if ( 0 != (0x04u & ausb_pidStateFlags) )
 374              		.loc 1 252 0
 375 0074 394B     		ldr	r3, .L20
 376 0076 1B78     		ldrb	r3, [r3]
 377 0078 DBB2     		uxtb	r3, r3
 378 007a 03F00403 		and	r3, r3, #4
 379 007e DBB2     		uxtb	r3, r3
 380 0080 002B     		cmp	r3, #0
 381 0082 0BD0     		beq	.L15
 253:Application/aUSB/ausb.c **** 	{/*pause effects*/
 254:Application/aUSB/ausb.c **** 
 255:Application/aUSB/ausb.c **** 		affmotor_updatePwmDC(/*0,*/ 0);
 382              		.loc 1 255 0
 383 0084 0020     		movs	r0, #0
 384 0086 FFF7FEFF 		bl	affmotor_updatePwmDC
 256:Application/aUSB/ausb.c **** 		AUSB_STOP_ACTUATOR
 385              		.loc 1 256 0
 386 008a FFF7FEFF 		bl	affmotor_stop
 257:Application/aUSB/ausb.c **** 
 258:Application/aUSB/ausb.c **** 		/*update PID operation flag*/
 259:Application/aUSB/ausb.c **** 		ausb_pidOperation |= 0x02u;
 387              		.loc 1 259 0
 388 008e 344B     		ldr	r3, .L20+4
 389 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 390 0092 43F00203 		orr	r3, r3, #2
 391 0096 DAB2     		uxtb	r2, r3
 392 0098 314B     		ldr	r3, .L20+4
 393 009a 1A70     		strb	r2, [r3]
 394              	.L15:
ARM GAS  /tmp/ccWEpmOb.s 			page 12


 260:Application/aUSB/ausb.c **** 
 261:Application/aUSB/ausb.c **** 	}else{/*no actions*/}
 262:Application/aUSB/ausb.c **** 	if ( 0 != (0x08u & ausb_pidStateFlags) )
 395              		.loc 1 262 0
 396 009c 2F4B     		ldr	r3, .L20
 397 009e 1B78     		ldrb	r3, [r3]
 398 00a0 DBB2     		uxtb	r3, r3
 399 00a2 03F00803 		and	r3, r3, #8
 400 00a6 DBB2     		uxtb	r3, r3
 401 00a8 002B     		cmp	r3, #0
 402 00aa 0CD0     		beq	.L16
 263:Application/aUSB/ausb.c **** 	{/*continue playing effects*/
 264:Application/aUSB/ausb.c **** 
 265:Application/aUSB/ausb.c **** 		if ( ausb_effectOnTimer > 0 )
 403              		.loc 1 265 0
 404 00ac 2E4B     		ldr	r3, .L20+12
 405 00ae 1B88     		ldrh	r3, [r3]
 406 00b0 002B     		cmp	r3, #0
 407 00b2 01D0     		beq	.L17
 266:Application/aUSB/ausb.c **** 		{
 267:Application/aUSB/ausb.c **** 			AUSB_START_ACTUATOR
 408              		.loc 1 267 0
 409 00b4 FFF7FEFF 		bl	affmotor_start
 410              	.L17:
 268:Application/aUSB/ausb.c **** 		}else{/*effect was not playing*/}
 269:Application/aUSB/ausb.c **** 
 270:Application/aUSB/ausb.c **** 		/*clear PAUSE flag*/
 271:Application/aUSB/ausb.c **** 		ausb_pidOperation &= (0xFFu^0x02u);
 411              		.loc 1 271 0
 412 00b8 294B     		ldr	r3, .L20+4
 413 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 00bc 23F00203 		bic	r3, r3, #2
 415 00c0 DAB2     		uxtb	r2, r3
 416 00c2 274B     		ldr	r3, .L20+4
 417 00c4 1A70     		strb	r2, [r3]
 418              	.L16:
 272:Application/aUSB/ausb.c **** 
 273:Application/aUSB/ausb.c **** 	}else{/*no actions*/}
 274:Application/aUSB/ausb.c **** 	if ( 0 != (0x10u & ausb_pidStateFlags) )
 419              		.loc 1 274 0
 420 00c6 254B     		ldr	r3, .L20
 421 00c8 1B78     		ldrb	r3, [r3]
 422 00ca DBB2     		uxtb	r3, r3
 423 00cc 03F01003 		and	r3, r3, #16
 424 00d0 DBB2     		uxtb	r3, r3
 425 00d2 002B     		cmp	r3, #0
 426 00d4 1AD0     		beq	.L18
 275:Application/aUSB/ausb.c **** 	{/*enable actuators*/
 276:Application/aUSB/ausb.c **** 
 277:Application/aUSB/ausb.c **** 		affmotor_updatePwmDC(/*0,*/ 0);
 427              		.loc 1 277 0
 428 00d6 0020     		movs	r0, #0
 429 00d8 FFF7FEFF 		bl	affmotor_updatePwmDC
 278:Application/aUSB/ausb.c **** 		AUSB_STOP_ACTUATOR
 430              		.loc 1 278 0
 431 00dc FFF7FEFF 		bl	affmotor_stop
 279:Application/aUSB/ausb.c **** 
ARM GAS  /tmp/ccWEpmOb.s 			page 13


 280:Application/aUSB/ausb.c **** 		ausb_effectOnTimer = 0;
 432              		.loc 1 280 0
 433 00e0 214B     		ldr	r3, .L20+12
 434 00e2 0022     		movs	r2, #0
 435 00e4 1A80     		strh	r2, [r3]	@ movhi
 281:Application/aUSB/ausb.c **** 		ausb_effectRepeatCnt = 0;
 436              		.loc 1 281 0
 437 00e6 224B     		ldr	r3, .L20+20
 438 00e8 0022     		movs	r2, #0
 439 00ea 1A80     		strh	r2, [r3]	@ movhi
 282:Application/aUSB/ausb.c **** 
 283:Application/aUSB/ausb.c **** 		/*update PID operation flag*/
 284:Application/aUSB/ausb.c **** 		ausb_pidOperation &= 0xFEu;
 440              		.loc 1 284 0
 441 00ec 1C4B     		ldr	r3, .L20+4
 442 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 443 00f0 23F00103 		bic	r3, r3, #1
 444 00f4 DAB2     		uxtb	r2, r3
 445 00f6 1A4B     		ldr	r3, .L20+4
 446 00f8 1A70     		strb	r2, [r3]
 285:Application/aUSB/ausb.c **** 
 286:Application/aUSB/ausb.c **** 		AUSB_ENABLE_ACTUATOR
 447              		.loc 1 286 0
 448 00fa FFF7FEFF 		bl	affmotor_enable
 287:Application/aUSB/ausb.c **** 
 288:Application/aUSB/ausb.c **** 		/*update PID operation flag*/
 289:Application/aUSB/ausb.c **** 		ausb_pidOperation |= 0x04u;
 449              		.loc 1 289 0
 450 00fe 184B     		ldr	r3, .L20+4
 451 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 0102 43F00403 		orr	r3, r3, #4
 453 0106 DAB2     		uxtb	r2, r3
 454 0108 154B     		ldr	r3, .L20+4
 455 010a 1A70     		strb	r2, [r3]
 456              	.L18:
 290:Application/aUSB/ausb.c **** 
 291:Application/aUSB/ausb.c **** 	}else{/*no actions*/}
 292:Application/aUSB/ausb.c **** 	if ( 0 != (0x20u & ausb_pidStateFlags) )
 457              		.loc 1 292 0
 458 010c 134B     		ldr	r3, .L20
 459 010e 1B78     		ldrb	r3, [r3]
 460 0110 DBB2     		uxtb	r3, r3
 461 0112 03F02003 		and	r3, r3, #32
 462 0116 DBB2     		uxtb	r3, r3
 463 0118 002B     		cmp	r3, #0
 464 011a 17D0     		beq	.L19
 293:Application/aUSB/ausb.c **** 	{/*disable actuators*/
 294:Application/aUSB/ausb.c **** 
 295:Application/aUSB/ausb.c **** 		AUSB_STOP_ACTUATOR
 465              		.loc 1 295 0
 466 011c FFF7FEFF 		bl	affmotor_stop
 296:Application/aUSB/ausb.c **** 
 297:Application/aUSB/ausb.c **** 		ausb_effectOnTimer = 0;
 467              		.loc 1 297 0
 468 0120 114B     		ldr	r3, .L20+12
 469 0122 0022     		movs	r2, #0
 470 0124 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccWEpmOb.s 			page 14


 298:Application/aUSB/ausb.c **** 		ausb_effectRepeatCnt = 0;
 471              		.loc 1 298 0
 472 0126 124B     		ldr	r3, .L20+20
 473 0128 0022     		movs	r2, #0
 474 012a 1A80     		strh	r2, [r3]	@ movhi
 299:Application/aUSB/ausb.c **** 
 300:Application/aUSB/ausb.c **** 		/*update PID operation flag*/
 301:Application/aUSB/ausb.c **** 		ausb_pidOperation &= 0xFEu;
 475              		.loc 1 301 0
 476 012c 0C4B     		ldr	r3, .L20+4
 477 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478 0130 23F00103 		bic	r3, r3, #1
 479 0134 DAB2     		uxtb	r2, r3
 480 0136 0A4B     		ldr	r3, .L20+4
 481 0138 1A70     		strb	r2, [r3]
 302:Application/aUSB/ausb.c **** 
 303:Application/aUSB/ausb.c **** 		AUSB_DISABLE_ACTUATOR
 482              		.loc 1 303 0
 483 013a FFF7FEFF 		bl	affmotor_disable
 304:Application/aUSB/ausb.c **** 
 305:Application/aUSB/ausb.c **** 		/*update PID operation flag*/
 306:Application/aUSB/ausb.c **** 		ausb_pidOperation &= (0xFFu^0x04u);
 484              		.loc 1 306 0
 485 013e 084B     		ldr	r3, .L20+4
 486 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 487 0142 23F00403 		bic	r3, r3, #4
 488 0146 DAB2     		uxtb	r2, r3
 489 0148 054B     		ldr	r3, .L20+4
 490 014a 1A70     		strb	r2, [r3]
 491              	.L19:
 307:Application/aUSB/ausb.c **** 
 308:Application/aUSB/ausb.c **** 	}else{/*no actions*/}
 309:Application/aUSB/ausb.c **** 
 310:Application/aUSB/ausb.c **** 	sendPidStatus = 1u;
 492              		.loc 1 310 0
 493 014c 0A4B     		ldr	r3, .L20+28
 494 014e 0122     		movs	r2, #1
 495 0150 1A70     		strb	r2, [r3]
 311:Application/aUSB/ausb.c **** 
 312:Application/aUSB/ausb.c **** 	ausb_pidStateFlags = 0x00u;
 496              		.loc 1 312 0
 497 0152 024B     		ldr	r3, .L20
 498 0154 0022     		movs	r2, #0
 499 0156 1A70     		strb	r2, [r3]
 313:Application/aUSB/ausb.c **** 
 314:Application/aUSB/ausb.c **** 	/*turn on led to indicate a control event happened*/
 315:Application/aUSB/ausb.c **** 	//aleds_ledGreenStatus = ALEDS_LED_STATUS_BLINK;
 316:Application/aUSB/ausb.c **** 	//aleds_ledGreenBlinkTimeMs = 1000; /*ms*/
 317:Application/aUSB/ausb.c **** }
 500              		.loc 1 317 0
 501 0158 00BF     		nop
 502 015a 80BD     		pop	{r7, pc}
 503              	.L21:
 504              		.align	2
 505              	.L20:
 506 015c 00000000 		.word	ausb_pidStateFlags
 507 0160 00000000 		.word	ausb_pidOperation
ARM GAS  /tmp/ccWEpmOb.s 			page 15


 508 0164 00000000 		.word	ausb_effectData
 509 0168 00000000 		.word	ausb_effectOnTimer
 510 016c 00000000 		.word	ausb_effectDataLoopCnt
 511 0170 00000000 		.word	ausb_effectRepeatCnt
 512 0174 00000000 		.word	setupEffectOngoing
 513 0178 00000000 		.word	sendPidStatus
 514              		.cfi_endproc
 515              	.LFE69:
 517              		.section	.text.sensorsDataChanged,"ax",%progbits
 518              		.align	1
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu softvfp
 524              	sensorsDataChanged:
 525              	.LFB70:
 318:Application/aUSB/ausb.c **** 
 319:Application/aUSB/ausb.c **** 
 320:Application/aUSB/ausb.c **** 
 321:Application/aUSB/ausb.c **** /*******************************************************************************
 322:Application/aUSB/ausb.c **** * Function Name : JoyState.
 323:Application/aUSB/ausb.c **** * Description   : Returns 1u if any sensor data was changed / 0u if not.
 324:Application/aUSB/ausb.c **** * Input         : None.
 325:Application/aUSB/ausb.c **** * Output        : None.
 326:Application/aUSB/ausb.c **** * Return value  : The direction value.
 327:Application/aUSB/ausb.c **** *******************************************************************************/
 328:Application/aUSB/ausb.c **** static uint8_t sensorsDataChanged(void)
 329:Application/aUSB/ausb.c **** {
 526              		.loc 1 329 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 8
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530 0000 80B5     		push	{r7, lr}
 531              	.LCFI10:
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 7, -8
 534              		.cfi_offset 14, -4
 535 0002 82B0     		sub	sp, sp, #8
 536              	.LCFI11:
 537              		.cfi_def_cfa_offset 16
 538 0004 00AF     		add	r7, sp, #0
 539              	.LCFI12:
 540              		.cfi_def_cfa_register 7
 330:Application/aUSB/ausb.c **** 	static uint8_t userButtonStatusOld = 0u;
 331:Application/aUSB/ausb.c **** 	uint8_t retVal = 0;
 541              		.loc 1 331 0
 542 0006 0023     		movs	r3, #0
 543 0008 FB71     		strb	r3, [r7, #7]
 332:Application/aUSB/ausb.c **** 
 333:Application/aUSB/ausb.c **** 	/*check if magnetic encoder value changed*/
 334:Application/aUSB/ausb.c **** 	if ( (magEncPos != amagenc_ssiSample) /*(WheelState() != 0) ||*/ )
 544              		.loc 1 334 0
 545 000a 374B     		ldr	r3, .L34
 546 000c 1A88     		ldrh	r2, [r3]
 547 000e 374B     		ldr	r3, .L34+4
 548 0010 1B88     		ldrh	r3, [r3]
 549 0012 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccWEpmOb.s 			page 16


 550 0014 05D0     		beq	.L23
 335:Application/aUSB/ausb.c **** 	{
 336:Application/aUSB/ausb.c **** 		magEncPos = amagenc_ssiSample;
 551              		.loc 1 336 0
 552 0016 354B     		ldr	r3, .L34+4
 553 0018 1A88     		ldrh	r2, [r3]
 554 001a 334B     		ldr	r3, .L34
 555 001c 1A80     		strh	r2, [r3]	@ movhi
 337:Application/aUSB/ausb.c **** 		retVal = 1u;
 556              		.loc 1 337 0
 557 001e 0123     		movs	r3, #1
 558 0020 FB71     		strb	r3, [r7, #7]
 559              	.L23:
 338:Application/aUSB/ausb.c **** 	}else{/*no actions: retVal already initialized with 0*/}
 339:Application/aUSB/ausb.c **** 
 340:Application/aUSB/ausb.c **** 	if ( pAccOld != pAcc )
 560              		.loc 1 340 0
 561 0022 334B     		ldr	r3, .L34+8
 562 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 563 0026 334B     		ldr	r3, .L34+12
 564 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 565 002a 9A42     		cmp	r2, r3
 566 002c 05D0     		beq	.L24
 341:Application/aUSB/ausb.c **** 	{/*pedal data changed*/
 342:Application/aUSB/ausb.c **** 		pAccOld = pAcc;
 567              		.loc 1 342 0
 568 002e 314B     		ldr	r3, .L34+12
 569 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 570 0032 2F4B     		ldr	r3, .L34+8
 571 0034 1A70     		strb	r2, [r3]
 343:Application/aUSB/ausb.c **** 		retVal = 1u;
 572              		.loc 1 343 0
 573 0036 0123     		movs	r3, #1
 574 0038 FB71     		strb	r3, [r7, #7]
 575              	.L24:
 344:Application/aUSB/ausb.c **** 	}else{/*no actions: retVal already initialized with 0*/}
 345:Application/aUSB/ausb.c **** 
 346:Application/aUSB/ausb.c **** 	if ( pBrkOld != pBrk )
 576              		.loc 1 346 0
 577 003a 2F4B     		ldr	r3, .L34+16
 578 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 579 003e 2F4B     		ldr	r3, .L34+20
 580 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 0042 9A42     		cmp	r2, r3
 582 0044 05D0     		beq	.L25
 347:Application/aUSB/ausb.c **** 	{/*pedal data changed*/
 348:Application/aUSB/ausb.c **** 		pBrkOld = pBrk;
 583              		.loc 1 348 0
 584 0046 2D4B     		ldr	r3, .L34+20
 585 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 586 004a 2B4B     		ldr	r3, .L34+16
 587 004c 1A70     		strb	r2, [r3]
 349:Application/aUSB/ausb.c **** 		retVal = 1u;
 588              		.loc 1 349 0
 589 004e 0123     		movs	r3, #1
 590 0050 FB71     		strb	r3, [r7, #7]
 591              	.L25:
ARM GAS  /tmp/ccWEpmOb.s 			page 17


 350:Application/aUSB/ausb.c **** 	}else{/*no actions: retVal already initialized with 0*/}
 351:Application/aUSB/ausb.c **** 
 352:Application/aUSB/ausb.c **** 	/*check buttons*/
 353:Application/aUSB/ausb.c **** //User button
 354:Application/aUSB/ausb.c **** 	if ( 0u != abuttons_getBStartPressedTime() )
 592              		.loc 1 354 0
 593 0052 FFF7FEFF 		bl	abuttons_getBStartPressedTime
 594 0056 0346     		mov	r3, r0
 595 0058 002B     		cmp	r3, #0
 596 005a 07D0     		beq	.L26
 355:Application/aUSB/ausb.c **** 	{/*button is pressed*/ /*set bit*/userButtonStatus |= 1u;}
 597              		.loc 1 355 0
 598 005c 284B     		ldr	r3, .L34+24
 599 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 600 0060 43F00103 		orr	r3, r3, #1
 601 0064 DAB2     		uxtb	r2, r3
 602 0066 264B     		ldr	r3, .L34+24
 603 0068 1A70     		strb	r2, [r3]
 604 006a 06E0     		b	.L27
 605              	.L26:
 356:Application/aUSB/ausb.c **** 	else
 357:Application/aUSB/ausb.c **** 	{/*clear bit*/userButtonStatus &= (0xFFu ^ 1u);}
 606              		.loc 1 357 0
 607 006c 244B     		ldr	r3, .L34+24
 608 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609 0070 23F00103 		bic	r3, r3, #1
 610 0074 DAB2     		uxtb	r2, r3
 611 0076 224B     		ldr	r3, .L34+24
 612 0078 1A70     		strb	r2, [r3]
 613              	.L27:
 358:Application/aUSB/ausb.c **** //Shift gears buttons
 359:Application/aUSB/ausb.c **** 	if ( btnShiftDw != 0u )
 614              		.loc 1 359 0
 615 007a 224B     		ldr	r3, .L34+28
 616 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 617 007e 002B     		cmp	r3, #0
 618 0080 07D0     		beq	.L28
 360:Application/aUSB/ausb.c **** 	{/*button pressed*/ /*set bit*/userButtonStatus |= 2u;}
 619              		.loc 1 360 0
 620 0082 1F4B     		ldr	r3, .L34+24
 621 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 622 0086 43F00203 		orr	r3, r3, #2
 623 008a DAB2     		uxtb	r2, r3
 624 008c 1C4B     		ldr	r3, .L34+24
 625 008e 1A70     		strb	r2, [r3]
 626 0090 06E0     		b	.L29
 627              	.L28:
 361:Application/aUSB/ausb.c **** 	else
 362:Application/aUSB/ausb.c **** 	{/*clear bit*/userButtonStatus &= (0xFFu ^ 2u);}
 628              		.loc 1 362 0
 629 0092 1B4B     		ldr	r3, .L34+24
 630 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631 0096 23F00203 		bic	r3, r3, #2
 632 009a DAB2     		uxtb	r2, r3
 633 009c 184B     		ldr	r3, .L34+24
 634 009e 1A70     		strb	r2, [r3]
 635              	.L29:
ARM GAS  /tmp/ccWEpmOb.s 			page 18


 363:Application/aUSB/ausb.c **** 	if ( btnShiftUp != 0u )
 636              		.loc 1 363 0
 637 00a0 194B     		ldr	r3, .L34+32
 638 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 639 00a4 002B     		cmp	r3, #0
 640 00a6 07D0     		beq	.L30
 364:Application/aUSB/ausb.c **** 	{/*button pressed*/ /*set bit*/userButtonStatus |= 4u;}
 641              		.loc 1 364 0
 642 00a8 154B     		ldr	r3, .L34+24
 643 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 644 00ac 43F00403 		orr	r3, r3, #4
 645 00b0 DAB2     		uxtb	r2, r3
 646 00b2 134B     		ldr	r3, .L34+24
 647 00b4 1A70     		strb	r2, [r3]
 648 00b6 06E0     		b	.L31
 649              	.L30:
 365:Application/aUSB/ausb.c **** 	else
 366:Application/aUSB/ausb.c **** 	{/*clear bit*/userButtonStatus &= (0xFFu ^ 4u);}
 650              		.loc 1 366 0
 651 00b8 114B     		ldr	r3, .L34+24
 652 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 653 00bc 23F00403 		bic	r3, r3, #4
 654 00c0 DAB2     		uxtb	r2, r3
 655 00c2 0F4B     		ldr	r3, .L34+24
 656 00c4 1A70     		strb	r2, [r3]
 657              	.L31:
 367:Application/aUSB/ausb.c **** 	
 368:Application/aUSB/ausb.c **** 	if ( userButtonStatus != userButtonStatusOld )
 658              		.loc 1 368 0
 659 00c6 0E4B     		ldr	r3, .L34+24
 660 00c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 661 00ca 104B     		ldr	r3, .L34+36
 662 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 663 00ce 9A42     		cmp	r2, r3
 664 00d0 01D0     		beq	.L32
 369:Application/aUSB/ausb.c **** 	{
 370:Application/aUSB/ausb.c **** 		retVal = 1u;	
 665              		.loc 1 370 0
 666 00d2 0123     		movs	r3, #1
 667 00d4 FB71     		strb	r3, [r7, #7]
 668              	.L32:
 371:Application/aUSB/ausb.c **** 	}
 372:Application/aUSB/ausb.c **** 
 373:Application/aUSB/ausb.c **** 
 374:Application/aUSB/ausb.c **** 	userButtonStatusOld = userButtonStatus;
 669              		.loc 1 374 0
 670 00d6 0A4B     		ldr	r3, .L34+24
 671 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 672 00da 0C4B     		ldr	r3, .L34+36
 673 00dc 1A70     		strb	r2, [r3]
 375:Application/aUSB/ausb.c **** 
 376:Application/aUSB/ausb.c **** 	return retVal;
 674              		.loc 1 376 0
 675 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 377:Application/aUSB/ausb.c **** }
 676              		.loc 1 377 0
 677 00e0 1846     		mov	r0, r3
ARM GAS  /tmp/ccWEpmOb.s 			page 19


 678 00e2 0837     		adds	r7, r7, #8
 679              	.LCFI13:
 680              		.cfi_def_cfa_offset 8
 681 00e4 BD46     		mov	sp, r7
 682              	.LCFI14:
 683              		.cfi_def_cfa_register 13
 684              		@ sp needed
 685 00e6 80BD     		pop	{r7, pc}
 686              	.L35:
 687              		.align	2
 688              	.L34:
 689 00e8 00000000 		.word	magEncPos
 690 00ec 00000000 		.word	amagenc_ssiSample
 691 00f0 00000000 		.word	pAccOld
 692 00f4 00000000 		.word	pAcc
 693 00f8 00000000 		.word	pBrkOld
 694 00fc 00000000 		.word	pBrk
 695 0100 00000000 		.word	userButtonStatus
 696 0104 00000000 		.word	btnShiftDw
 697 0108 00000000 		.word	btnShiftUp
 698 010c 00000000 		.word	userButtonStatusOld.8381
 699              		.cfi_endproc
 700              	.LFE70:
 702              		.section	.text.sendNewHIDSensorsData,"ax",%progbits
 703              		.align	1
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu softvfp
 709              	sendNewHIDSensorsData:
 710              	.LFB71:
 378:Application/aUSB/ausb.c **** 
 379:Application/aUSB/ausb.c **** /*******************************************************************************
 380:Application/aUSB/ausb.c **** * Function Name : sendNewHIDSensorsData
 381:Application/aUSB/ausb.c **** * Description   : prepares buffer with sensors data to be sent.
 382:Application/aUSB/ausb.c **** * Input         : None
 383:Application/aUSB/ausb.c **** * Output        : None.
 384:Application/aUSB/ausb.c **** * Return value  : None.
 385:Application/aUSB/ausb.c **** *******************************************************************************/
 386:Application/aUSB/ausb.c **** static void sendNewHIDSensorsData( void )
 387:Application/aUSB/ausb.c **** {
 711              		.loc 1 387 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 40
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              	.LCFI15:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720 0002 8AB0     		sub	sp, sp, #40
 721              	.LCFI16:
 722              		.cfi_def_cfa_offset 48
 723 0004 00AF     		add	r7, sp, #0
 724              	.LCFI17:
 725              		.cfi_def_cfa_register 7
 388:Application/aUSB/ausb.c ****   if ( 0u == setupEffectOngoing )
ARM GAS  /tmp/ccWEpmOb.s 			page 20


 726              		.loc 1 388 0
 727 0006 3E4B     		ldr	r3, .L39
 728 0008 1B88     		ldrh	r3, [r3]
 729 000a 002B     		cmp	r3, #0
 730 000c 73D1     		bne	.L38
 731              	.LBB2:
 389:Application/aUSB/ausb.c ****   {/*no effect setup is taking place*/
 390:Application/aUSB/ausb.c **** 	uint8_t wheelBuf[AUSB_EP1InMaxPacketSize];
 391:Application/aUSB/ausb.c **** 	uint16_t bufferSize = 0u;
 732              		.loc 1 391 0
 733 000e 0023     		movs	r3, #0
 734 0010 FB84     		strh	r3, [r7, #38]	@ movhi
 392:Application/aUSB/ausb.c **** 	int16_t tWheelPos = 0;
 735              		.loc 1 392 0
 736 0012 0023     		movs	r3, #0
 737 0014 BB84     		strh	r3, [r7, #36]	@ movhi
 393:Application/aUSB/ausb.c **** 	uint16_t tPedal = 0u;
 738              		.loc 1 393 0
 739 0016 0023     		movs	r3, #0
 740 0018 7B84     		strh	r3, [r7, #34]	@ movhi
 394:Application/aUSB/ausb.c **** 
 395:Application/aUSB/ausb.c **** 	tWheelPos = processWheelPos(magEncPos);
 741              		.loc 1 395 0
 742 001a 3A4B     		ldr	r3, .L39+4
 743 001c 1B88     		ldrh	r3, [r3]
 744 001e 1846     		mov	r0, r3
 745 0020 FFF7FEFF 		bl	processWheelPos
 746 0024 0346     		mov	r3, r0
 747 0026 BB84     		strh	r3, [r7, #36]	@ movhi
 396:Application/aUSB/ausb.c **** 	/*convert to range [-0xFFFFu/2, +0xFFFFu/2]*/
 397:Application/aUSB/ausb.c **** 	tWheelPos = 0x7FFF - tWheelPos;
 748              		.loc 1 397 0
 749 0028 BB8C     		ldrh	r3, [r7, #36]
 750 002a C3F5FF43 		rsb	r3, r3, #32640
 751 002e 7F33     		adds	r3, r3, #127
 752 0030 9BB2     		uxth	r3, r3
 753 0032 BB84     		strh	r3, [r7, #36]	@ movhi
 398:Application/aUSB/ausb.c **** 
 399:Application/aUSB/ausb.c **** 	/*Report ID*/
 400:Application/aUSB/ausb.c **** 	wheelBuf[bufferSize++] = 0x01;
 754              		.loc 1 400 0
 755 0034 FB8C     		ldrh	r3, [r7, #38]
 756 0036 5A1C     		adds	r2, r3, #1
 757 0038 FA84     		strh	r2, [r7, #38]	@ movhi
 758 003a 07F12802 		add	r2, r7, #40
 759 003e 1344     		add	r3, r3, r2
 760 0040 0122     		movs	r2, #1
 761 0042 03F8282C 		strb	r2, [r3, #-40]
 401:Application/aUSB/ausb.c **** 	/*X axis - Wheel angle*/
 402:Application/aUSB/ausb.c **** 	wheelBuf[bufferSize++] = (uint8_t)(tWheelPos);				/*LSB - Little EnDian format: LSB is in the lowe
 762              		.loc 1 402 0
 763 0046 FB8C     		ldrh	r3, [r7, #38]
 764 0048 5A1C     		adds	r2, r3, #1
 765 004a FA84     		strh	r2, [r7, #38]	@ movhi
 766 004c BA8C     		ldrh	r2, [r7, #36]	@ movhi
 767 004e D2B2     		uxtb	r2, r2
 768 0050 07F12801 		add	r1, r7, #40
ARM GAS  /tmp/ccWEpmOb.s 			page 21


 769 0054 0B44     		add	r3, r3, r1
 770 0056 03F8282C 		strb	r2, [r3, #-40]
 403:Application/aUSB/ausb.c **** 	wheelBuf[bufferSize++] = (uint8_t)(tWheelPos >> 8);	/*MSB*/ //XXX: for 8 bit resolution update usb
 771              		.loc 1 403 0
 772 005a B7F92430 		ldrsh	r3, [r7, #36]
 773 005e 1B12     		asrs	r3, r3, #8
 774 0060 1AB2     		sxth	r2, r3
 775 0062 FB8C     		ldrh	r3, [r7, #38]
 776 0064 591C     		adds	r1, r3, #1
 777 0066 F984     		strh	r1, [r7, #38]	@ movhi
 778 0068 D2B2     		uxtb	r2, r2
 779 006a 07F12801 		add	r1, r7, #40
 780 006e 0B44     		add	r3, r3, r1
 781 0070 03F8282C 		strb	r2, [r3, #-40]
 404:Application/aUSB/ausb.c **** 	/*Acceleration PEDAL - Y axis*/
 405:Application/aUSB/ausb.c **** 	tPedal = ((uint16_t)pAcc - 25u) * 255u / (225u-25u); /*convert from 25 - 225 to 0-255*/
 782              		.loc 1 405 0
 783 0074 244B     		ldr	r3, .L39+8
 784 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785 0078 1A46     		mov	r2, r3
 786 007a 1346     		mov	r3, r2
 787 007c 1B02     		lsls	r3, r3, #8
 788 007e 9B1A     		subs	r3, r3, r2
 789 0080 A3F5C753 		sub	r3, r3, #6368
 790 0084 073B     		subs	r3, r3, #7
 791 0086 214A     		ldr	r2, .L39+12
 792 0088 A2FB0323 		umull	r2, r3, r2, r3
 793 008c 9B09     		lsrs	r3, r3, #6
 794 008e 7B84     		strh	r3, [r7, #34]	@ movhi
 406:Application/aUSB/ausb.c **** 	wheelBuf[bufferSize++] = (uint8_t)tPedal;
 795              		.loc 1 406 0
 796 0090 FB8C     		ldrh	r3, [r7, #38]
 797 0092 5A1C     		adds	r2, r3, #1
 798 0094 FA84     		strh	r2, [r7, #38]	@ movhi
 799 0096 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 800 0098 D2B2     		uxtb	r2, r2
 801 009a 07F12801 		add	r1, r7, #40
 802 009e 0B44     		add	r3, r3, r1
 803 00a0 03F8282C 		strb	r2, [r3, #-40]
 407:Application/aUSB/ausb.c **** 	/*Brake PEDAL - rZ axis*/
 408:Application/aUSB/ausb.c **** 	tPedal = ((uint16_t)pBrk -25u) * 255u / (225u-25u); /*convert from 25 - 225 to 0-255*/
 804              		.loc 1 408 0
 805 00a4 1A4B     		ldr	r3, .L39+16
 806 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 807 00a8 1A46     		mov	r2, r3
 808 00aa 1346     		mov	r3, r2
 809 00ac 1B02     		lsls	r3, r3, #8
 810 00ae 9B1A     		subs	r3, r3, r2
 811 00b0 A3F5C753 		sub	r3, r3, #6368
 812 00b4 073B     		subs	r3, r3, #7
 813 00b6 154A     		ldr	r2, .L39+12
 814 00b8 A2FB0323 		umull	r2, r3, r2, r3
 815 00bc 9B09     		lsrs	r3, r3, #6
 816 00be 7B84     		strh	r3, [r7, #34]	@ movhi
 409:Application/aUSB/ausb.c **** 	wheelBuf[bufferSize++] = (uint8_t)tPedal;
 817              		.loc 1 409 0
 818 00c0 FB8C     		ldrh	r3, [r7, #38]
ARM GAS  /tmp/ccWEpmOb.s 			page 22


 819 00c2 5A1C     		adds	r2, r3, #1
 820 00c4 FA84     		strh	r2, [r7, #38]	@ movhi
 821 00c6 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 822 00c8 D2B2     		uxtb	r2, r2
 823 00ca 07F12801 		add	r1, r7, #40
 824 00ce 0B44     		add	r3, r3, r1
 825 00d0 03F8282C 		strb	r2, [r3, #-40]
 410:Application/aUSB/ausb.c **** 	/*buttons and hat switch*/
 411:Application/aUSB/ausb.c **** 	wheelBuf[bufferSize++] = userButtonStatus;
 826              		.loc 1 411 0
 827 00d4 FB8C     		ldrh	r3, [r7, #38]
 828 00d6 5A1C     		adds	r2, r3, #1
 829 00d8 FA84     		strh	r2, [r7, #38]	@ movhi
 830 00da 1946     		mov	r1, r3
 831 00dc 0D4B     		ldr	r3, .L39+20
 832 00de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 833 00e0 07F12803 		add	r3, r7, #40
 834 00e4 0B44     		add	r3, r3, r1
 835 00e6 03F8282C 		strb	r2, [r3, #-40]
 412:Application/aUSB/ausb.c **** 
 413:Application/aUSB/ausb.c **** 	USBD_HID_SendReport(&hUsbDeviceFS,wheelBuf,bufferSize);
 836              		.loc 1 413 0
 837 00ea FA8C     		ldrh	r2, [r7, #38]
 838 00ec 3B46     		mov	r3, r7
 839 00ee 1946     		mov	r1, r3
 840 00f0 0948     		ldr	r0, .L39+24
 841 00f2 FFF7FEFF 		bl	USBD_HID_SendReport
 842              	.L38:
 843              	.LBE2:
 414:Application/aUSB/ausb.c ****   }else{/*setup stage ongoing so do not send this report*/}
 415:Application/aUSB/ausb.c **** 
 416:Application/aUSB/ausb.c **** }
 844              		.loc 1 416 0
 845 00f6 00BF     		nop
 846 00f8 2837     		adds	r7, r7, #40
 847              	.LCFI18:
 848              		.cfi_def_cfa_offset 8
 849 00fa BD46     		mov	sp, r7
 850              	.LCFI19:
 851              		.cfi_def_cfa_register 13
 852              		@ sp needed
 853 00fc 80BD     		pop	{r7, pc}
 854              	.L40:
 855 00fe 00BF     		.align	2
 856              	.L39:
 857 0100 00000000 		.word	setupEffectOngoing
 858 0104 00000000 		.word	magEncPos
 859 0108 00000000 		.word	pAcc
 860 010c 1F85EB51 		.word	1374389535
 861 0110 00000000 		.word	pBrk
 862 0114 00000000 		.word	userButtonStatus
 863 0118 00000000 		.word	hUsbDeviceFS
 864              		.cfi_endproc
 865              	.LFE71:
 867              		.section	.text.ausb_initEffectsData,"ax",%progbits
 868              		.align	1
 869              		.global	ausb_initEffectsData
ARM GAS  /tmp/ccWEpmOb.s 			page 23


 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 873              		.fpu softvfp
 875              	ausb_initEffectsData:
 876              	.LFB72:
 417:Application/aUSB/ausb.c **** 
 418:Application/aUSB/ausb.c **** void ausb_initEffectsData( void )
 419:Application/aUSB/ausb.c **** {
 877              		.loc 1 419 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 882 0000 80B4     		push	{r7}
 883              	.LCFI20:
 884              		.cfi_def_cfa_offset 4
 885              		.cfi_offset 7, -4
 886 0002 00AF     		add	r7, sp, #0
 887              	.LCFI21:
 888              		.cfi_def_cfa_register 7
 420:Application/aUSB/ausb.c **** 	ausb_effectData.duration = 100; 	/* 100 = 1 mSec*/
 889              		.loc 1 420 0
 890 0004 154B     		ldr	r3, .L42
 891 0006 6422     		movs	r2, #100
 892 0008 1A80     		strh	r2, [r3]	@ movhi
 421:Application/aUSB/ausb.c **** 	ausb_effectData.gain = 50;			/* 50%*/
 893              		.loc 1 421 0
 894 000a 144B     		ldr	r3, .L42
 895 000c 3222     		movs	r2, #50
 896 000e 9A70     		strb	r2, [r3, #2]
 422:Application/aUSB/ausb.c **** 	ausb_effectData.direction = 1;				/* 1 - towards right FixMe is this right or left?*/
 897              		.loc 1 422 0
 898 0010 124B     		ldr	r3, .L42
 899 0012 0122     		movs	r2, #1
 900 0014 DA70     		strb	r2, [r3, #3]
 423:Application/aUSB/ausb.c **** 	ausb_effectData.envelopeAttackLevel = 0;
 901              		.loc 1 423 0
 902 0016 114B     		ldr	r3, .L42
 903 0018 0022     		movs	r2, #0
 904 001a 9A71     		strb	r2, [r3, #6]
 424:Application/aUSB/ausb.c **** 	ausb_effectData.envelopeFadeLevel = 0;
 905              		.loc 1 424 0
 906 001c 0F4B     		ldr	r3, .L42
 907 001e 0022     		movs	r2, #0
 908 0020 DA71     		strb	r2, [r3, #7]
 425:Application/aUSB/ausb.c **** 	ausb_effectData.envelopeAttackTime = 0;
 909              		.loc 1 425 0
 910 0022 0E4B     		ldr	r3, .L42
 911 0024 0022     		movs	r2, #0
 912 0026 1A81     		strh	r2, [r3, #8]	@ movhi
 426:Application/aUSB/ausb.c **** 	ausb_effectData.envelopeFadeTime = 0;
 913              		.loc 1 426 0
 914 0028 0C4B     		ldr	r3, .L42
 915 002a 0022     		movs	r2, #0
 916 002c 5A81     		strh	r2, [r3, #10]	@ movhi
 427:Application/aUSB/ausb.c **** 	ausb_effectData.constantForceMagnitude = AUSB_MAX_MAGNITUDE / 2;
ARM GAS  /tmp/ccWEpmOb.s 			page 24


 917              		.loc 1 427 0
 918 002e 0B4B     		ldr	r3, .L42
 919 0030 41F28832 		movw	r2, #5000
 920 0034 9A81     		strh	r2, [r3, #12]	@ movhi
 428:Application/aUSB/ausb.c **** 
 429:Application/aUSB/ausb.c **** 	ausb_effectDataLoopCnt = 0u;
 921              		.loc 1 429 0
 922 0036 0A4B     		ldr	r3, .L42+4
 923 0038 0022     		movs	r2, #0
 924 003a 1A70     		strb	r2, [r3]
 430:Application/aUSB/ausb.c **** 
 431:Application/aUSB/ausb.c **** 	ausb_effectOnTimer = 0;
 925              		.loc 1 431 0
 926 003c 094B     		ldr	r3, .L42+8
 927 003e 0022     		movs	r2, #0
 928 0040 1A80     		strh	r2, [r3]	@ movhi
 432:Application/aUSB/ausb.c **** 	ausb_effectRepeatCnt = 0;
 929              		.loc 1 432 0
 930 0042 094B     		ldr	r3, .L42+12
 931 0044 0022     		movs	r2, #0
 932 0046 1A80     		strh	r2, [r3]	@ movhi
 433:Application/aUSB/ausb.c **** 
 434:Application/aUSB/ausb.c **** 	ausb_OperationReportEffectIdx = 0u;
 933              		.loc 1 434 0
 934 0048 084B     		ldr	r3, .L42+16
 935 004a 0022     		movs	r2, #0
 936 004c 1A70     		strb	r2, [r3]
 435:Application/aUSB/ausb.c **** 	setupEffectOngoing = 0u;
 937              		.loc 1 435 0
 938 004e 084B     		ldr	r3, .L42+20
 939 0050 0022     		movs	r2, #0
 940 0052 1A80     		strh	r2, [r3]	@ movhi
 436:Application/aUSB/ausb.c **** 	//constantForceEffectCreated = 0u;
 437:Application/aUSB/ausb.c **** }
 941              		.loc 1 437 0
 942 0054 00BF     		nop
 943 0056 BD46     		mov	sp, r7
 944              	.LCFI22:
 945              		.cfi_def_cfa_register 13
 946              		@ sp needed
 947 0058 80BC     		pop	{r7}
 948              	.LCFI23:
 949              		.cfi_restore 7
 950              		.cfi_def_cfa_offset 0
 951 005a 7047     		bx	lr
 952              	.L43:
 953              		.align	2
 954              	.L42:
 955 005c 00000000 		.word	ausb_effectData
 956 0060 00000000 		.word	ausb_effectDataLoopCnt
 957 0064 00000000 		.word	ausb_effectOnTimer
 958 0068 00000000 		.word	ausb_effectRepeatCnt
 959 006c 00000000 		.word	ausb_OperationReportEffectIdx
 960 0070 00000000 		.word	setupEffectOngoing
 961              		.cfi_endproc
 962              	.LFE72:
 964              		.section	.text.ausb_physicalInterfaceSM,"ax",%progbits
ARM GAS  /tmp/ccWEpmOb.s 			page 25


 965              		.align	1
 966              		.global	ausb_physicalInterfaceSM
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 970              		.fpu softvfp
 972              	ausb_physicalInterfaceSM:
 973              	.LFB73:
 438:Application/aUSB/ausb.c **** 
 439:Application/aUSB/ausb.c **** void ausb_physicalInterfaceSM( void )
 440:Application/aUSB/ausb.c **** {
 974              		.loc 1 440 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 48
 977              		@ frame_needed = 1, uses_anonymous_args = 0
 978 0000 80B5     		push	{r7, lr}
 979              	.LCFI24:
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 8CB0     		sub	sp, sp, #48
 984              	.LCFI25:
 985              		.cfi_def_cfa_offset 56
 986 0004 00AF     		add	r7, sp, #0
 987              	.LCFI26:
 988              		.cfi_def_cfa_register 7
 441:Application/aUSB/ausb.c **** 	volatile uint32_t receivedDataSize = 0;
 989              		.loc 1 441 0
 990 0006 0023     		movs	r3, #0
 991 0008 7B62     		str	r3, [r7, #36]
 442:Application/aUSB/ausb.c **** 	USBD_HandleTypeDef *pdev;
 443:Application/aUSB/ausb.c **** 
 444:Application/aUSB/ausb.c **** 	pdev = (USBD_HandleTypeDef*)(hpcd_USB_FS.pData);
 992              		.loc 1 444 0
 993 000a 624B     		ldr	r3, .L54
 994 000c D3F85C34 		ldr	r3, [r3, #1116]
 995 0010 FB62     		str	r3, [r7, #44]
 445:Application/aUSB/ausb.c **** 	/*perform actions for new constant force magnitude value*/
 446:Application/aUSB/ausb.c **** 	if ( 0u != (ausb_flags & AUSB_CONSTANT_FORCE_UPDATED) )
 996              		.loc 1 446 0
 997 0012 614B     		ldr	r3, .L54+4
 998 0014 1B78     		ldrb	r3, [r3]
 999 0016 DBB2     		uxtb	r3, r3
 1000 0018 03F02003 		and	r3, r3, #32
 1001 001c 002B     		cmp	r3, #0
 1002 001e 0DD0     		beq	.L45
 447:Application/aUSB/ausb.c **** 	{/*new magnitude value received*/
 448:Application/aUSB/ausb.c **** 		affmotor_updatePwmDC(/*ausb_effectData.direction,*/ausb_effectData.constantForceMagnitude);
 1003              		.loc 1 448 0
 1004 0020 5E4B     		ldr	r3, .L54+8
 1005 0022 B3F90C30 		ldrsh	r3, [r3, #12]
 1006 0026 1846     		mov	r0, r3
 1007 0028 FFF7FEFF 		bl	affmotor_updatePwmDC
 449:Application/aUSB/ausb.c **** 		/*clear flag*/
 450:Application/aUSB/ausb.c **** 		ausb_flags &= (0xFF^AUSB_CONSTANT_FORCE_UPDATED);
 1008              		.loc 1 450 0
 1009 002c 5A4B     		ldr	r3, .L54+4
ARM GAS  /tmp/ccWEpmOb.s 			page 26


 1010 002e 1B78     		ldrb	r3, [r3]
 1011 0030 DBB2     		uxtb	r3, r3
 1012 0032 23F02003 		bic	r3, r3, #32
 1013 0036 DAB2     		uxtb	r2, r3
 1014 0038 574B     		ldr	r3, .L54+4
 1015 003a 1A70     		strb	r2, [r3]
 1016              	.L45:
 451:Application/aUSB/ausb.c **** 	}
 452:Application/aUSB/ausb.c **** 
 453:Application/aUSB/ausb.c **** 	if ( AUSB_NEW_CONTROL_EVENT == (ausb_flags & AUSB_NEW_CONTROL_EVENT) )
 1017              		.loc 1 453 0
 1018 003c 564B     		ldr	r3, .L54+4
 1019 003e 1B78     		ldrb	r3, [r3]
 1020 0040 DBB2     		uxtb	r3, r3
 1021 0042 03F00103 		and	r3, r3, #1
 1022 0046 012B     		cmp	r3, #1
 1023 0048 09D1     		bne	.L46
 454:Application/aUSB/ausb.c **** 	{/*new PID control event happened*/
 455:Application/aUSB/ausb.c **** 		onNewControlEvent();
 1024              		.loc 1 455 0
 1025 004a FFF7FEFF 		bl	onNewControlEvent
 456:Application/aUSB/ausb.c **** 		ausb_flags &= (0xFF^AUSB_NEW_CONTROL_EVENT); //clear flag
 1026              		.loc 1 456 0
 1027 004e 524B     		ldr	r3, .L54+4
 1028 0050 1B78     		ldrb	r3, [r3]
 1029 0052 DBB2     		uxtb	r3, r3
 1030 0054 23F00103 		bic	r3, r3, #1
 1031 0058 DAB2     		uxtb	r2, r3
 1032 005a 4F4B     		ldr	r3, .L54+4
 1033 005c 1A70     		strb	r2, [r3]
 1034              	.L46:
 457:Application/aUSB/ausb.c **** 	}else{/*no action*/}
 458:Application/aUSB/ausb.c **** 
 459:Application/aUSB/ausb.c **** 	if ( 0u != sendPidStatus )
 1035              		.loc 1 459 0
 1036 005e 504B     		ldr	r3, .L54+12
 1037 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1038 0062 002B     		cmp	r3, #0
 1039 0064 2FD0     		beq	.L47
 1040              	.LBB3:
 460:Application/aUSB/ausb.c **** 	{
 461:Application/aUSB/ausb.c **** 		uint8_t stateReportBuf[AUSB_EP1InMaxPacketSize];
 462:Application/aUSB/ausb.c ****   		uint16_t bufferSize = 0u;
 1041              		.loc 1 462 0
 1042 0066 0023     		movs	r3, #0
 1043 0068 7B85     		strh	r3, [r7, #42]	@ movhi
 463:Application/aUSB/ausb.c **** 		if ( HID_IDLE == ((USBD_HID_HandleTypeDef *)hUsbDeviceFS.pClassData)->state )
 1044              		.loc 1 463 0
 1045 006a 4E4B     		ldr	r3, .L54+16
 1046 006c D3F81832 		ldr	r3, [r3, #536]
 1047 0070 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1048 0072 002B     		cmp	r3, #0
 1049 0074 27D1     		bne	.L47
 464:Application/aUSB/ausb.c **** 		{
 465:Application/aUSB/ausb.c **** 			/*send state report*/
 466:Application/aUSB/ausb.c **** 			stateReportBuf[bufferSize++]=2u;/*report id 2 - pid state report*/
 1050              		.loc 1 466 0
ARM GAS  /tmp/ccWEpmOb.s 			page 27


 1051 0076 7B8D     		ldrh	r3, [r7, #42]
 1052 0078 5A1C     		adds	r2, r3, #1
 1053 007a 7A85     		strh	r2, [r7, #42]	@ movhi
 1054 007c 07F13002 		add	r2, r7, #48
 1055 0080 1344     		add	r3, r3, r2
 1056 0082 0222     		movs	r2, #2
 1057 0084 03F82C2C 		strb	r2, [r3, #-44]
 467:Application/aUSB/ausb.c **** 			stateReportBuf[bufferSize++]=ausb_OperationReportEffectIdx;/*effect block index (or parameter bl
 1058              		.loc 1 467 0
 1059 0088 7B8D     		ldrh	r3, [r7, #42]
 1060 008a 5A1C     		adds	r2, r3, #1
 1061 008c 7A85     		strh	r2, [r7, #42]	@ movhi
 1062 008e 1946     		mov	r1, r3
 1063 0090 454B     		ldr	r3, .L54+20
 1064 0092 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1065 0094 07F13003 		add	r3, r7, #48
 1066 0098 0B44     		add	r3, r3, r1
 1067 009a 03F82C2C 		strb	r2, [r3, #-44]
 468:Application/aUSB/ausb.c **** 			stateReportBuf[bufferSize++]=ausb_pidOperation;/*pid operation*/
 1068              		.loc 1 468 0
 1069 009e 7B8D     		ldrh	r3, [r7, #42]
 1070 00a0 5A1C     		adds	r2, r3, #1
 1071 00a2 7A85     		strh	r2, [r7, #42]	@ movhi
 1072 00a4 1946     		mov	r1, r3
 1073 00a6 414B     		ldr	r3, .L54+24
 1074 00a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1075 00aa 07F13003 		add	r3, r7, #48
 1076 00ae 0B44     		add	r3, r3, r1
 1077 00b0 03F82C2C 		strb	r2, [r3, #-44]
 469:Application/aUSB/ausb.c **** 			USBD_HID_SendReport(&hUsbDeviceFS,stateReportBuf,bufferSize);
 1078              		.loc 1 469 0
 1079 00b4 7A8D     		ldrh	r2, [r7, #42]
 1080 00b6 3B1D     		adds	r3, r7, #4
 1081 00b8 1946     		mov	r1, r3
 1082 00ba 3A48     		ldr	r0, .L54+16
 1083 00bc FFF7FEFF 		bl	USBD_HID_SendReport
 470:Application/aUSB/ausb.c **** 			
 471:Application/aUSB/ausb.c **** 			sendPidStatus = 0u;
 1084              		.loc 1 471 0
 1085 00c0 374B     		ldr	r3, .L54+12
 1086 00c2 0022     		movs	r2, #0
 1087 00c4 1A70     		strb	r2, [r3]
 1088              	.L47:
 1089              	.LBE3:
 472:Application/aUSB/ausb.c **** 		}
 473:Application/aUSB/ausb.c **** 		else
 474:Application/aUSB/ausb.c **** 		{/*HID is busy*/
 475:Application/aUSB/ausb.c **** 			/*sendPidStatus flag is not cleared so we try again to send status on next call*/
 476:Application/aUSB/ausb.c **** 		}
 477:Application/aUSB/ausb.c **** 	}
 478:Application/aUSB/ausb.c **** 	/*check and perform setup events actions*/
 479:Application/aUSB/ausb.c **** 	if ( evPidPoolReport == ausb_pidEvent )
 1090              		.loc 1 479 0
 1091 00c6 3A4B     		ldr	r3, .L54+28
 1092 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1093 00ca 062B     		cmp	r3, #6
 1094 00cc 16D1     		bne	.L49
ARM GAS  /tmp/ccWEpmOb.s 			page 28


 480:Application/aUSB/ausb.c **** 	{
 481:Application/aUSB/ausb.c **** 
 482:Application/aUSB/ausb.c **** 		pidbuf[0] = 0x01;	//Report ID
 1095              		.loc 1 482 0
 1096 00ce 394B     		ldr	r3, .L54+32
 1097 00d0 0122     		movs	r2, #1
 1098 00d2 1A70     		strb	r2, [r3]
 483:Application/aUSB/ausb.c **** 		pidbuf[1] = 0x20; //RAM pool size /*XXX: was 0x20 - 32 but I think it doesn't matter because the 
 1099              		.loc 1 483 0
 1100 00d4 374B     		ldr	r3, .L54+32
 1101 00d6 2022     		movs	r2, #32
 1102 00d8 5A70     		strb	r2, [r3, #1]
 484:Application/aUSB/ausb.c **** 		pidbuf[2] = 0x00; //RAM pool size
 1103              		.loc 1 484 0
 1104 00da 364B     		ldr	r3, .L54+32
 1105 00dc 0022     		movs	r2, #0
 1106 00de 9A70     		strb	r2, [r3, #2]
 485:Application/aUSB/ausb.c **** 		pidbuf[3] = 0x01; //simultaneous effects max
 1107              		.loc 1 485 0
 1108 00e0 344B     		ldr	r3, .L54+32
 1109 00e2 0122     		movs	r2, #1
 1110 00e4 DA70     		strb	r2, [r3, #3]
 486:Application/aUSB/ausb.c **** 		pidbuf[4] = 0x03; //bit 0 - device managed pool, bit 1 - shared parameters block, bit 2..7 - pad
 1111              		.loc 1 486 0
 1112 00e6 334B     		ldr	r3, .L54+32
 1113 00e8 0322     		movs	r2, #3
 1114 00ea 1A71     		strb	r2, [r3, #4]
 487:Application/aUSB/ausb.c **** 	
 488:Application/aUSB/ausb.c **** 		USBD_CtlSendData (pdev, pidbuf, 5);
 1115              		.loc 1 488 0
 1116 00ec 0522     		movs	r2, #5
 1117 00ee 3149     		ldr	r1, .L54+32
 1118 00f0 F86A     		ldr	r0, [r7, #44]
 1119 00f2 FFF7FEFF 		bl	USBD_CtlSendData
 489:Application/aUSB/ausb.c **** 		
 490:Application/aUSB/ausb.c **** 		ausb_pidEvent = evNone;
 1120              		.loc 1 490 0
 1121 00f6 2E4B     		ldr	r3, .L54+28
 1122 00f8 0022     		movs	r2, #0
 1123 00fa 1A70     		strb	r2, [r3]
 1124              	.L49:
 491:Application/aUSB/ausb.c **** 	
 492:Application/aUSB/ausb.c **** 	}
 493:Application/aUSB/ausb.c **** 
 494:Application/aUSB/ausb.c **** 	if ( evCreateNewEffectSetReport == ausb_pidEvent )
 1125              		.loc 1 494 0
 1126 00fc 2C4B     		ldr	r3, .L54+28
 1127 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1128 0100 012B     		cmp	r3, #1
 1129 0102 0FD1     		bne	.L50
 495:Application/aUSB/ausb.c **** 	{
 496:Application/aUSB/ausb.c **** 		setupEffectOngoing = 1000u;
 1130              		.loc 1 496 0
 1131 0104 2C4B     		ldr	r3, .L54+36
 1132 0106 4FF47A72 		mov	r2, #1000
 1133 010a 1A80     		strh	r2, [r3]	@ movhi
 497:Application/aUSB/ausb.c **** 		
ARM GAS  /tmp/ccWEpmOb.s 			page 29


 498:Application/aUSB/ausb.c **** 		ausb_pidEvent = evNone;
 1134              		.loc 1 498 0
 1135 010c 284B     		ldr	r3, .L54+28
 1136 010e 0022     		movs	r2, #0
 1137 0110 1A70     		strb	r2, [r3]
 499:Application/aUSB/ausb.c **** 		receivedDataSize = 3u; /*or get it from the wLength parameter of the report 0x0303 (Feature, Crea
 1138              		.loc 1 499 0
 1139 0112 0323     		movs	r3, #3
 1140 0114 7B62     		str	r3, [r7, #36]
 500:Application/aUSB/ausb.c **** 		/*get the data*/
 501:Application/aUSB/ausb.c **** 		USBD_CtlPrepareRx(pdev,usbd_hid_EP0rxBuf, receivedDataSize);
 1141              		.loc 1 501 0
 1142 0116 7B6A     		ldr	r3, [r7, #36]
 1143 0118 9BB2     		uxth	r3, r3
 1144 011a 1A46     		mov	r2, r3
 1145 011c 2749     		ldr	r1, .L54+40
 1146 011e F86A     		ldr	r0, [r7, #44]
 1147 0120 FFF7FEFF 		bl	USBD_CtlPrepareRx
 1148              	.L50:
 502:Application/aUSB/ausb.c **** 
 503:Application/aUSB/ausb.c **** 	}
 504:Application/aUSB/ausb.c **** 	if ( evCreateNewEffectDataStage == ausb_pidEvent )
 1149              		.loc 1 504 0
 1150 0124 224B     		ldr	r3, .L54+28
 1151 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 0128 022B     		cmp	r3, #2
 1153 012a 02D1     		bne	.L51
 505:Application/aUSB/ausb.c **** 	{
 506:Application/aUSB/ausb.c **** 		ausb_pidEvent = evNone;
 1154              		.loc 1 506 0
 1155 012c 204B     		ldr	r3, .L54+28
 1156 012e 0022     		movs	r2, #0
 1157 0130 1A70     		strb	r2, [r3]
 1158              	.L51:
 507:Application/aUSB/ausb.c **** 		// /*check second byte: effect type*/
 508:Application/aUSB/ausb.c **** 		if ( 0x01 == usbd_hid_EP0rxBuf[1] )
 509:Application/aUSB/ausb.c **** 		{/*0x01 - constant force report*/
 510:Application/aUSB/ausb.c **** 			/*this report id is supported*/
 511:Application/aUSB/ausb.c **** 		}
 512:Application/aUSB/ausb.c **** 	}
 513:Application/aUSB/ausb.c **** 	if ( evPidBlockLoadGetReport == ausb_pidEvent )
 1159              		.loc 1 513 0
 1160 0132 1F4B     		ldr	r3, .L54+28
 1161 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1162 0136 052B     		cmp	r3, #5
 1163 0138 13D1     		bne	.L52
 514:Application/aUSB/ausb.c **** 	{
 515:Application/aUSB/ausb.c **** 		ausb_pidEvent = evNone;
 1164              		.loc 1 515 0
 1165 013a 1D4B     		ldr	r3, .L54+28
 1166 013c 0022     		movs	r2, #0
 1167 013e 1A70     		strb	r2, [r3]
 516:Application/aUSB/ausb.c **** 		//phyIntDevState = s06Wait4ParametersDownloadSetReportReq;
 517:Application/aUSB/ausb.c **** 
 518:Application/aUSB/ausb.c **** 		pidbuf[0] = 0x04;	//Report ID
 1168              		.loc 1 518 0
 1169 0140 1C4B     		ldr	r3, .L54+32
ARM GAS  /tmp/ccWEpmOb.s 			page 30


 1170 0142 0422     		movs	r2, #4
 1171 0144 1A70     		strb	r2, [r3]
 519:Application/aUSB/ausb.c **** 		// if ( 0u == constantForceEffectCreated )
 520:Application/aUSB/ausb.c **** 		// {
 521:Application/aUSB/ausb.c **** 			pidbuf[1] = 1; //Effect block index FixMe for now is always 1 ( see if a proper effect buffer is
 1172              		.loc 1 521 0
 1173 0146 1B4B     		ldr	r3, .L54+32
 1174 0148 0122     		movs	r2, #1
 1175 014a 5A70     		strb	r2, [r3, #1]
 522:Application/aUSB/ausb.c **** 			pidbuf[2] = 1; //Block Load Status: 1 - Block load success; 2 - Block load full (out of memory);
 1176              		.loc 1 522 0
 1177 014c 194B     		ldr	r3, .L54+32
 1178 014e 0122     		movs	r2, #1
 1179 0150 9A70     		strb	r2, [r3, #2]
 523:Application/aUSB/ausb.c **** 			//constantForceEffectCreated = 1u;
 524:Application/aUSB/ausb.c **** 		// }
 525:Application/aUSB/ausb.c **** 		// else
 526:Application/aUSB/ausb.c **** 		// {/*effect is created already*/
 527:Application/aUSB/ausb.c **** 		// 	pidbuf[1] = 0;
 528:Application/aUSB/ausb.c **** 		// 	pidbuf[2] = 2;
 529:Application/aUSB/ausb.c **** 		// }
 530:Application/aUSB/ausb.c **** 		
 531:Application/aUSB/ausb.c **** 		/*RAM Pool Available: 1 bytes of data*/
 532:Application/aUSB/ausb.c **** 		pidbuf[3] = 0x20; /*was 0x10 maybe by mistake 10b == 2*/ /*should be LSB FixMe if not*/
 1180              		.loc 1 532 0
 1181 0152 184B     		ldr	r3, .L54+32
 1182 0154 2022     		movs	r2, #32
 1183 0156 DA70     		strb	r2, [r3, #3]
 533:Application/aUSB/ausb.c **** 		// pidbuf[4] = 0x00; /*should be MSB*/
 534:Application/aUSB/ausb.c **** 
 535:Application/aUSB/ausb.c **** 		USBD_CtlSendData (pdev, pidbuf, 4); //last byte was 6 but on pid1_01.pdf page 43 only 5 bytes are
 1184              		.loc 1 535 0
 1185 0158 0422     		movs	r2, #4
 1186 015a 1649     		ldr	r1, .L54+32
 1187 015c F86A     		ldr	r0, [r7, #44]
 1188 015e FFF7FEFF 		bl	USBD_CtlSendData
 1189              	.L52:
 536:Application/aUSB/ausb.c **** 	}
 537:Application/aUSB/ausb.c **** 	if ( evFreeEffectSetReport == ausb_pidEvent )
 1190              		.loc 1 537 0
 1191 0162 134B     		ldr	r3, .L54+28
 1192 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0166 072B     		cmp	r3, #7
 1194 0168 10D1     		bne	.L53
 538:Application/aUSB/ausb.c **** 	{
 539:Application/aUSB/ausb.c **** 		affmotor_updatePwmDC(/*0,*/ 0);
 1195              		.loc 1 539 0
 1196 016a 0020     		movs	r0, #0
 1197 016c FFF7FEFF 		bl	affmotor_updatePwmDC
 540:Application/aUSB/ausb.c **** 		AUSB_STOP_ACTUATOR	
 1198              		.loc 1 540 0
 1199 0170 FFF7FEFF 		bl	affmotor_stop
 541:Application/aUSB/ausb.c **** 		
 542:Application/aUSB/ausb.c **** 		ausb_pidEvent = evNone;
 1200              		.loc 1 542 0
 1201 0174 0E4B     		ldr	r3, .L54+28
 1202 0176 0022     		movs	r2, #0
ARM GAS  /tmp/ccWEpmOb.s 			page 31


 1203 0178 1A70     		strb	r2, [r3]
 543:Application/aUSB/ausb.c **** 
 544:Application/aUSB/ausb.c **** 		receivedDataSize = 2u; /*or get it from the wLength parameter of the report 0x0303 (Feature, Crea
 1204              		.loc 1 544 0
 1205 017a 0223     		movs	r3, #2
 1206 017c 7B62     		str	r3, [r7, #36]
 545:Application/aUSB/ausb.c **** 		/*get the data*/
 546:Application/aUSB/ausb.c **** 		USBD_CtlPrepareRx(pdev,usbd_hid_EP0rxBuf, receivedDataSize);
 1207              		.loc 1 546 0
 1208 017e 7B6A     		ldr	r3, [r7, #36]
 1209 0180 9BB2     		uxth	r3, r3
 1210 0182 1A46     		mov	r2, r3
 1211 0184 0D49     		ldr	r1, .L54+40
 1212 0186 F86A     		ldr	r0, [r7, #44]
 1213 0188 FFF7FEFF 		bl	USBD_CtlPrepareRx
 1214              	.L53:
 547:Application/aUSB/ausb.c **** 		
 548:Application/aUSB/ausb.c **** 	}
 549:Application/aUSB/ausb.c **** 	if ( evFreeEffectSetReportDataStage == ausb_pidEvent )
 550:Application/aUSB/ausb.c **** 	{
 551:Application/aUSB/ausb.c **** 		//constantForceEffectCreated = 0u;
 552:Application/aUSB/ausb.c **** 
 553:Application/aUSB/ausb.c **** 	}
 554:Application/aUSB/ausb.c **** 
 555:Application/aUSB/ausb.c **** }
 1215              		.loc 1 555 0
 1216 018c 00BF     		nop
 1217 018e 3037     		adds	r7, r7, #48
 1218              	.LCFI27:
 1219              		.cfi_def_cfa_offset 8
 1220 0190 BD46     		mov	sp, r7
 1221              	.LCFI28:
 1222              		.cfi_def_cfa_register 13
 1223              		@ sp needed
 1224 0192 80BD     		pop	{r7, pc}
 1225              	.L55:
 1226              		.align	2
 1227              	.L54:
 1228 0194 00000000 		.word	hpcd_USB_FS
 1229 0198 00000000 		.word	ausb_flags
 1230 019c 00000000 		.word	ausb_effectData
 1231 01a0 00000000 		.word	sendPidStatus
 1232 01a4 00000000 		.word	hUsbDeviceFS
 1233 01a8 00000000 		.word	ausb_OperationReportEffectIdx
 1234 01ac 00000000 		.word	ausb_pidOperation
 1235 01b0 00000000 		.word	ausb_pidEvent
 1236 01b4 00000000 		.word	pidbuf
 1237 01b8 00000000 		.word	setupEffectOngoing
 1238 01bc 00000000 		.word	usbd_hid_EP0rxBuf
 1239              		.cfi_endproc
 1240              	.LFE73:
 1242              		.section	.text.processWheelPos,"ax",%progbits
 1243              		.align	1
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1247              		.fpu softvfp
ARM GAS  /tmp/ccWEpmOb.s 			page 32


 1249              	processWheelPos:
 1250              	.LFB74:
 556:Application/aUSB/ausb.c **** 
 557:Application/aUSB/ausb.c **** #define WHEELPOS_RESOLUTION_BITS 10u
 558:Application/aUSB/ausb.c **** #if ( WHEELPOS_RESOLUTION_BITS > 14u )
 559:Application/aUSB/ausb.c **** #error Function processWheelPos might not work correctly on resolution > 14 bits as overflow of uin
 560:Application/aUSB/ausb.c **** #endif
 561:Application/aUSB/ausb.c **** #define WHEELPOS_RAW_VAL_MASK (0xFFFFu >> ( 16u - WHEELPOS_RESOLUTION_BITS ) )
 562:Application/aUSB/ausb.c **** #define WHEELPOS_RAW_MAX_VAL ( ( (uint16_t)(1u) << WHEELPOS_RESOLUTION_BITS ) - 1u )
 563:Application/aUSB/ausb.c **** #define WHEELPOS_OVERFLOW_THRESHOLD 255u
 564:Application/aUSB/ausb.c **** #define WHEELPOS_RAW_MAX_MINUS_THRESHOLD (WHEELPOS_RAW_MAX_VAL - WHEELPOS_OVERFLOW_THRESHOLD)
 565:Application/aUSB/ausb.c **** #define WHEELPOS_ONE_WHEEL_ROTATION_IN_SENSOR_ROTATIONS	1367  /*1.367 calculated from the values mo
 566:Application/aUSB/ausb.c **** #define WHEELPOS_MAX_VAL (uint16_t)(( (uint32_t)(WHEELPOS_RAW_MAX_VAL) * WHEELPOS_ONE_WHEEL_ROTATIO
 567:Application/aUSB/ausb.c **** #define WHEELPOS_TOLERANCE 25u
 568:Application/aUSB/ausb.c **** 
 569:Application/aUSB/ausb.c **** /*wheel turns more that 1 time so overflow must be taken into account*/
 570:Application/aUSB/ausb.c **** static uint16_t processWheelPos( uint16_t mePos )
 571:Application/aUSB/ausb.c **** {
 1251              		.loc 1 571 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 16
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255              		@ link register save eliminated.
 1256 0000 80B4     		push	{r7}
 1257              	.LCFI29:
 1258              		.cfi_def_cfa_offset 4
 1259              		.cfi_offset 7, -4
 1260 0002 85B0     		sub	sp, sp, #20
 1261              	.LCFI30:
 1262              		.cfi_def_cfa_offset 24
 1263 0004 00AF     		add	r7, sp, #0
 1264              	.LCFI31:
 1265              		.cfi_def_cfa_register 7
 1266 0006 0346     		mov	r3, r0
 1267 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 572:Application/aUSB/ausb.c **** 	/*magnetic encoder chip is configured for 10 bits by default but because
 573:Application/aUSB/ausb.c **** 	the SPI peripheral is used to get the values 16 bits are retreived so first 6 MSbits are not used*
 574:Application/aUSB/ausb.c **** 	uint16_t wheepPosRaw = mePos & WHEELPOS_RAW_VAL_MASK;//1023u-(mePos << 6);
 1268              		.loc 1 574 0
 1269 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
 1270 000c C3F30903 		ubfx	r3, r3, #0, #10
 1271 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 575:Application/aUSB/ausb.c **** 	uint32_t tWheelPos = 0x0u;
 1272              		.loc 1 575 0
 1273 0012 0023     		movs	r3, #0
 1274 0014 BB60     		str	r3, [r7, #8]
 576:Application/aUSB/ausb.c **** 
 577:Application/aUSB/ausb.c **** 	if ( 0xFFFFu == wheelPosMin )
 1275              		.loc 1 577 0
 1276 0016 444B     		ldr	r3, .L67
 1277 0018 1B88     		ldrh	r3, [r3]
 1278 001a 4FF6FF72 		movw	r2, #65535
 1279 001e 9342     		cmp	r3, r2
 1280 0020 14D1     		bne	.L57
 578:Application/aUSB/ausb.c **** 	{/*wheel is not calibrated yet - min value not set*/
 579:Application/aUSB/ausb.c **** 		if ( 0u != btnShiftDw )
 1281              		.loc 1 579 0
ARM GAS  /tmp/ccWEpmOb.s 			page 33


 1282 0022 424B     		ldr	r3, .L67+4
 1283 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1284 0026 002B     		cmp	r3, #0
 1285 0028 74D0     		beq	.L58
 580:Application/aUSB/ausb.c **** 		{/*shift down button is pressed*/
 581:Application/aUSB/ausb.c **** 			/*set min value to current wheel position but make sure the value is not 0xFFFFu*/
 582:Application/aUSB/ausb.c **** 			if ( 0xFFFFu == wheepPosRaw ) wheepPosRaw--;
 1286              		.loc 1 582 0
 1287 002a FB89     		ldrh	r3, [r7, #14]
 1288 002c 4FF6FF72 		movw	r2, #65535
 1289 0030 9342     		cmp	r3, r2
 1290 0032 02D1     		bne	.L59
 1291              		.loc 1 582 0 is_stmt 0 discriminator 1
 1292 0034 FB89     		ldrh	r3, [r7, #14]
 1293 0036 013B     		subs	r3, r3, #1
 1294 0038 FB81     		strh	r3, [r7, #14]	@ movhi
 1295              	.L59:
 583:Application/aUSB/ausb.c **** 			wheelPosMin = wheepPosRaw + WHEELPOS_TOLERANCE; /*add also tolerance (overflow cannot happen her
 1296              		.loc 1 583 0 is_stmt 1
 1297 003a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1298 003c 1933     		adds	r3, r3, #25
 1299 003e 9AB2     		uxth	r2, r3
 1300 0040 394B     		ldr	r3, .L67
 1301 0042 1A80     		strh	r2, [r3]	@ movhi
 584:Application/aUSB/ausb.c **** 			/*clear also the offset - it will be incremented on overflow from now on*/
 585:Application/aUSB/ausb.c **** 			wheelPosOffset = 0u;
 1302              		.loc 1 585 0
 1303 0044 3A4B     		ldr	r3, .L67+8
 1304 0046 0022     		movs	r2, #0
 1305 0048 1A80     		strh	r2, [r3]	@ movhi
 1306 004a 63E0     		b	.L58
 1307              	.L57:
 586:Application/aUSB/ausb.c **** 		}else{/*waiting for the button press: no actions needed as wheelPos calculation is disabled and i
 587:Application/aUSB/ausb.c **** 		}
 588:Application/aUSB/ausb.c **** 	}
 589:Application/aUSB/ausb.c **** 	else
 590:Application/aUSB/ausb.c **** 	{/*min value is set - so we can start calculating the position*/
 591:Application/aUSB/ausb.c **** 		if ( ( wheepPosRaw <= WHEELPOS_OVERFLOW_THRESHOLD ) && ( wheelPosRawOld > WHEELPOS_RAW_MAX_MINUS_
 1308              		.loc 1 591 0
 1309 004c FB89     		ldrh	r3, [r7, #14]
 1310 004e FF2B     		cmp	r3, #255
 1311 0050 0CD8     		bhi	.L60
 1312              		.loc 1 591 0 is_stmt 0 discriminator 1
 1313 0052 384B     		ldr	r3, .L67+12
 1314 0054 1B88     		ldrh	r3, [r3]
 1315 0056 B3F5407F 		cmp	r3, #768
 1316 005a 07D9     		bls	.L60
 592:Application/aUSB/ausb.c **** 		{/*owerflow detected*/
 593:Application/aUSB/ausb.c **** 			/*add one encoder turn to the offset*/
 594:Application/aUSB/ausb.c **** 			wheelPosOffset += WHEELPOS_RAW_MAX_VAL;
 1317              		.loc 1 594 0 is_stmt 1
 1318 005c 344B     		ldr	r3, .L67+8
 1319 005e 1B88     		ldrh	r3, [r3]
 1320 0060 03F2FF33 		addw	r3, r3, #1023
 1321 0064 9AB2     		uxth	r2, r3
 1322 0066 324B     		ldr	r3, .L67+8
 1323 0068 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccWEpmOb.s 			page 34


 1324 006a 0EE0     		b	.L61
 1325              	.L60:
 595:Application/aUSB/ausb.c **** 		}
 596:Application/aUSB/ausb.c **** 		else if ( ( wheepPosRaw > WHEELPOS_RAW_MAX_MINUS_THRESHOLD ) && (wheelPosRawOld < WHEELPOS_OVERFL
 1326              		.loc 1 596 0
 1327 006c FB89     		ldrh	r3, [r7, #14]
 1328 006e B3F5407F 		cmp	r3, #768
 1329 0072 0AD9     		bls	.L61
 1330              		.loc 1 596 0 is_stmt 0 discriminator 1
 1331 0074 2F4B     		ldr	r3, .L67+12
 1332 0076 1B88     		ldrh	r3, [r3]
 1333 0078 FE2B     		cmp	r3, #254
 1334 007a 06D8     		bhi	.L61
 597:Application/aUSB/ausb.c **** 		{/*underflow*/
 598:Application/aUSB/ausb.c **** 			/*substract one encoder turn from the offset*/
 599:Application/aUSB/ausb.c **** 			wheelPosOffset -= WHEELPOS_RAW_MAX_VAL;
 1335              		.loc 1 599 0 is_stmt 1
 1336 007c 2C4B     		ldr	r3, .L67+8
 1337 007e 1B88     		ldrh	r3, [r3]
 1338 0080 A3F2FF33 		subw	r3, r3, #1023
 1339 0084 9AB2     		uxth	r2, r3
 1340 0086 2A4B     		ldr	r3, .L67+8
 1341 0088 1A80     		strh	r2, [r3]	@ movhi
 1342              	.L61:
 600:Application/aUSB/ausb.c **** 		}
 601:Application/aUSB/ausb.c **** 
 602:Application/aUSB/ausb.c **** 		wheelPos = wheepPosRaw + wheelPosOffset;
 1343              		.loc 1 602 0
 1344 008a 294B     		ldr	r3, .L67+8
 1345 008c 1A88     		ldrh	r2, [r3]
 1346 008e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1347 0090 1344     		add	r3, r3, r2
 1348 0092 9AB2     		uxth	r2, r3
 1349 0094 284B     		ldr	r3, .L67+16
 1350 0096 1A80     		strh	r2, [r3]	@ movhi
 603:Application/aUSB/ausb.c **** 
 604:Application/aUSB/ausb.c **** 		if ( 0u == wheelPosMax )
 1351              		.loc 1 604 0
 1352 0098 284B     		ldr	r3, .L67+20
 1353 009a 1B88     		ldrh	r3, [r3]
 1354 009c 002B     		cmp	r3, #0
 1355 009e 0AD1     		bne	.L62
 605:Application/aUSB/ausb.c **** 		{/*wheel is not calibrated yet - max value not set*/
 606:Application/aUSB/ausb.c **** 			if ( 0u != btnShiftUp )
 1356              		.loc 1 606 0
 1357 00a0 274B     		ldr	r3, .L67+24
 1358 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1359 00a4 002B     		cmp	r3, #0
 1360 00a6 35D0     		beq	.L58
 607:Application/aUSB/ausb.c **** 			{/*shift up button is pressed*/
 608:Application/aUSB/ausb.c **** 				/*set max value to current wheel position */
 609:Application/aUSB/ausb.c **** 				wheelPosMax = wheelPos - WHEELPOS_TOLERANCE; /*substract tolerance to make sure that max value 
 1361              		.loc 1 609 0
 1362 00a8 234B     		ldr	r3, .L67+16
 1363 00aa 1B88     		ldrh	r3, [r3]
 1364 00ac 193B     		subs	r3, r3, #25
 1365 00ae 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccWEpmOb.s 			page 35


 1366 00b0 224B     		ldr	r3, .L67+20
 1367 00b2 1A80     		strh	r2, [r3]	@ movhi
 1368 00b4 2EE0     		b	.L58
 1369              	.L62:
 610:Application/aUSB/ausb.c **** 			}else{/*wait for button press; no actions needed: the scaled value will not be calculated and th
 611:Application/aUSB/ausb.c **** 		}
 612:Application/aUSB/ausb.c **** 	 	else
 613:Application/aUSB/ausb.c **** 		{/*wheel is fully calibrated: min and max values are set*/
 614:Application/aUSB/ausb.c **** 			/*scale weelPos to 0u-0xFFFFu*/
 615:Application/aUSB/ausb.c **** 			/*normalize the value from [min..max] range to [0..(max-min)]; keep acount also that at edges be
 616:Application/aUSB/ausb.c **** 			if ( wheelPos <= wheelPosMin)
 1370              		.loc 1 616 0
 1371 00b6 204B     		ldr	r3, .L67+16
 1372 00b8 1A88     		ldrh	r2, [r3]
 1373 00ba 1B4B     		ldr	r3, .L67
 1374 00bc 1B88     		ldrh	r3, [r3]
 1375 00be 9A42     		cmp	r2, r3
 1376 00c0 02D8     		bhi	.L63
 617:Application/aUSB/ausb.c **** 			{ 
 618:Application/aUSB/ausb.c **** 				tWheelPos = 0;
 1377              		.loc 1 618 0
 1378 00c2 0023     		movs	r3, #0
 1379 00c4 BB60     		str	r3, [r7, #8]
 1380 00c6 14E0     		b	.L64
 1381              	.L63:
 619:Application/aUSB/ausb.c **** 			}
 620:Application/aUSB/ausb.c **** 			else if ( wheelPos >= wheelPosMax) 
 1382              		.loc 1 620 0
 1383 00c8 1B4B     		ldr	r3, .L67+16
 1384 00ca 1A88     		ldrh	r2, [r3]
 1385 00cc 1B4B     		ldr	r3, .L67+20
 1386 00ce 1B88     		ldrh	r3, [r3]
 1387 00d0 9A42     		cmp	r2, r3
 1388 00d2 07D3     		bcc	.L65
 621:Application/aUSB/ausb.c **** 			{
 622:Application/aUSB/ausb.c **** 				tWheelPos = (wheelPosMax - wheelPosMin);
 1389              		.loc 1 622 0
 1390 00d4 194B     		ldr	r3, .L67+20
 1391 00d6 1B88     		ldrh	r3, [r3]
 1392 00d8 1A46     		mov	r2, r3
 1393 00da 134B     		ldr	r3, .L67
 1394 00dc 1B88     		ldrh	r3, [r3]
 1395 00de D31A     		subs	r3, r2, r3
 1396 00e0 BB60     		str	r3, [r7, #8]
 1397 00e2 06E0     		b	.L64
 1398              	.L65:
 623:Application/aUSB/ausb.c **** 			}	
 624:Application/aUSB/ausb.c **** 			else
 625:Application/aUSB/ausb.c **** 			{
 626:Application/aUSB/ausb.c **** 				tWheelPos = wheelPos - wheelPosMin;
 1399              		.loc 1 626 0
 1400 00e4 144B     		ldr	r3, .L67+16
 1401 00e6 1B88     		ldrh	r3, [r3]
 1402 00e8 1A46     		mov	r2, r3
 1403 00ea 0F4B     		ldr	r3, .L67
 1404 00ec 1B88     		ldrh	r3, [r3]
 1405 00ee D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccWEpmOb.s 			page 36


 1406 00f0 BB60     		str	r3, [r7, #8]
 1407              	.L64:
 627:Application/aUSB/ausb.c **** 			}
 628:Application/aUSB/ausb.c **** 			/*scale the value*/
 629:Application/aUSB/ausb.c **** 			tWheelPos = (tWheelPos * 0xFFFFu) / (wheelPosMax - wheelPosMin);
 1408              		.loc 1 629 0
 1409 00f2 BA68     		ldr	r2, [r7, #8]
 1410 00f4 1346     		mov	r3, r2
 1411 00f6 1B04     		lsls	r3, r3, #16
 1412 00f8 9B1A     		subs	r3, r3, r2
 1413 00fa 104A     		ldr	r2, .L67+20
 1414 00fc 1288     		ldrh	r2, [r2]
 1415 00fe 1146     		mov	r1, r2
 1416 0100 094A     		ldr	r2, .L67
 1417 0102 1288     		ldrh	r2, [r2]
 1418 0104 8A1A     		subs	r2, r1, r2
 1419 0106 B3FBF2F3 		udiv	r3, r3, r2
 1420 010a BB60     		str	r3, [r7, #8]
 630:Application/aUSB/ausb.c **** 			/*max value of tWheelPos is 0xFFFFu so the assignement below will have no loss of value*/
 631:Application/aUSB/ausb.c **** 			wheelPos = (uint16_t)tWheelPos;
 1421              		.loc 1 631 0
 1422 010c BB68     		ldr	r3, [r7, #8]
 1423 010e 9AB2     		uxth	r2, r3
 1424 0110 094B     		ldr	r3, .L67+16
 1425 0112 1A80     		strh	r2, [r3]	@ movhi
 1426              	.L58:
 632:Application/aUSB/ausb.c **** 		}
 633:Application/aUSB/ausb.c **** 	}
 634:Application/aUSB/ausb.c **** 	wheelPosRawOld = wheepPosRaw;
 1427              		.loc 1 634 0
 1428 0114 074A     		ldr	r2, .L67+12
 1429 0116 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1430 0118 1380     		strh	r3, [r2]	@ movhi
 635:Application/aUSB/ausb.c **** 
 636:Application/aUSB/ausb.c **** 	return wheelPos;
 1431              		.loc 1 636 0
 1432 011a 074B     		ldr	r3, .L67+16
 1433 011c 1B88     		ldrh	r3, [r3]
 637:Application/aUSB/ausb.c **** }...
 1434              		.loc 1 637 0
 1435 011e 1846     		mov	r0, r3
 1436 0120 1437     		adds	r7, r7, #20
 1437              	.LCFI32:
 1438              		.cfi_def_cfa_offset 4
 1439 0122 BD46     		mov	sp, r7
 1440              	.LCFI33:
 1441              		.cfi_def_cfa_register 13
 1442              		@ sp needed
 1443 0124 80BC     		pop	{r7}
 1444              	.LCFI34:
 1445              		.cfi_restore 7
 1446              		.cfi_def_cfa_offset 0
 1447 0126 7047     		bx	lr
 1448              	.L68:
 1449              		.align	2
 1450              	.L67:
 1451 0128 00000000 		.word	wheelPosMin
ARM GAS  /tmp/ccWEpmOb.s 			page 37


 1452 012c 00000000 		.word	btnShiftDw
 1453 0130 00000000 		.word	wheelPosOffset
 1454 0134 00000000 		.word	wheelPosRawOld
 1455 0138 00000000 		.word	wheelPos
 1456 013c 00000000 		.word	wheelPosMax
 1457 0140 00000000 		.word	btnShiftUp
 1458              		.cfi_endproc
 1459              	.LFE74:
 1461              		.section	.bss.userButtonStatusOld.8381,"aw",%nobits
 1464              	userButtonStatusOld.8381:
 1465 0000 00       		.space	1
 1466              		.text
 1467              	.Letext0:
 1468              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1469              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1470              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1471              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1472              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1473              		.file 7 "/usr/include/newlib/sys/lock.h"
 1474              		.file 8 "/usr/include/newlib/sys/_types.h"
 1475              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1476              		.file 10 "/usr/include/newlib/sys/reent.h"
 1477              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1478              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 1479              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 1480              		.file 14 "Application/aUSB/ausb.h"
 1481              		.file 15 "Scheduler/aSchTT_types.h"
 1482              		.file 16 "Application/aLeds/aleds.h"
 1483              		.file 17 "Application/aMagEnc/amagenc.h"
 1484              		.file 18 "/usr/include/newlib/stdlib.h"
 1485              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1486              		.file 20 "Middlewares/ST/STM32_USB_Device_Library/Class/HID/Inc/usbd_hid.h"
 1487              		.file 21 "Inc/usb_device.h"
 1488              		.file 22 "Application/aButtons/abuttons.h"
ARM GAS  /tmp/ccWEpmOb.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ausb.c
     /tmp/ccWEpmOb.s:16     .bss.magEncPos:0000000000000000 $d
     /tmp/ccWEpmOb.s:19     .bss.magEncPos:0000000000000000 magEncPos
     /tmp/ccWEpmOb.s:22     .bss.ausb_effectOnTimer:0000000000000000 $d
     /tmp/ccWEpmOb.s:25     .bss.ausb_effectOnTimer:0000000000000000 ausb_effectOnTimer
     /tmp/ccWEpmOb.s:28     .bss.ausb_effectRepeatCnt:0000000000000000 $d
     /tmp/ccWEpmOb.s:31     .bss.ausb_effectRepeatCnt:0000000000000000 ausb_effectRepeatCnt
     /tmp/ccWEpmOb.s:36     .bss.ausb_pidOperation:0000000000000000 ausb_pidOperation
     /tmp/ccWEpmOb.s:37     .bss.ausb_pidOperation:0000000000000000 $d
                            *COM*:0000000000000001 ausb_pidEvent
                            *COM*:0000000000000001 PrevXferComplete
                            *COM*:0000000000000001 ausb_flags
                            *COM*:0000000000000001 ausb_pidStateFlags
                            *COM*:0000000000000001 sendPidStatus
                            *COM*:0000000000000001 ausb_effectDataLoopCnt
                            *COM*:0000000000000001 ausb_deviceGain
                            *COM*:000000000000000e ausb_effectData
     /tmp/ccWEpmOb.s:47     .bss.pidbuf:0000000000000000 $d
     /tmp/ccWEpmOb.s:50     .bss.pidbuf:0000000000000000 pidbuf
                            *COM*:0000000000000001 ausb_OperationReportEffectIdx
                            *COM*:0000000000000001 userButtonStatus
     /tmp/ccWEpmOb.s:55     .bss.setupEffectOngoing:0000000000000000 $d
     /tmp/ccWEpmOb.s:58     .bss.setupEffectOngoing:0000000000000000 setupEffectOngoing
     /tmp/ccWEpmOb.s:63     .bss.pAccOld:0000000000000000 pAccOld
     /tmp/ccWEpmOb.s:64     .bss.pAccOld:0000000000000000 $d
     /tmp/ccWEpmOb.s:68     .bss.pBrkOld:0000000000000000 pBrkOld
     /tmp/ccWEpmOb.s:69     .bss.pBrkOld:0000000000000000 $d
     /tmp/ccWEpmOb.s:71     .bss.wheelPosRawOld:0000000000000000 $d
     /tmp/ccWEpmOb.s:74     .bss.wheelPosRawOld:0000000000000000 wheelPosRawOld
     /tmp/ccWEpmOb.s:77     .bss.wheelPosOffset:0000000000000000 $d
     /tmp/ccWEpmOb.s:80     .bss.wheelPosOffset:0000000000000000 wheelPosOffset
     /tmp/ccWEpmOb.s:83     .bss.wheelPosMin:0000000000000000 $d
     /tmp/ccWEpmOb.s:86     .bss.wheelPosMin:0000000000000000 wheelPosMin
     /tmp/ccWEpmOb.s:89     .bss.wheelPosMax:0000000000000000 $d
     /tmp/ccWEpmOb.s:92     .bss.wheelPosMax:0000000000000000 wheelPosMax
                            *COM*:0000000000000002 wheelPos
     /tmp/ccWEpmOb.s:96     .text.usbmain_init:0000000000000000 $t
     /tmp/ccWEpmOb.s:103    .text.usbmain_init:0000000000000000 usbmain_init
     /tmp/ccWEpmOb.s:875    .text.ausb_initEffectsData:0000000000000000 ausb_initEffectsData
     /tmp/ccWEpmOb.s:178    .text.usbmain_init:000000000000005c $d
     /tmp/ccWEpmOb.s:195    .text.ausb_manage10ms:0000000000000000 $t
     /tmp/ccWEpmOb.s:202    .text.ausb_manage10ms:0000000000000000 ausb_manage10ms
     /tmp/ccWEpmOb.s:524    .text.sensorsDataChanged:0000000000000000 sensorsDataChanged
     /tmp/ccWEpmOb.s:709    .text.sendNewHIDSensorsData:0000000000000000 sendNewHIDSensorsData
     /tmp/ccWEpmOb.s:250    .text.ausb_manage10ms:0000000000000034 $d
     /tmp/ccWEpmOb.s:255    .text.ausb_manage1ms:0000000000000000 $t
     /tmp/ccWEpmOb.s:262    .text.ausb_manage1ms:0000000000000000 ausb_manage1ms
     /tmp/ccWEpmOb.s:291    .text.onNewControlEvent:0000000000000000 $t
     /tmp/ccWEpmOb.s:297    .text.onNewControlEvent:0000000000000000 onNewControlEvent
     /tmp/ccWEpmOb.s:506    .text.onNewControlEvent:000000000000015c $d
     /tmp/ccWEpmOb.s:518    .text.sensorsDataChanged:0000000000000000 $t
     /tmp/ccWEpmOb.s:689    .text.sensorsDataChanged:00000000000000e8 $d
     /tmp/ccWEpmOb.s:1464   .bss.userButtonStatusOld.8381:0000000000000000 userButtonStatusOld.8381
     /tmp/ccWEpmOb.s:703    .text.sendNewHIDSensorsData:0000000000000000 $t
     /tmp/ccWEpmOb.s:1249   .text.processWheelPos:0000000000000000 processWheelPos
     /tmp/ccWEpmOb.s:857    .text.sendNewHIDSensorsData:0000000000000100 $d
ARM GAS  /tmp/ccWEpmOb.s 			page 39


     /tmp/ccWEpmOb.s:868    .text.ausb_initEffectsData:0000000000000000 $t
     /tmp/ccWEpmOb.s:955    .text.ausb_initEffectsData:000000000000005c $d
     /tmp/ccWEpmOb.s:965    .text.ausb_physicalInterfaceSM:0000000000000000 $t
     /tmp/ccWEpmOb.s:972    .text.ausb_physicalInterfaceSM:0000000000000000 ausb_physicalInterfaceSM
     /tmp/ccWEpmOb.s:1228   .text.ausb_physicalInterfaceSM:0000000000000194 $d
     /tmp/ccWEpmOb.s:1243   .text.processWheelPos:0000000000000000 $t
     /tmp/ccWEpmOb.s:1451   .text.processWheelPos:0000000000000128 $d
     /tmp/ccWEpmOb.s:1465   .bss.userButtonStatusOld.8381:0000000000000000 $d

UNDEFINED SYMBOLS
affmotor_start
affmotor_updatePwmDC
affmotor_stop
affmotor_enable
affmotor_disable
abuttons_getBStartPressedTime
amagenc_ssiSample
pAcc
pBrk
btnShiftDw
btnShiftUp
USBD_HID_SendReport
hUsbDeviceFS
USBD_CtlSendData
USBD_CtlPrepareRx
hpcd_USB_FS
usbd_hid_EP0rxBuf
