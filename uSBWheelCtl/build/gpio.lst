ARM GAS  /tmp/ccRL3DG2.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_GPIO_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB66:
  25              		.file 1 "Src/gpio.c"
   1:Src/gpio.c    **** /**
   2:Src/gpio.c    ****   ******************************************************************************
   3:Src/gpio.c    ****   * File Name          : gpio.c
   4:Src/gpio.c    ****   * Description        : This file provides code for the configuration
   5:Src/gpio.c    ****   *                      of all used GPIO pins.
   6:Src/gpio.c    ****   ******************************************************************************
   7:Src/gpio.c    ****   * This notice applies to any and all portions of this file
   8:Src/gpio.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/gpio.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/gpio.c    ****   * inserted by the user or by software development tools
  11:Src/gpio.c    ****   * are owned by their respective copyright owners.
  12:Src/gpio.c    ****   *
  13:Src/gpio.c    ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
  14:Src/gpio.c    ****   * All rights reserved.
  15:Src/gpio.c    ****   *
  16:Src/gpio.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/gpio.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/gpio.c    ****   *
  19:Src/gpio.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/gpio.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/gpio.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/gpio.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/gpio.c    ****   *    and/or other materials provided with the distribution.
  24:Src/gpio.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/gpio.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/gpio.c    ****   *    derived from this software without specific written permission.
  27:Src/gpio.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/gpio.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/gpio.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/gpio.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/gpio.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/gpio.c    ****   *    this license. 
  33:Src/gpio.c    ****   *
ARM GAS  /tmp/ccRL3DG2.s 			page 2


  34:Src/gpio.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/gpio.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/gpio.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/gpio.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/gpio.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/gpio.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/gpio.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/gpio.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/gpio.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/gpio.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/gpio.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/gpio.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/gpio.c    ****   *
  47:Src/gpio.c    ****   ******************************************************************************
  48:Src/gpio.c    ****   */
  49:Src/gpio.c    **** 
  50:Src/gpio.c    **** /* Includes ------------------------------------------------------------------*/
  51:Src/gpio.c    **** #include "gpio.h"
  52:Src/gpio.c    **** /* USER CODE BEGIN 0 */
  53:Src/gpio.c    **** 
  54:Src/gpio.c    **** /* USER CODE END 0 */
  55:Src/gpio.c    **** 
  56:Src/gpio.c    **** /*----------------------------------------------------------------------------*/
  57:Src/gpio.c    **** /* Configure GPIO                                                             */
  58:Src/gpio.c    **** /*----------------------------------------------------------------------------*/
  59:Src/gpio.c    **** /* USER CODE BEGIN 1 */
  60:Src/gpio.c    **** 
  61:Src/gpio.c    **** /* USER CODE END 1 */
  62:Src/gpio.c    **** 
  63:Src/gpio.c    **** /** Configure pins as 
  64:Src/gpio.c    ****         * Analog 
  65:Src/gpio.c    ****         * Input 
  66:Src/gpio.c    ****         * Output
  67:Src/gpio.c    ****         * EVENT_OUT
  68:Src/gpio.c    ****         * EXTI
  69:Src/gpio.c    **** */
  70:Src/gpio.c    **** void MX_GPIO_Init(void)
  71:Src/gpio.c    **** {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41              	.LBB2:
  72:Src/gpio.c    **** 
  73:Src/gpio.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
  74:Src/gpio.c    **** 
ARM GAS  /tmp/ccRL3DG2.s 			page 3


  75:Src/gpio.c    ****   /* GPIO Ports Clock Enable */
  76:Src/gpio.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  42              		.loc 1 76 0
  43 0006 554B     		ldr	r3, .L2
  44 0008 9B69     		ldr	r3, [r3, #24]
  45 000a 544A     		ldr	r2, .L2
  46 000c 43F00403 		orr	r3, r3, #4
  47 0010 9361     		str	r3, [r2, #24]
  48 0012 524B     		ldr	r3, .L2
  49 0014 9B69     		ldr	r3, [r3, #24]
  50 0016 03F00403 		and	r3, r3, #4
  51 001a FB60     		str	r3, [r7, #12]
  52 001c FB68     		ldr	r3, [r7, #12]
  53              	.LBE2:
  54              	.LBB3:
  77:Src/gpio.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  55              		.loc 1 77 0
  56 001e 4F4B     		ldr	r3, .L2
  57 0020 9B69     		ldr	r3, [r3, #24]
  58 0022 4E4A     		ldr	r2, .L2
  59 0024 43F00803 		orr	r3, r3, #8
  60 0028 9361     		str	r3, [r2, #24]
  61 002a 4C4B     		ldr	r3, .L2
  62 002c 9B69     		ldr	r3, [r3, #24]
  63 002e 03F00803 		and	r3, r3, #8
  64 0032 BB60     		str	r3, [r7, #8]
  65 0034 BB68     		ldr	r3, [r7, #8]
  66              	.LBE3:
  67              	.LBB4:
  78:Src/gpio.c    **** 
  79:Src/gpio.c    ****   __HAL_RCC_SPI2_CLK_ENABLE();
  68              		.loc 1 79 0
  69 0036 494B     		ldr	r3, .L2
  70 0038 DB69     		ldr	r3, [r3, #28]
  71 003a 484A     		ldr	r2, .L2
  72 003c 43F48043 		orr	r3, r3, #16384
  73 0040 D361     		str	r3, [r2, #28]
  74 0042 464B     		ldr	r3, .L2
  75 0044 DB69     		ldr	r3, [r3, #28]
  76 0046 03F48043 		and	r3, r3, #16384
  77 004a 7B60     		str	r3, [r7, #4]
  78 004c 7B68     		ldr	r3, [r7, #4]
  79              	.LBE4:
  80:Src/gpio.c    **** 
  81:Src/gpio.c    ****   /*Set userLed pin low */
  82:Src/gpio.c    ****   HAL_GPIO_WritePin(userLed_GPIO_Port, userLed_Pin, GPIO_PIN_RESET);
  80              		.loc 1 82 0
  81 004e 0022     		movs	r2, #0
  82 0050 0121     		movs	r1, #1
  83 0052 4348     		ldr	r0, .L2+4
  84 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
  83:Src/gpio.c    **** 
  84:Src/gpio.c    ****   /*Configure GPIO pin : userLed */
  85:Src/gpio.c    ****   GPIO_InitStruct.Pin = userLed_Pin;
  85              		.loc 1 85 0
  86 0058 0123     		movs	r3, #1
  87 005a 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/ccRL3DG2.s 			page 4


  86:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 86 0
  89 005c 0123     		movs	r3, #1
  90 005e 7B61     		str	r3, [r7, #20]
  87:Src/gpio.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  91              		.loc 1 87 0
  92 0060 0223     		movs	r3, #2
  93 0062 FB61     		str	r3, [r7, #28]
  88:Src/gpio.c    ****   HAL_GPIO_Init(userLed_GPIO_Port, &GPIO_InitStruct);
  94              		.loc 1 88 0
  95 0064 07F11003 		add	r3, r7, #16
  96 0068 1946     		mov	r1, r3
  97 006a 3D48     		ldr	r0, .L2+4
  98 006c FFF7FEFF 		bl	HAL_GPIO_Init
  89:Src/gpio.c    **** 
  90:Src/gpio.c    ****   /*Configure GPIO pin : userButton */
  91:Src/gpio.c    ****   GPIO_InitStruct.Pin = userButton_Pin;
  99              		.loc 1 91 0
 100 0070 0223     		movs	r3, #2
 101 0072 3B61     		str	r3, [r7, #16]
  92:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 102              		.loc 1 92 0
 103 0074 0023     		movs	r3, #0
 104 0076 7B61     		str	r3, [r7, #20]
  93:Src/gpio.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 105              		.loc 1 93 0
 106 0078 0123     		movs	r3, #1
 107 007a BB61     		str	r3, [r7, #24]
  94:Src/gpio.c    ****   HAL_GPIO_Init(userButton_GPIO_Port, &GPIO_InitStruct);
 108              		.loc 1 94 0
 109 007c 07F11003 		add	r3, r7, #16
 110 0080 1946     		mov	r1, r3
 111 0082 3748     		ldr	r0, .L2+4
 112 0084 FFF7FEFF 		bl	HAL_GPIO_Init
  95:Src/gpio.c    **** 
  96:Src/gpio.c    **** //Magnetic encoder pins
  97:Src/gpio.c    **** #ifdef SSI_WITH_TIMER
  98:Src/gpio.c    ****   /*Configure GPIO pin : SSIDI */
  99:Src/gpio.c    ****   GPIO_InitStruct.Pin = magEnc_SSIDI_Pin;
 100:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 101:Src/gpio.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102:Src/gpio.c    ****   HAL_GPIO_Init(magEnc_SSIDI_GPIO_Port, &GPIO_InitStruct);
 103:Src/gpio.c    ****   
 104:Src/gpio.c    ****   /*Configure GPIO pin : SSIClk */
 105:Src/gpio.c    ****   GPIO_InitStruct.Pin = magEnc_SSIClk_Pin;
 106:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107:Src/gpio.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 108:Src/gpio.c    ****   HAL_GPIO_Init(magEnc_SSIClk_GPIO_Port, &GPIO_InitStruct);
 109:Src/gpio.c    **** #else
 110:Src/gpio.c    ****   /*spi "simplex master receive only" mode is used */
 111:Src/gpio.c    ****   /**SPI2 GPIO Configuration  
 112:Src/gpio.c    ****   PB13   ------> SPI2_SCK
 113:Src/gpio.c    ****   PB14   ------> SPI2_MISO 
 114:Src/gpio.c    ****   */
 115:Src/gpio.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 113              		.loc 1 115 0
 114 0088 4FF40053 		mov	r3, #8192
ARM GAS  /tmp/ccRL3DG2.s 			page 5


 115 008c 3B61     		str	r3, [r7, #16]
 116:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 116              		.loc 1 116 0
 117 008e 0223     		movs	r3, #2
 118 0090 7B61     		str	r3, [r7, #20]
 117:Src/gpio.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 119              		.loc 1 117 0
 120 0092 0323     		movs	r3, #3
 121 0094 FB61     		str	r3, [r7, #28]
 118:Src/gpio.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 122              		.loc 1 118 0
 123 0096 07F11003 		add	r3, r7, #16
 124 009a 1946     		mov	r1, r3
 125 009c 3148     		ldr	r0, .L2+8
 126 009e FFF7FEFF 		bl	HAL_GPIO_Init
 119:Src/gpio.c    **** 
 120:Src/gpio.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 127              		.loc 1 120 0
 128 00a2 4FF48043 		mov	r3, #16384
 129 00a6 3B61     		str	r3, [r7, #16]
 121:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_INPUT;
 130              		.loc 1 121 0
 131 00a8 0023     		movs	r3, #0
 132 00aa 7B61     		str	r3, [r7, #20]
 122:Src/gpio.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 133              		.loc 1 122 0
 134 00ac 07F11003 		add	r3, r7, #16
 135 00b0 1946     		mov	r1, r3
 136 00b2 2C48     		ldr	r0, .L2+8
 137 00b4 FFF7FEFF 		bl	HAL_GPIO_Init
 123:Src/gpio.c    **** 
 124:Src/gpio.c    ****   /*Configure spi clk feedback pin - needed to detect when the first bit was sent - event where the
 125:Src/gpio.c    ****   GPIO_InitStruct.Pin = spiClkFeedBack_Pin;
 138              		.loc 1 125 0
 139 00b8 4FF40043 		mov	r3, #32768
 140 00bc 3B61     		str	r3, [r7, #16]
 126:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 141              		.loc 1 126 0
 142 00be 2A4B     		ldr	r3, .L2+12
 143 00c0 7B61     		str	r3, [r7, #20]
 127:Src/gpio.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 144              		.loc 1 127 0
 145 00c2 0023     		movs	r3, #0
 146 00c4 BB61     		str	r3, [r7, #24]
 128:Src/gpio.c    ****   HAL_GPIO_Init(spiClkFeedBack_GPIO_Port, &GPIO_InitStruct);
 147              		.loc 1 128 0
 148 00c6 07F11003 		add	r3, r7, #16
 149 00ca 1946     		mov	r1, r3
 150 00cc 2548     		ldr	r0, .L2+8
 151 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 129:Src/gpio.c    **** 
 130:Src/gpio.c    ****     /* EXTI interrupt init*/
 131:Src/gpio.c    ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 152              		.loc 1 131 0
 153 00d2 0022     		movs	r2, #0
 154 00d4 0021     		movs	r1, #0
 155 00d6 2820     		movs	r0, #40
ARM GAS  /tmp/ccRL3DG2.s 			page 6


 156 00d8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 132:Src/gpio.c    ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 157              		.loc 1 132 0
 158 00dc 2820     		movs	r0, #40
 159 00de FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 133:Src/gpio.c    **** #endif
 134:Src/gpio.c    **** 
 135:Src/gpio.c    **** //Trigger pins used by logic analyzer
 136:Src/gpio.c    ****   HAL_GPIO_WritePin(GPIOA, PIN_LogicAnalyzerTriggerOutOrClassReport, GPIO_PIN_RESET);
 160              		.loc 1 136 0
 161 00e2 0022     		movs	r2, #0
 162 00e4 0421     		movs	r1, #4
 163 00e6 1E48     		ldr	r0, .L2+4
 164 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137:Src/gpio.c    ****   HAL_GPIO_WritePin(GPIOA, PIN_LogicAnalyzerTriggerInReport, GPIO_PIN_RESET);
 165              		.loc 1 137 0
 166 00ec 0022     		movs	r2, #0
 167 00ee 0821     		movs	r1, #8
 168 00f0 1B48     		ldr	r0, .L2+4
 169 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138:Src/gpio.c    ****   GPIO_InitStruct.Pin = PIN_LogicAnalyzerTriggerOutOrClassReport | PIN_LogicAnalyzerTriggerInReport
 170              		.loc 1 138 0
 171 00f6 0C23     		movs	r3, #12
 172 00f8 3B61     		str	r3, [r7, #16]
 139:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 173              		.loc 1 139 0
 174 00fa 0123     		movs	r3, #1
 175 00fc 7B61     		str	r3, [r7, #20]
 140:Src/gpio.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 176              		.loc 1 140 0
 177 00fe 0123     		movs	r3, #1
 178 0100 FB61     		str	r3, [r7, #28]
 141:Src/gpio.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 179              		.loc 1 141 0
 180 0102 07F11003 		add	r3, r7, #16
 181 0106 1946     		mov	r1, r3
 182 0108 1548     		ldr	r0, .L2+4
 183 010a FFF7FEFF 		bl	HAL_GPIO_Init
 142:Src/gpio.c    **** 
 143:Src/gpio.c    **** //FF Motor direction pin
 144:Src/gpio.c    ****   /*Configure GPIO pin Output Level */
 145:Src/gpio.c    ****   HAL_GPIO_WritePin(GPIOA, FFMotorRight_EnPin, GPIO_PIN_SET);
 184              		.loc 1 145 0
 185 010e 0122     		movs	r2, #1
 186 0110 2021     		movs	r1, #32
 187 0112 1348     		ldr	r0, .L2+4
 188 0114 FFF7FEFF 		bl	HAL_GPIO_WritePin
 146:Src/gpio.c    ****   HAL_GPIO_WritePin(GPIOA, FFMotorLeft_EnPin, GPIO_PIN_RESET);
 189              		.loc 1 146 0
 190 0118 0022     		movs	r2, #0
 191 011a 1021     		movs	r1, #16
 192 011c 1048     		ldr	r0, .L2+4
 193 011e FFF7FEFF 		bl	HAL_GPIO_WritePin
 147:Src/gpio.c    ****   /*Configure GPIO pin : ff motor */
 148:Src/gpio.c    ****   GPIO_InitStruct.Pin = FFMotorLeft_EnPin | FFMotorRight_EnPin;
 194              		.loc 1 148 0
 195 0122 3023     		movs	r3, #48
ARM GAS  /tmp/ccRL3DG2.s 			page 7


 196 0124 3B61     		str	r3, [r7, #16]
 149:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 197              		.loc 1 149 0
 198 0126 0123     		movs	r3, #1
 199 0128 7B61     		str	r3, [r7, #20]
 150:Src/gpio.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 200              		.loc 1 150 0
 201 012a 0223     		movs	r3, #2
 202 012c FB61     		str	r3, [r7, #28]
 151:Src/gpio.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 203              		.loc 1 151 0
 204 012e 07F11003 		add	r3, r7, #16
 205 0132 1946     		mov	r1, r3
 206 0134 0A48     		ldr	r0, .L2+4
 207 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 152:Src/gpio.c    **** 
 153:Src/gpio.c    **** //Shift gears pins
 154:Src/gpio.c    ****   /*Configure GPIO pin : shifting gears (Dw and Up) */
 155:Src/gpio.c    ****   GPIO_InitStruct.Pin = pinShiftGearDw | pinShiftGearUp;
 208              		.loc 1 155 0
 209 013a 0323     		movs	r3, #3
 210 013c 3B61     		str	r3, [r7, #16]
 156:Src/gpio.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 211              		.loc 1 156 0
 212 013e 0023     		movs	r3, #0
 213 0140 7B61     		str	r3, [r7, #20]
 157:Src/gpio.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 214              		.loc 1 157 0
 215 0142 0123     		movs	r3, #1
 216 0144 BB61     		str	r3, [r7, #24]
 158:Src/gpio.c    ****   HAL_GPIO_Init(portShiftGear, &GPIO_InitStruct);
 217              		.loc 1 158 0
 218 0146 07F11003 		add	r3, r7, #16
 219 014a 1946     		mov	r1, r3
 220 014c 0548     		ldr	r0, .L2+8
 221 014e FFF7FEFF 		bl	HAL_GPIO_Init
 159:Src/gpio.c    **** 
 160:Src/gpio.c    **** }
 222              		.loc 1 160 0
 223 0152 00BF     		nop
 224 0154 2037     		adds	r7, r7, #32
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 8
 227 0156 BD46     		mov	sp, r7
 228              	.LCFI4:
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 0158 80BD     		pop	{r7, pc}
 232              	.L3:
 233 015a 00BF     		.align	2
 234              	.L2:
 235 015c 00100240 		.word	1073876992
 236 0160 00080140 		.word	1073809408
 237 0164 000C0140 		.word	1073810432
 238 0168 00001110 		.word	269549568
 239              		.cfi_endproc
 240              	.LFE66:
ARM GAS  /tmp/ccRL3DG2.s 			page 8


 242              		.text
 243              	.Letext0:
 244              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 245              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 246              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 247              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 248              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 249              		.file 7 "/usr/include/newlib/sys/lock.h"
 250              		.file 8 "/usr/include/newlib/sys/_types.h"
 251              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 252              		.file 10 "/usr/include/newlib/sys/reent.h"
 253              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/ccRL3DG2.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 gpio.c
     /tmp/ccRL3DG2.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccRL3DG2.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccRL3DG2.s:235    .text.MX_GPIO_Init:000000000000015c $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
