ARM GAS  /tmp/ccFcZrf8.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	uwTick,4,4
  16              		.section	.text.HAL_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_Init
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_Init:
  25              	.LFB66:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @version V1.1.1
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @date    12-May-2017
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories: 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/ccFcZrf8.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      without specific prior written permission.
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.1
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x01U) /*!< [15:8]  sub2 version */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/ccFcZrf8.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           is needed and the backup domain when enabled.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority. 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked. 
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
ARM GAS  /tmp/ccFcZrf8.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization 
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *            
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  27              		.loc 1 159 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  39              		.loc 1 168 0
  40 0004 084B     		ldr	r3, .L3
  41 0006 1B68     		ldr	r3, [r3]
  42 0008 074A     		ldr	r2, .L3
  43 000a 43F01003 		orr	r3, r3, #16
  44 000e 1360     		str	r3, [r2]
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  45              		.loc 1 173 0
  46 0010 0320     		movs	r0, #3
  47 0012 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  48              		.loc 1 176 0
  49 0016 0020     		movs	r0, #0
  50 0018 FFF7FEFF 		bl	HAL_InitTick
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
ARM GAS  /tmp/ccFcZrf8.s 			page 5


  51              		.loc 1 179 0
  52 001c FFF7FEFF 		bl	HAL_MspInit
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
  53              		.loc 1 182 0
  54 0020 0023     		movs	r3, #0
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
  55              		.loc 1 183 0
  56 0022 1846     		mov	r0, r3
  57 0024 80BD     		pop	{r7, pc}
  58              	.L4:
  59 0026 00BF     		.align	2
  60              	.L3:
  61 0028 00200240 		.word	1073881088
  62              		.cfi_endproc
  63              	.LFE66:
  65              		.section	.text.HAL_DeInit,"ax",%progbits
  66              		.align	1
  67              		.global	HAL_DeInit
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu softvfp
  73              	HAL_DeInit:
  74              	.LFB67:
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  75              		.loc 1 192 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              	.LCFI2:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 00AF     		add	r7, sp, #0
  85              	.LCFI3:
  86              		.cfi_def_cfa_register 7
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
  87              		.loc 1 194 0
  88 0004 094B     		ldr	r3, .L7
  89 0006 4FF0FF32 		mov	r2, #-1
  90 000a DA60     		str	r2, [r3, #12]
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  91              		.loc 1 195 0
  92 000c 074B     		ldr	r3, .L7
  93 000e 0022     		movs	r2, #0
ARM GAS  /tmp/ccFcZrf8.s 			page 6


  94 0010 1A61     		str	r2, [r3, #16]
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
  95              		.loc 1 197 0
  96 0012 064B     		ldr	r3, .L7
  97 0014 4FF0FF32 		mov	r2, #-1
  98 0018 DA60     		str	r2, [r3, #12]
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  99              		.loc 1 198 0
 100 001a 044B     		ldr	r3, .L7
 101 001c 0022     		movs	r2, #0
 102 001e DA60     		str	r2, [r3, #12]
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 103              		.loc 1 206 0
 104 0020 FFF7FEFF 		bl	HAL_MspDeInit
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 105              		.loc 1 209 0
 106 0024 0023     		movs	r3, #0
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 107              		.loc 1 210 0
 108 0026 1846     		mov	r0, r3
 109 0028 80BD     		pop	{r7, pc}
 110              	.L8:
 111 002a 00BF     		.align	2
 112              	.L7:
 113 002c 00100240 		.word	1073876992
 114              		.cfi_endproc
 115              	.LFE67:
 117              		.section	.text.HAL_MspInit,"ax",%progbits
 118              		.align	1
 119              		.weak	HAL_MspInit
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu softvfp
 125              	HAL_MspInit:
 126              	.LFB68:
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initializes the MSP.
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 127              		.loc 1 217 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccFcZrf8.s 			page 7


 131              		@ link register save eliminated.
 132 0000 80B4     		push	{r7}
 133              	.LCFI4:
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 0002 00AF     		add	r7, sp, #0
 137              	.LCFI5:
 138              		.cfi_def_cfa_register 7
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 139              		.loc 1 221 0
 140 0004 00BF     		nop
 141 0006 BD46     		mov	sp, r7
 142              	.LCFI6:
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 0008 80BC     		pop	{r7}
 146              	.LCFI7:
 147              		.cfi_restore 7
 148              		.cfi_def_cfa_offset 0
 149 000a 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE68:
 153              		.section	.text.HAL_MspDeInit,"ax",%progbits
 154              		.align	1
 155              		.weak	HAL_MspDeInit
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	HAL_MspDeInit:
 162              	.LFB69:
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 163              		.loc 1 228 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168 0000 80B4     		push	{r7}
 169              	.LCFI8:
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 7, -4
 172 0002 00AF     		add	r7, sp, #0
 173              	.LCFI9:
 174              		.cfi_def_cfa_register 7
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
ARM GAS  /tmp/ccFcZrf8.s 			page 8


 175              		.loc 1 232 0
 176 0004 00BF     		nop
 177 0006 BD46     		mov	sp, r7
 178              	.LCFI10:
 179              		.cfi_def_cfa_register 13
 180              		@ sp needed
 181 0008 80BC     		pop	{r7}
 182              	.LCFI11:
 183              		.cfi_restore 7
 184              		.cfi_def_cfa_offset 0
 185 000a 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE69:
 189              		.section	.text.HAL_InitTick,"ax",%progbits
 190              		.align	1
 191              		.weak	HAL_InitTick
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu softvfp
 197              	HAL_InitTick:
 198              	.LFB70:
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base. 
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 199              		.loc 1 251 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 80B5     		push	{r7, lr}
 204              	.LCFI12:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 82B0     		sub	sp, sp, #8
 209              	.LCFI13:
 210              		.cfi_def_cfa_offset 16
 211 0004 00AF     		add	r7, sp, #0
 212              	.LCFI14:
 213              		.cfi_def_cfa_register 7
 214 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccFcZrf8.s 			page 9


 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock/1000U);
 215              		.loc 1 253 0
 216 0008 094B     		ldr	r3, .L13
 217 000a 1B68     		ldr	r3, [r3]
 218 000c 094A     		ldr	r2, .L13+4
 219 000e A2FB0323 		umull	r2, r3, r2, r3
 220 0012 9B09     		lsrs	r3, r3, #6
 221 0014 1846     		mov	r0, r3
 222 0016 FFF7FEFF 		bl	HAL_SYSTICK_Config
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick IRQ priority */
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 223              		.loc 1 256 0
 224 001a 0022     		movs	r2, #0
 225 001c 7968     		ldr	r1, [r7, #4]
 226 001e 4FF0FF30 		mov	r0, #-1
 227 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 228              		.loc 1 259 0
 229 0026 0023     		movs	r3, #0
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 230              		.loc 1 260 0
 231 0028 1846     		mov	r0, r3
 232 002a 0837     		adds	r7, r7, #8
 233              	.LCFI15:
 234              		.cfi_def_cfa_offset 8
 235 002c BD46     		mov	sp, r7
 236              	.LCFI16:
 237              		.cfi_def_cfa_register 13
 238              		@ sp needed
 239 002e 80BD     		pop	{r7, pc}
 240              	.L14:
 241              		.align	2
 242              	.L13:
 243 0030 00000000 		.word	SystemCoreClock
 244 0034 D34D6210 		.word	274877907
 245              		.cfi_endproc
 246              	.LFE70:
 248              		.section	.text.HAL_IncTick,"ax",%progbits
 249              		.align	1
 250              		.weak	HAL_IncTick
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu softvfp
 256              	HAL_IncTick:
 257              	.LFB71:
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
ARM GAS  /tmp/ccFcZrf8.s 			page 10


 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in Systick ISR.
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 258              		.loc 1 299 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263 0000 80B4     		push	{r7}
 264              	.LCFI17:
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 7, -4
 267 0002 00AF     		add	r7, sp, #0
 268              	.LCFI18:
 269              		.cfi_def_cfa_register 7
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick++;
 270              		.loc 1 300 0
 271 0004 044B     		ldr	r3, .L16
 272 0006 1B68     		ldr	r3, [r3]
 273 0008 0133     		adds	r3, r3, #1
 274 000a 034A     		ldr	r2, .L16
 275 000c 1360     		str	r3, [r2]
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 276              		.loc 1 301 0
 277 000e 00BF     		nop
 278 0010 BD46     		mov	sp, r7
 279              	.LCFI19:
 280              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccFcZrf8.s 			page 11


 281              		@ sp needed
 282 0012 80BC     		pop	{r7}
 283              	.LCFI20:
 284              		.cfi_restore 7
 285              		.cfi_def_cfa_offset 0
 286 0014 7047     		bx	lr
 287              	.L17:
 288 0016 00BF     		.align	2
 289              	.L16:
 290 0018 00000000 		.word	uwTick
 291              		.cfi_endproc
 292              	.LFE71:
 294              		.section	.text.HAL_GetTick,"ax",%progbits
 295              		.align	1
 296              		.weak	HAL_GetTick
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu softvfp
 302              	HAL_GetTick:
 303              	.LFB72:
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak  to be overwritten  in case of other 
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 304              		.loc 1 310 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0000 80B4     		push	{r7}
 310              	.LCFI21:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 00AF     		add	r7, sp, #0
 314              	.LCFI22:
 315              		.cfi_def_cfa_register 7
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 316              		.loc 1 311 0
 317 0004 024B     		ldr	r3, .L20
 318 0006 1B68     		ldr	r3, [r3]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 319              		.loc 1 312 0
 320 0008 1846     		mov	r0, r3
 321 000a BD46     		mov	sp, r7
 322              	.LCFI23:
 323              		.cfi_def_cfa_register 13
 324              		@ sp needed
 325 000c 80BC     		pop	{r7}
 326              	.LCFI24:
 327              		.cfi_restore 7
 328              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccFcZrf8.s 			page 12


 329 000e 7047     		bx	lr
 330              	.L21:
 331              		.align	2
 332              	.L20:
 333 0010 00000000 		.word	uwTick
 334              		.cfi_endproc
 335              	.LFE72:
 337              		.section	.text.HAL_Delay,"ax",%progbits
 338              		.align	1
 339              		.weak	HAL_Delay
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu softvfp
 345              	HAL_Delay:
 346              	.LFB73:
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 347              		.loc 1 326 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 16
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 80B5     		push	{r7, lr}
 352              	.LCFI25:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 84B0     		sub	sp, sp, #16
 357              	.LCFI26:
 358              		.cfi_def_cfa_offset 24
 359 0004 00AF     		add	r7, sp, #0
 360              	.LCFI27:
 361              		.cfi_def_cfa_register 7
 362 0006 7860     		str	r0, [r7, #4]
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 363              		.loc 1 327 0
 364 0008 FFF7FEFF 		bl	HAL_GetTick
 365 000c B860     		str	r0, [r7, #8]
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 366              		.loc 1 328 0
 367 000e 7B68     		ldr	r3, [r7, #4]
 368 0010 FB60     		str	r3, [r7, #12]
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a period to guarantee minimum wait */
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
ARM GAS  /tmp/ccFcZrf8.s 			page 13


 369              		.loc 1 331 0
 370 0012 FB68     		ldr	r3, [r7, #12]
 371 0014 B3F1FF3F 		cmp	r3, #-1
 372 0018 02D0     		beq	.L25
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****      wait++;
 373              		.loc 1 333 0
 374 001a FB68     		ldr	r3, [r7, #12]
 375 001c 0133     		adds	r3, r3, #1
 376 001e FB60     		str	r3, [r7, #12]
 377              	.L25:
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 378              		.loc 1 336 0
 379 0020 00BF     		nop
 380              	.L24:
 381              		.loc 1 336 0 is_stmt 0 discriminator 1
 382 0022 FFF7FEFF 		bl	HAL_GetTick
 383 0026 0246     		mov	r2, r0
 384 0028 BB68     		ldr	r3, [r7, #8]
 385 002a D31A     		subs	r3, r2, r3
 386 002c FA68     		ldr	r2, [r7, #12]
 387 002e 9A42     		cmp	r2, r3
 388 0030 F7D8     		bhi	.L24
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 389              		.loc 1 339 0 is_stmt 1
 390 0032 00BF     		nop
 391 0034 1037     		adds	r7, r7, #16
 392              	.LCFI28:
 393              		.cfi_def_cfa_offset 8
 394 0036 BD46     		mov	sp, r7
 395              	.LCFI29:
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 0038 80BD     		pop	{r7, pc}
 399              		.cfi_endproc
 400              	.LFE73:
 402              		.section	.text.HAL_SuspendTick,"ax",%progbits
 403              		.align	1
 404              		.weak	HAL_SuspendTick
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu softvfp
 410              	HAL_SuspendTick:
 411              	.LFB74:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
ARM GAS  /tmp/ccFcZrf8.s 			page 14


 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 412              		.loc 1 352 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417 0000 80B4     		push	{r7}
 418              	.LCFI30:
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 7, -4
 421 0002 00AF     		add	r7, sp, #0
 422              	.LCFI31:
 423              		.cfi_def_cfa_register 7
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 424              		.loc 1 354 0
 425 0004 044B     		ldr	r3, .L27
 426 0006 1B68     		ldr	r3, [r3]
 427 0008 034A     		ldr	r2, .L27
 428 000a 23F00203 		bic	r3, r3, #2
 429 000e 1360     		str	r3, [r2]
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 430              		.loc 1 355 0
 431 0010 00BF     		nop
 432 0012 BD46     		mov	sp, r7
 433              	.LCFI32:
 434              		.cfi_def_cfa_register 13
 435              		@ sp needed
 436 0014 80BC     		pop	{r7}
 437              	.LCFI33:
 438              		.cfi_restore 7
 439              		.cfi_def_cfa_offset 0
 440 0016 7047     		bx	lr
 441              	.L28:
 442              		.align	2
 443              	.L27:
 444 0018 10E000E0 		.word	-536813552
 445              		.cfi_endproc
 446              	.LFE74:
 448              		.section	.text.HAL_ResumeTick,"ax",%progbits
 449              		.align	1
 450              		.weak	HAL_ResumeTick
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu softvfp
 456              	HAL_ResumeTick:
 457              	.LFB75:
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
ARM GAS  /tmp/ccFcZrf8.s 			page 15


 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 458              		.loc 1 368 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463 0000 80B4     		push	{r7}
 464              	.LCFI34:
 465              		.cfi_def_cfa_offset 4
 466              		.cfi_offset 7, -4
 467 0002 00AF     		add	r7, sp, #0
 468              	.LCFI35:
 469              		.cfi_def_cfa_register 7
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 470              		.loc 1 370 0
 471 0004 044B     		ldr	r3, .L30
 472 0006 1B68     		ldr	r3, [r3]
 473 0008 034A     		ldr	r2, .L30
 474 000a 43F00203 		orr	r3, r3, #2
 475 000e 1360     		str	r3, [r2]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 476              		.loc 1 371 0
 477 0010 00BF     		nop
 478 0012 BD46     		mov	sp, r7
 479              	.LCFI36:
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 0014 80BC     		pop	{r7}
 483              	.LCFI37:
 484              		.cfi_restore 7
 485              		.cfi_def_cfa_offset 0
 486 0016 7047     		bx	lr
 487              	.L31:
 488              		.align	2
 489              	.L30:
 490 0018 10E000E0 		.word	-536813552
 491              		.cfi_endproc
 492              	.LFE75:
 494              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 495              		.align	1
 496              		.global	HAL_GetHalVersion
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu softvfp
 502              	HAL_GetHalVersion:
 503              	.LFB76:
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
ARM GAS  /tmp/ccFcZrf8.s 			page 16


 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 504              		.loc 1 378 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509 0000 80B4     		push	{r7}
 510              	.LCFI38:
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              	.LCFI39:
 515              		.cfi_def_cfa_register 7
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  return __STM32F1xx_HAL_VERSION;
 516              		.loc 1 379 0
 517 0004 024B     		ldr	r3, .L34
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 518              		.loc 1 380 0
 519 0006 1846     		mov	r0, r3
 520 0008 BD46     		mov	sp, r7
 521              	.LCFI40:
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000a 80BC     		pop	{r7}
 525              	.LCFI41:
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 000c 7047     		bx	lr
 529              	.L35:
 530 000e 00BF     		.align	2
 531              	.L34:
 532 0010 00010101 		.word	16843008
 533              		.cfi_endproc
 534              	.LFE76:
 536              		.section	.text.HAL_GetREVID,"ax",%progbits
 537              		.align	1
 538              		.global	HAL_GetREVID
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu softvfp
 544              	HAL_GetREVID:
 545              	.LFB77:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
ARM GAS  /tmp/ccFcZrf8.s 			page 17


 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 546              		.loc 1 394 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551 0000 80B4     		push	{r7}
 552              	.LCFI42:
 553              		.cfi_def_cfa_offset 4
 554              		.cfi_offset 7, -4
 555 0002 00AF     		add	r7, sp, #0
 556              	.LCFI43:
 557              		.cfi_def_cfa_register 7
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 558              		.loc 1 395 0
 559 0004 034B     		ldr	r3, .L38
 560 0006 1B68     		ldr	r3, [r3]
 561 0008 1B0C     		lsrs	r3, r3, #16
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 562              		.loc 1 396 0
 563 000a 1846     		mov	r0, r3
 564 000c BD46     		mov	sp, r7
 565              	.LCFI44:
 566              		.cfi_def_cfa_register 13
 567              		@ sp needed
 568 000e 80BC     		pop	{r7}
 569              	.LCFI45:
 570              		.cfi_restore 7
 571              		.cfi_def_cfa_offset 0
 572 0010 7047     		bx	lr
 573              	.L39:
 574 0012 00BF     		.align	2
 575              	.L38:
 576 0014 002004E0 		.word	-536600576
 577              		.cfi_endproc
 578              	.LFE77:
 580              		.section	.text.HAL_GetDEVID,"ax",%progbits
 581              		.align	1
 582              		.global	HAL_GetDEVID
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu softvfp
 588              	HAL_GetDEVID:
 589              	.LFB78:
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
ARM GAS  /tmp/ccFcZrf8.s 			page 18


 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 590              		.loc 1 410 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595 0000 80B4     		push	{r7}
 596              	.LCFI46:
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 00AF     		add	r7, sp, #0
 600              	.LCFI47:
 601              		.cfi_def_cfa_register 7
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 602              		.loc 1 411 0
 603 0004 034B     		ldr	r3, .L42
 604 0006 1B68     		ldr	r3, [r3]
 605 0008 C3F30B03 		ubfx	r3, r3, #0, #12
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 606              		.loc 1 412 0
 607 000c 1846     		mov	r0, r3
 608 000e BD46     		mov	sp, r7
 609              	.LCFI48:
 610              		.cfi_def_cfa_register 13
 611              		@ sp needed
 612 0010 80BC     		pop	{r7}
 613              	.LCFI49:
 614              		.cfi_restore 7
 615              		.cfi_def_cfa_offset 0
 616 0012 7047     		bx	lr
 617              	.L43:
 618              		.align	2
 619              	.L42:
 620 0014 002004E0 		.word	-536600576
 621              		.cfi_endproc
 622              	.LFE78:
 624              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 625              		.align	1
 626              		.global	HAL_DBGMCU_EnableDBGSleepMode
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 630              		.fpu softvfp
 632              	HAL_DBGMCU_EnableDBGSleepMode:
 633              	.LFB79:
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 634              		.loc 1 419 0
ARM GAS  /tmp/ccFcZrf8.s 			page 19


 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639 0000 80B4     		push	{r7}
 640              	.LCFI50:
 641              		.cfi_def_cfa_offset 4
 642              		.cfi_offset 7, -4
 643 0002 00AF     		add	r7, sp, #0
 644              	.LCFI51:
 645              		.cfi_def_cfa_register 7
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 646              		.loc 1 420 0
 647 0004 044B     		ldr	r3, .L45
 648 0006 5B68     		ldr	r3, [r3, #4]
 649 0008 034A     		ldr	r2, .L45
 650 000a 43F00103 		orr	r3, r3, #1
 651 000e 5360     		str	r3, [r2, #4]
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 652              		.loc 1 421 0
 653 0010 00BF     		nop
 654 0012 BD46     		mov	sp, r7
 655              	.LCFI52:
 656              		.cfi_def_cfa_register 13
 657              		@ sp needed
 658 0014 80BC     		pop	{r7}
 659              	.LCFI53:
 660              		.cfi_restore 7
 661              		.cfi_def_cfa_offset 0
 662 0016 7047     		bx	lr
 663              	.L46:
 664              		.align	2
 665              	.L45:
 666 0018 002004E0 		.word	-536600576
 667              		.cfi_endproc
 668              	.LFE79:
 670              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 671              		.align	1
 672              		.global	HAL_DBGMCU_DisableDBGSleepMode
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 676              		.fpu softvfp
 678              	HAL_DBGMCU_DisableDBGSleepMode:
 679              	.LFB80:
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/ccFcZrf8.s 			page 20


 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 680              		.loc 1 435 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685 0000 80B4     		push	{r7}
 686              	.LCFI54:
 687              		.cfi_def_cfa_offset 4
 688              		.cfi_offset 7, -4
 689 0002 00AF     		add	r7, sp, #0
 690              	.LCFI55:
 691              		.cfi_def_cfa_register 7
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 692              		.loc 1 436 0
 693 0004 044B     		ldr	r3, .L48
 694 0006 5B68     		ldr	r3, [r3, #4]
 695 0008 034A     		ldr	r2, .L48
 696 000a 23F00103 		bic	r3, r3, #1
 697 000e 5360     		str	r3, [r2, #4]
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 698              		.loc 1 437 0
 699 0010 00BF     		nop
 700 0012 BD46     		mov	sp, r7
 701              	.LCFI56:
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 0014 80BC     		pop	{r7}
 705              	.LCFI57:
 706              		.cfi_restore 7
 707              		.cfi_def_cfa_offset 0
 708 0016 7047     		bx	lr
 709              	.L49:
 710              		.align	2
 711              	.L48:
 712 0018 002004E0 		.word	-536600576
 713              		.cfi_endproc
 714              	.LFE80:
 716              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 717              		.align	1
 718              		.global	HAL_DBGMCU_EnableDBGStopMode
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 722              		.fpu softvfp
 724              	HAL_DBGMCU_EnableDBGStopMode:
 725              	.LFB81:
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
ARM GAS  /tmp/ccFcZrf8.s 			page 21


 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode 
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer 
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode  
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 726              		.loc 1 465 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 0000 80B4     		push	{r7}
 732              	.LCFI58:
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 7, -4
 735 0002 00AF     		add	r7, sp, #0
 736              	.LCFI59:
 737              		.cfi_def_cfa_register 7
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 738              		.loc 1 466 0
 739 0004 044B     		ldr	r3, .L51
 740 0006 5B68     		ldr	r3, [r3, #4]
 741 0008 034A     		ldr	r2, .L51
 742 000a 43F00203 		orr	r3, r3, #2
 743 000e 5360     		str	r3, [r2, #4]
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 744              		.loc 1 467 0
 745 0010 00BF     		nop
 746 0012 BD46     		mov	sp, r7
 747              	.LCFI60:
 748              		.cfi_def_cfa_register 13
 749              		@ sp needed
 750 0014 80BC     		pop	{r7}
 751              	.LCFI61:
 752              		.cfi_restore 7
 753              		.cfi_def_cfa_offset 0
 754 0016 7047     		bx	lr
 755              	.L52:
 756              		.align	2
 757              	.L51:
 758 0018 002004E0 		.word	-536600576
 759              		.cfi_endproc
 760              	.LFE81:
 762              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
ARM GAS  /tmp/ccFcZrf8.s 			page 22


 763              		.align	1
 764              		.global	HAL_DBGMCU_DisableDBGStopMode
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 768              		.fpu softvfp
 770              	HAL_DBGMCU_DisableDBGStopMode:
 771              	.LFB82:
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 772              		.loc 1 481 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777 0000 80B4     		push	{r7}
 778              	.LCFI62:
 779              		.cfi_def_cfa_offset 4
 780              		.cfi_offset 7, -4
 781 0002 00AF     		add	r7, sp, #0
 782              	.LCFI63:
 783              		.cfi_def_cfa_register 7
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 784              		.loc 1 482 0
 785 0004 044B     		ldr	r3, .L54
 786 0006 5B68     		ldr	r3, [r3, #4]
 787 0008 034A     		ldr	r2, .L54
 788 000a 23F00203 		bic	r3, r3, #2
 789 000e 5360     		str	r3, [r2, #4]
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 790              		.loc 1 483 0
 791 0010 00BF     		nop
 792 0012 BD46     		mov	sp, r7
 793              	.LCFI64:
 794              		.cfi_def_cfa_register 13
 795              		@ sp needed
 796 0014 80BC     		pop	{r7}
 797              	.LCFI65:
 798              		.cfi_restore 7
 799              		.cfi_def_cfa_offset 0
 800 0016 7047     		bx	lr
 801              	.L55:
 802              		.align	2
 803              	.L54:
 804 0018 002004E0 		.word	-536600576
ARM GAS  /tmp/ccFcZrf8.s 			page 23


 805              		.cfi_endproc
 806              	.LFE82:
 808              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 809              		.align	1
 810              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu softvfp
 816              	HAL_DBGMCU_EnableDBGStandbyMode:
 817              	.LFB83:
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 818              		.loc 1 497 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              	.LCFI66:
 825              		.cfi_def_cfa_offset 4
 826              		.cfi_offset 7, -4
 827 0002 00AF     		add	r7, sp, #0
 828              	.LCFI67:
 829              		.cfi_def_cfa_register 7
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 830              		.loc 1 498 0
 831 0004 044B     		ldr	r3, .L57
 832 0006 5B68     		ldr	r3, [r3, #4]
 833 0008 034A     		ldr	r2, .L57
 834 000a 43F00403 		orr	r3, r3, #4
 835 000e 5360     		str	r3, [r2, #4]
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 836              		.loc 1 499 0
 837 0010 00BF     		nop
 838 0012 BD46     		mov	sp, r7
 839              	.LCFI68:
 840              		.cfi_def_cfa_register 13
 841              		@ sp needed
 842 0014 80BC     		pop	{r7}
 843              	.LCFI69:
 844              		.cfi_restore 7
 845              		.cfi_def_cfa_offset 0
 846 0016 7047     		bx	lr
 847              	.L58:
ARM GAS  /tmp/ccFcZrf8.s 			page 24


 848              		.align	2
 849              	.L57:
 850 0018 002004E0 		.word	-536600576
 851              		.cfi_endproc
 852              	.LFE83:
 854              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 855              		.align	1
 856              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu softvfp
 862              	HAL_DBGMCU_DisableDBGStandbyMode:
 863              	.LFB84:
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 864              		.loc 1 513 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              	.LCFI70:
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 00AF     		add	r7, sp, #0
 874              	.LCFI71:
 875              		.cfi_def_cfa_register 7
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 876              		.loc 1 514 0
 877 0004 044B     		ldr	r3, .L60
 878 0006 5B68     		ldr	r3, [r3, #4]
 879 0008 034A     		ldr	r2, .L60
 880 000a 23F00403 		bic	r3, r3, #4
 881 000e 5360     		str	r3, [r2, #4]
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 882              		.loc 1 515 0
 883 0010 00BF     		nop
 884 0012 BD46     		mov	sp, r7
 885              	.LCFI72:
 886              		.cfi_def_cfa_register 13
 887              		@ sp needed
 888 0014 80BC     		pop	{r7}
 889              	.LCFI73:
 890              		.cfi_restore 7
ARM GAS  /tmp/ccFcZrf8.s 			page 25


 891              		.cfi_def_cfa_offset 0
 892 0016 7047     		bx	lr
 893              	.L61:
 894              		.align	2
 895              	.L60:
 896 0018 002004E0 		.word	-536600576
 897              		.cfi_endproc
 898              	.LFE84:
 900              		.section	.text.HAL_GetUID,"ax",%progbits
 901              		.align	1
 902              		.global	HAL_GetUID
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 906              		.fpu softvfp
 908              	HAL_GetUID:
 909              	.LFB85:
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param UID: pointer to 3 words array.
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 910              		.loc 1 523 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 8
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915 0000 80B4     		push	{r7}
 916              	.LCFI74:
 917              		.cfi_def_cfa_offset 4
 918              		.cfi_offset 7, -4
 919 0002 83B0     		sub	sp, sp, #12
 920              	.LCFI75:
 921              		.cfi_def_cfa_offset 16
 922 0004 00AF     		add	r7, sp, #0
 923              	.LCFI76:
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 926              		.loc 1 524 0
 927 0008 094B     		ldr	r3, .L63
 928 000a 1A68     		ldr	r2, [r3]
 929 000c 7B68     		ldr	r3, [r7, #4]
 930 000e 1A60     		str	r2, [r3]
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 931              		.loc 1 525 0
 932 0010 084A     		ldr	r2, .L63+4
 933 0012 7B68     		ldr	r3, [r7, #4]
 934 0014 0433     		adds	r3, r3, #4
 935 0016 1268     		ldr	r2, [r2]
 936 0018 1A60     		str	r2, [r3]
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 937              		.loc 1 526 0
 938 001a 074A     		ldr	r2, .L63+8
ARM GAS  /tmp/ccFcZrf8.s 			page 26


 939 001c 7B68     		ldr	r3, [r7, #4]
 940 001e 0833     		adds	r3, r3, #8
 941 0020 1268     		ldr	r2, [r2]
 942 0022 1A60     		str	r2, [r3]
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 943              		.loc 1 527 0
 944 0024 00BF     		nop
 945 0026 0C37     		adds	r7, r7, #12
 946              	.LCFI77:
 947              		.cfi_def_cfa_offset 4
 948 0028 BD46     		mov	sp, r7
 949              	.LCFI78:
 950              		.cfi_def_cfa_register 13
 951              		@ sp needed
 952 002a 80BC     		pop	{r7}
 953              	.LCFI79:
 954              		.cfi_restore 7
 955              		.cfi_def_cfa_offset 0
 956 002c 7047     		bx	lr
 957              	.L64:
 958 002e 00BF     		.align	2
 959              	.L63:
 960 0030 E8F7FF1F 		.word	536868840
 961 0034 ECF7FF1F 		.word	536868844
 962 0038 F0F7FF1F 		.word	536868848
 963              		.cfi_endproc
 964              	.LFE85:
 966              		.text
 967              	.Letext0:
 968              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 969              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 970              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 971              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 972              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 973              		.file 7 "/usr/include/newlib/sys/lock.h"
 974              		.file 8 "/usr/include/newlib/sys/_types.h"
 975              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 976              		.file 10 "/usr/include/newlib/sys/reent.h"
 977              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  /tmp/ccFcZrf8.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
                            *COM*:0000000000000004 uwTick
     /tmp/ccFcZrf8.s:17     .text.HAL_Init:0000000000000000 $t
     /tmp/ccFcZrf8.s:24     .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccFcZrf8.s:197    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccFcZrf8.s:125    .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccFcZrf8.s:61     .text.HAL_Init:0000000000000028 $d
     /tmp/ccFcZrf8.s:66     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccFcZrf8.s:73     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccFcZrf8.s:161    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccFcZrf8.s:113    .text.HAL_DeInit:000000000000002c $d
     /tmp/ccFcZrf8.s:118    .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccFcZrf8.s:154    .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccFcZrf8.s:190    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccFcZrf8.s:243    .text.HAL_InitTick:0000000000000030 $d
     /tmp/ccFcZrf8.s:249    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccFcZrf8.s:256    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccFcZrf8.s:290    .text.HAL_IncTick:0000000000000018 $d
     /tmp/ccFcZrf8.s:295    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccFcZrf8.s:302    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccFcZrf8.s:333    .text.HAL_GetTick:0000000000000010 $d
     /tmp/ccFcZrf8.s:338    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccFcZrf8.s:345    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccFcZrf8.s:403    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccFcZrf8.s:410    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccFcZrf8.s:444    .text.HAL_SuspendTick:0000000000000018 $d
     /tmp/ccFcZrf8.s:449    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccFcZrf8.s:456    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccFcZrf8.s:490    .text.HAL_ResumeTick:0000000000000018 $d
     /tmp/ccFcZrf8.s:495    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccFcZrf8.s:502    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccFcZrf8.s:532    .text.HAL_GetHalVersion:0000000000000010 $d
     /tmp/ccFcZrf8.s:537    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccFcZrf8.s:544    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccFcZrf8.s:576    .text.HAL_GetREVID:0000000000000014 $d
     /tmp/ccFcZrf8.s:581    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccFcZrf8.s:588    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccFcZrf8.s:620    .text.HAL_GetDEVID:0000000000000014 $d
     /tmp/ccFcZrf8.s:625    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccFcZrf8.s:632    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccFcZrf8.s:666    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000018 $d
     /tmp/ccFcZrf8.s:671    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccFcZrf8.s:678    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccFcZrf8.s:712    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000018 $d
     /tmp/ccFcZrf8.s:717    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccFcZrf8.s:724    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccFcZrf8.s:758    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000018 $d
     /tmp/ccFcZrf8.s:763    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccFcZrf8.s:770    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccFcZrf8.s:804    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000018 $d
     /tmp/ccFcZrf8.s:809    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccFcZrf8.s:816    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccFcZrf8.s:850    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000018 $d
     /tmp/ccFcZrf8.s:855    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccFcZrf8.s:862    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccFcZrf8.s:896    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000018 $d
ARM GAS  /tmp/ccFcZrf8.s 			page 28


     /tmp/ccFcZrf8.s:901    .text.HAL_GetUID:0000000000000000 $t
     /tmp/ccFcZrf8.s:908    .text.HAL_GetUID:0000000000000000 HAL_GetUID
     /tmp/ccFcZrf8.s:960    .text.HAL_GetUID:0000000000000030 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
