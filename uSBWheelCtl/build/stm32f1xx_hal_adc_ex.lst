ARM GAS  /tmp/ccAQNJcJ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_adc_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_ADCEx_Calibration_Start
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_ADCEx_Calibration_Start:
  24              	.LFB66:
  25              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @file    stm32f1xx_hal_adc_ex.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @version V1.1.1
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @date    12-May-2017
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          peripheral:
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *           + Operation functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *             ++ Start, stop, get result of conversions of injected
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *                group, using 2 possible modes: polling, interruption.
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *             ++ Multimode feature (available on devices with 2 ADCs or more)
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *             ++ Calibration (ADC automatic self-calibration)
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *           + Control functions
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *             ++ Channels configuration on injected group
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file 
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          "stm32f1xx_hal_adc.c".
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   @verbatim
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   [..] 
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       available in file of generic functions "stm32f1xx_hal_adc.c".
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   @endverbatim
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @attention
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * are permitted provided that the following conditions are met:
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
ARM GAS  /tmp/ccAQNJcJ.s 			page 2


  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer.
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      and/or other materials provided with the distribution.
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      may be used to endorse or promote products derived from this software
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      without specific prior written permission.
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************  
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #include "stm32f1xx_hal.h"
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @addtogroup STM32F1xx_HAL_Driver
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief ADC Extension HAL module driver
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADCEx Private Constants
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Delay for ADC calibration:                                               */
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Hardware prerequisite before starting a calibration: the ADC must have   */
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* been in power-on state for at least two ADC clock cycles.                */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: ADC clock cycles                                                   */
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES       2U
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Timeout value for ADC calibration                                        */
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Value defined to be higher than worst cases: low clocks freq,            */
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* prescaler 4, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT          10U
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
ARM GAS  /tmp/ccAQNJcJ.s 			page 3


  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         10U
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @}
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private functions ---------------------------------------------------------*/
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADCEx Exported Functions
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Extended IO operation functions
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  *  @brief    Extended Extended Input and Output operation functions
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  *
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @verbatim    
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       ##### IO operation functions #####
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start conversion of injected group.
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop conversion of injected group.
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Poll for conversion complete on injected group.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start conversion of injected group and enable interruptions.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop conversion of injected group and disable interruptions.
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start multimode and enable DMA transfer.
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @endverbatim
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         During calibration process, ADC is enabled. ADC is let enabled at
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         the completion of this function.
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc)
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
  26              		.loc 1 145 0
  27              		.cfi_startproc
ARM GAS  /tmp/ccAQNJcJ.s 			page 4


  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 90B5     		push	{r4, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  43              		.loc 1 146 0
  44 0008 0023     		movs	r3, #0
  45 000a FB75     		strb	r3, [r7, #23]
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tickstart;
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
  46              		.loc 1 148 0
  47 000c 0023     		movs	r3, #0
  48 000e FB60     		str	r3, [r7, #12]
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  49              		.loc 1 154 0
  50 0010 7B68     		ldr	r3, [r7, #4]
  51 0012 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
  52 0016 012B     		cmp	r3, #1
  53 0018 01D1     		bne	.L2
  54              		.loc 1 154 0 is_stmt 0 discriminator 1
  55 001a 0223     		movs	r3, #2
  56 001c 86E0     		b	.L3
  57              	.L2:
  58              		.loc 1 154 0 discriminator 2
  59 001e 7B68     		ldr	r3, [r7, #4]
  60 0020 0122     		movs	r2, #1
  61 0022 83F82420 		strb	r2, [r3, #36]
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* 1. Calibration prerequisite:                                             */
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    - ADC must be disabled for at least two ADC clock cycles in disable   */
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*      mode before ADC enable                                              */
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups       */
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
  62              		.loc 1 161 0 is_stmt 1 discriminator 2
  63 0026 7868     		ldr	r0, [r7, #4]
  64 0028 FFF7FEFF 		bl	ADC_ConversionStop_Disable
  65 002c 0346     		mov	r3, r0
  66 002e FB75     		strb	r3, [r7, #23]
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
ARM GAS  /tmp/ccAQNJcJ.s 			page 5


 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  67              		.loc 1 164 0 discriminator 2
  68 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  69 0032 002B     		cmp	r3, #0
  70 0034 75D1     		bne	.L4
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state */
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
  71              		.loc 1 167 0
  72 0036 7B68     		ldr	r3, [r7, #4]
  73 0038 9B6A     		ldr	r3, [r3, #40]
  74 003a 23F48853 		bic	r3, r3, #4352
  75 003e 23F00203 		bic	r3, r3, #2
  76 0042 43F00202 		orr	r2, r3, #2
  77 0046 7B68     		ldr	r3, [r7, #4]
  78 0048 9A62     		str	r2, [r3, #40]
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Hardware prerequisite: delay before starting the calibration.          */
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles.  */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Wait for the expected ADC clock cycles delay */
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     wait_loop_index = ((SystemCoreClock
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
  79              		.loc 1 175 0
  80 004a 3A4B     		ldr	r3, .L11
  81 004c 1C68     		ldr	r4, [r3]
  82 004e 0220     		movs	r0, #2
  83 0050 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
  84 0054 0346     		mov	r3, r0
  85 0056 B4FBF3F3 		udiv	r3, r4, r3
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                        * ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES        );
  86              		.loc 1 176 0
  87 005a 5B00     		lsls	r3, r3, #1
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
  88              		.loc 1 174 0
  89 005c FB60     		str	r3, [r7, #12]
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(wait_loop_index != 0U)
  90              		.loc 1 178 0
  91 005e 02E0     		b	.L5
  92              	.L6:
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       wait_loop_index--;
  93              		.loc 1 180 0
  94 0060 FB68     		ldr	r3, [r7, #12]
  95 0062 013B     		subs	r3, r3, #1
  96 0064 FB60     		str	r3, [r7, #12]
  97              	.L5:
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
  98              		.loc 1 178 0
  99 0066 FB68     		ldr	r3, [r7, #12]
 100 0068 002B     		cmp	r3, #0
 101 006a F9D1     		bne	.L6
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* 2. Enable the ADC peripheral */
ARM GAS  /tmp/ccAQNJcJ.s 			page 6


 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_Enable(hadc);
 102              		.loc 1 184 0
 103 006c 7868     		ldr	r0, [r7, #4]
 104 006e FFF7FEFF 		bl	ADC_Enable
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* 3. Resets ADC calibration registers */  
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_RSTCAL);
 105              		.loc 1 187 0
 106 0072 7B68     		ldr	r3, [r7, #4]
 107 0074 1B68     		ldr	r3, [r3]
 108 0076 9A68     		ldr	r2, [r3, #8]
 109 0078 7B68     		ldr	r3, [r7, #4]
 110 007a 1B68     		ldr	r3, [r3]
 111 007c 42F00802 		orr	r2, r2, #8
 112 0080 9A60     		str	r2, [r3, #8]
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
 113              		.loc 1 189 0
 114 0082 FFF7FEFF 		bl	HAL_GetTick
 115 0086 3861     		str	r0, [r7, #16]
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait for calibration reset completion */
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_RSTCAL))
 116              		.loc 1 192 0
 117 0088 14E0     		b	.L7
 118              	.L8:
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
 119              		.loc 1 194 0
 120 008a FFF7FEFF 		bl	HAL_GetTick
 121 008e 0246     		mov	r2, r0
 122 0090 3B69     		ldr	r3, [r7, #16]
 123 0092 D31A     		subs	r3, r2, r3
 124 0094 0A2B     		cmp	r3, #10
 125 0096 0DD9     		bls	.L7
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 126              		.loc 1 197 0
 127 0098 7B68     		ldr	r3, [r7, #4]
 128 009a 9B6A     		ldr	r3, [r3, #40]
 129 009c 23F01203 		bic	r3, r3, #18
 130 00a0 43F01002 		orr	r2, r3, #16
 131 00a4 7B68     		ldr	r3, [r7, #4]
 132 00a6 9A62     		str	r2, [r3, #40]
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Process unlocked */
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 133              		.loc 1 202 0
 134 00a8 7B68     		ldr	r3, [r7, #4]
 135 00aa 0022     		movs	r2, #0
 136 00ac 83F82420 		strb	r2, [r3, #36]
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         return HAL_ERROR;
 137              		.loc 1 204 0
ARM GAS  /tmp/ccAQNJcJ.s 			page 7


 138 00b0 0123     		movs	r3, #1
 139 00b2 3BE0     		b	.L3
 140              	.L7:
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 141              		.loc 1 192 0
 142 00b4 7B68     		ldr	r3, [r7, #4]
 143 00b6 1B68     		ldr	r3, [r3]
 144 00b8 9B68     		ldr	r3, [r3, #8]
 145 00ba 03F00803 		and	r3, r3, #8
 146 00be 002B     		cmp	r3, #0
 147 00c0 E3D1     		bne	.L8
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* 4. Start ADC calibration */
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_CAL);
 148              		.loc 1 210 0
 149 00c2 7B68     		ldr	r3, [r7, #4]
 150 00c4 1B68     		ldr	r3, [r3]
 151 00c6 9A68     		ldr	r2, [r3, #8]
 152 00c8 7B68     		ldr	r3, [r7, #4]
 153 00ca 1B68     		ldr	r3, [r3]
 154 00cc 42F00402 		orr	r2, r2, #4
 155 00d0 9A60     		str	r2, [r3, #8]
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
 156              		.loc 1 212 0
 157 00d2 FFF7FEFF 		bl	HAL_GetTick
 158 00d6 3861     		str	r0, [r7, #16]
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_CAL))
 159              		.loc 1 215 0
 160 00d8 14E0     		b	.L9
 161              	.L10:
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
 162              		.loc 1 217 0
 163 00da FFF7FEFF 		bl	HAL_GetTick
 164 00de 0246     		mov	r2, r0
 165 00e0 3B69     		ldr	r3, [r7, #16]
 166 00e2 D31A     		subs	r3, r2, r3
 167 00e4 0A2B     		cmp	r3, #10
 168 00e6 0DD9     		bls	.L9
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 169              		.loc 1 220 0
 170 00e8 7B68     		ldr	r3, [r7, #4]
 171 00ea 9B6A     		ldr	r3, [r3, #40]
 172 00ec 23F01203 		bic	r3, r3, #18
 173 00f0 43F01002 		orr	r2, r3, #16
 174 00f4 7B68     		ldr	r3, [r7, #4]
 175 00f6 9A62     		str	r2, [r3, #40]
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /tmp/ccAQNJcJ.s 			page 8


 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Process unlocked */
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 176              		.loc 1 225 0
 177 00f8 7B68     		ldr	r3, [r7, #4]
 178 00fa 0022     		movs	r2, #0
 179 00fc 83F82420 		strb	r2, [r3, #36]
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         return HAL_ERROR;
 180              		.loc 1 227 0
 181 0100 0123     		movs	r3, #1
 182 0102 13E0     		b	.L3
 183              	.L9:
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 184              		.loc 1 215 0
 185 0104 7B68     		ldr	r3, [r7, #4]
 186 0106 1B68     		ldr	r3, [r3]
 187 0108 9B68     		ldr	r3, [r3, #8]
 188 010a 03F00403 		and	r3, r3, #4
 189 010e 002B     		cmp	r3, #0
 190 0110 E3D1     		bne	.L10
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 191              		.loc 1 232 0
 192 0112 7B68     		ldr	r3, [r7, #4]
 193 0114 9B6A     		ldr	r3, [r3, #40]
 194 0116 23F00303 		bic	r3, r3, #3
 195 011a 43F00102 		orr	r2, r3, #1
 196 011e 7B68     		ldr	r3, [r7, #4]
 197 0120 9A62     		str	r2, [r3, #40]
 198              	.L4:
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 199              		.loc 1 238 0
 200 0122 7B68     		ldr	r3, [r7, #4]
 201 0124 0022     		movs	r2, #0
 202 0126 83F82420 		strb	r2, [r3, #36]
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 203              		.loc 1 241 0
 204 012a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 205              	.L3:
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 206              		.loc 1 242 0
 207 012c 1846     		mov	r0, r3
 208 012e 1C37     		adds	r7, r7, #28
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 12
 211 0130 BD46     		mov	sp, r7
ARM GAS  /tmp/ccAQNJcJ.s 			page 9


 212              	.LCFI4:
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0132 90BD     		pop	{r4, r7, pc}
 216              	.L12:
 217              		.align	2
 218              	.L11:
 219 0134 00000000 		.word	SystemCoreClock
 220              		.cfi_endproc
 221              	.LFE66:
 223              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_ADCEx_InjectedStart
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	HAL_ADCEx_InjectedStart:
 232              	.LFB67:
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 233              		.loc 1 251 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 16
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 80B5     		push	{r7, lr}
 238              	.LCFI5:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 84B0     		sub	sp, sp, #16
 243              	.LCFI6:
 244              		.cfi_def_cfa_offset 24
 245 0004 00AF     		add	r7, sp, #0
 246              	.LCFI7:
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 249              		.loc 1 252 0
 250 0008 0023     		movs	r3, #0
 251 000a FB73     		strb	r3, [r7, #15]
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 252              		.loc 1 258 0
 253 000c 7B68     		ldr	r3, [r7, #4]
 254 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
ARM GAS  /tmp/ccAQNJcJ.s 			page 10


 255 0012 012B     		cmp	r3, #1
 256 0014 01D1     		bne	.L14
 257              		.loc 1 258 0 is_stmt 0 discriminator 1
 258 0016 0223     		movs	r3, #2
 259 0018 70E0     		b	.L15
 260              	.L14:
 261              		.loc 1 258 0 discriminator 2
 262 001a 7B68     		ldr	r3, [r7, #4]
 263 001c 0122     		movs	r2, #1
 264 001e 83F82420 		strb	r2, [r3, #36]
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 265              		.loc 1 261 0 is_stmt 1 discriminator 2
 266 0022 7868     		ldr	r0, [r7, #4]
 267 0024 FFF7FEFF 		bl	ADC_Enable
 268 0028 0346     		mov	r3, r0
 269 002a FB73     		strb	r3, [r7, #15]
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 270              		.loc 1 264 0 discriminator 2
 271 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 272 002e 002B     		cmp	r3, #0
 273 0030 5FD1     		bne	.L16
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 274              		.loc 1 269 0
 275 0032 7B68     		ldr	r3, [r7, #4]
 276 0034 9B6A     		ldr	r3, [r3, #40]
 277 0036 23F44053 		bic	r3, r3, #12288
 278 003a 23F00103 		bic	r3, r3, #1
 279 003e 43F48052 		orr	r2, r3, #4096
 280 0042 7B68     		ldr	r3, [r7, #4]
 281 0044 9A62     		str	r2, [r3, #40]
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of independent mode or multimode (for devices with several ADCs): */
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set multimode state.                                                   */
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 282              		.loc 1 275 0
 283 0046 7B68     		ldr	r3, [r7, #4]
 284 0048 1B68     		ldr	r3, [r3]
 285 004a 2E4A     		ldr	r2, .L25
 286 004c 9342     		cmp	r3, r2
 287 004e 05D1     		bne	.L17
 288              		.loc 1 275 0 is_stmt 0 discriminator 1
 289 0050 2D4B     		ldr	r3, .L25+4
 290 0052 5B68     		ldr	r3, [r3, #4]
 291 0054 03F47023 		and	r3, r3, #983040
 292 0058 002B     		cmp	r3, #0
 293 005a 06D1     		bne	.L18
 294              	.L17:
ARM GAS  /tmp/ccAQNJcJ.s 			page 11


 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 295              		.loc 1 277 0 is_stmt 1
 296 005c 7B68     		ldr	r3, [r7, #4]
 297 005e 9B6A     		ldr	r3, [r3, #40]
 298 0060 23F48012 		bic	r2, r3, #1048576
 299 0064 7B68     		ldr	r3, [r7, #4]
 300 0066 9A62     		str	r2, [r3, #40]
 301 0068 05E0     		b	.L19
 302              	.L18:
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 303              		.loc 1 281 0
 304 006a 7B68     		ldr	r3, [r7, #4]
 305 006c 9B6A     		ldr	r3, [r3, #40]
 306 006e 43F48012 		orr	r2, r3, #1048576
 307 0072 7B68     		ldr	r3, [r7, #4]
 308 0074 9A62     		str	r2, [r3, #40]
 309              	.L19:
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 310              		.loc 1 288 0
 311 0076 7B68     		ldr	r3, [r7, #4]
 312 0078 9B6A     		ldr	r3, [r3, #40]
 313 007a 03F48073 		and	r3, r3, #256
 314 007e 002B     		cmp	r3, #0
 315 0080 02D1     		bne	.L20
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 316              		.loc 1 291 0
 317 0082 7B68     		ldr	r3, [r7, #4]
 318 0084 0022     		movs	r2, #0
 319 0086 DA62     		str	r2, [r3, #44]
 320              	.L20:
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 321              		.loc 1 297 0
 322 0088 7B68     		ldr	r3, [r7, #4]
 323 008a 0022     		movs	r2, #0
 324 008c 83F82420 		strb	r2, [r3, #36]
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 325              		.loc 1 301 0
ARM GAS  /tmp/ccAQNJcJ.s 			page 12


 326 0090 7B68     		ldr	r3, [r7, #4]
 327 0092 1B68     		ldr	r3, [r3]
 328 0094 6FF00402 		mvn	r2, #4
 329 0098 1A60     		str	r2, [r3]
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of multimode enabled (for devices with several ADCs): if ADC is   */
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* slave, ADC is enabled only (conversion is not started). If ADC is      */
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* master, ADC is enabled and conversion is started.                      */
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO))
 330              		.loc 1 312 0
 331 009a 7B68     		ldr	r3, [r7, #4]
 332 009c 1B68     		ldr	r3, [r3]
 333 009e 5B68     		ldr	r3, [r3, #4]
 334 00a0 03F48063 		and	r3, r3, #1024
 335 00a4 002B     		cmp	r3, #0
 336 00a6 28D1     		bne	.L24
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (ADC_IS_SOFTWARE_START_INJECTED(hadc)     &&
 337              		.loc 1 314 0
 338 00a8 7B68     		ldr	r3, [r7, #4]
 339 00aa 1B68     		ldr	r3, [r3]
 340 00ac 9B68     		ldr	r3, [r3, #8]
 341 00ae 03F4E043 		and	r3, r3, #28672
 342 00b2 B3F5E04F 		cmp	r3, #28672
 343 00b6 13D1     		bne	.L22
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 344              		.loc 1 315 0 discriminator 1
 345 00b8 7B68     		ldr	r3, [r7, #4]
 346 00ba 1B68     		ldr	r3, [r3]
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 347              		.loc 1 314 0 discriminator 1
 348 00bc 114A     		ldr	r2, .L25
 349 00be 9342     		cmp	r3, r2
 350 00c0 05D1     		bne	.L23
 351              		.loc 1 315 0 discriminator 2
 352 00c2 114B     		ldr	r3, .L25+4
 353 00c4 5B68     		ldr	r3, [r3, #4]
 354 00c6 03F47023 		and	r3, r3, #983040
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 355              		.loc 1 314 0 discriminator 2
 356 00ca 002B     		cmp	r3, #0
 357 00cc 08D1     		bne	.L22
 358              	.L23:
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with SW start */
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
 359              		.loc 1 318 0
 360 00ce 7B68     		ldr	r3, [r7, #4]
 361 00d0 1B68     		ldr	r3, [r3]
 362 00d2 9A68     		ldr	r2, [r3, #8]
 363 00d4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccAQNJcJ.s 			page 13


 364 00d6 1B68     		ldr	r3, [r3]
 365 00d8 42F40212 		orr	r2, r2, #2129920
 366 00dc 9A60     		str	r2, [r3, #8]
 367 00de 0CE0     		b	.L24
 368              	.L22:
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with external trigger */
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
 369              		.loc 1 323 0
 370 00e0 7B68     		ldr	r3, [r7, #4]
 371 00e2 1B68     		ldr	r3, [r3]
 372 00e4 9A68     		ldr	r2, [r3, #8]
 373 00e6 7B68     		ldr	r3, [r7, #4]
 374 00e8 1B68     		ldr	r3, [r3]
 375 00ea 42F40042 		orr	r2, r2, #32768
 376 00ee 9A60     		str	r2, [r3, #8]
 377 00f0 03E0     		b	.L24
 378              	.L16:
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 379              		.loc 1 330 0
 380 00f2 7B68     		ldr	r3, [r7, #4]
 381 00f4 0022     		movs	r2, #0
 382 00f6 83F82420 		strb	r2, [r3, #36]
 383              	.L24:
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 384              		.loc 1 334 0
 385 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 386              	.L15:
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 387              		.loc 1 335 0
 388 00fc 1846     		mov	r0, r3
 389 00fe 1037     		adds	r7, r7, #16
 390              	.LCFI8:
 391              		.cfi_def_cfa_offset 8
 392 0100 BD46     		mov	sp, r7
 393              	.LCFI9:
 394              		.cfi_def_cfa_register 13
 395              		@ sp needed
 396 0102 80BD     		pop	{r7, pc}
 397              	.L26:
 398              		.align	2
 399              	.L25:
 400 0104 00280140 		.word	1073817600
 401 0108 00240140 		.word	1073816576
 402              		.cfi_endproc
 403              	.LFE67:
ARM GAS  /tmp/ccAQNJcJ.s 			page 14


 405              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 406              		.align	1
 407              		.global	HAL_ADCEx_InjectedStop
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu softvfp
 413              	HAL_ADCEx_InjectedStop:
 414              	.LFB68:
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 415              		.loc 1 350 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 16
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419 0000 80B5     		push	{r7, lr}
 420              	.LCFI10:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 84B0     		sub	sp, sp, #16
 425              	.LCFI11:
 426              		.cfi_def_cfa_offset 24
 427 0004 00AF     		add	r7, sp, #0
 428              	.LCFI12:
 429              		.cfi_def_cfa_register 7
 430 0006 7860     		str	r0, [r7, #4]
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 431              		.loc 1 351 0
 432 0008 0023     		movs	r3, #0
 433 000a FB73     		strb	r3, [r7, #15]
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 434              		.loc 1 357 0
 435 000c 7B68     		ldr	r3, [r7, #4]
 436 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 437 0012 012B     		cmp	r3, #1
 438 0014 01D1     		bne	.L28
 439              		.loc 1 357 0 is_stmt 0 discriminator 1
 440 0016 0223     		movs	r3, #2
ARM GAS  /tmp/ccAQNJcJ.s 			page 15


 441 0018 30E0     		b	.L29
 442              	.L28:
 443              		.loc 1 357 0 discriminator 2
 444 001a 7B68     		ldr	r3, [r7, #4]
 445 001c 0122     		movs	r2, #1
 446 001e 83F82420 		strb	r2, [r3, #36]
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   are common)                                                            */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 447              		.loc 1 365 0 is_stmt 1 discriminator 2
 448 0022 7B68     		ldr	r3, [r7, #4]
 449 0024 9B6A     		ldr	r3, [r3, #40]
 450 0026 03F48073 		and	r3, r3, #256
 451 002a 002B     		cmp	r3, #0
 452 002c 19D1     		bne	.L30
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 453              		.loc 1 366 0 discriminator 1
 454 002e 7B68     		ldr	r3, [r7, #4]
 455 0030 1B68     		ldr	r3, [r3]
 456 0032 5B68     		ldr	r3, [r3, #4]
 457 0034 03F48063 		and	r3, r3, #1024
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 458              		.loc 1 365 0 discriminator 1
 459 0038 002B     		cmp	r3, #0
 460 003a 12D1     		bne	.L30
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 461              		.loc 1 370 0
 462 003c 7868     		ldr	r0, [r7, #4]
 463 003e FFF7FEFF 		bl	ADC_ConversionStop_Disable
 464 0042 0346     		mov	r3, r0
 465 0044 FB73     		strb	r3, [r7, #15]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 466              		.loc 1 373 0
 467 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 468 0048 002B     		cmp	r3, #0
 469 004a 12D1     		bne	.L32
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set ADC state */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 470              		.loc 1 376 0
 471 004c 7B68     		ldr	r3, [r7, #4]
 472 004e 9B6A     		ldr	r3, [r3, #40]
 473 0050 23F48853 		bic	r3, r3, #4352
 474 0054 23F00103 		bic	r3, r3, #1
 475 0058 43F00102 		orr	r2, r3, #1
 476 005c 7B68     		ldr	r3, [r7, #4]
 477 005e 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccAQNJcJ.s 			page 16


 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 478              		.loc 1 373 0
 479 0060 07E0     		b	.L32
 480              	.L30:
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 481              		.loc 1 384 0
 482 0062 7B68     		ldr	r3, [r7, #4]
 483 0064 9B6A     		ldr	r3, [r3, #40]
 484 0066 43F02002 		orr	r2, r3, #32
 485 006a 7B68     		ldr	r3, [r7, #4]
 486 006c 9A62     		str	r2, [r3, #40]
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 487              		.loc 1 386 0
 488 006e 0123     		movs	r3, #1
 489 0070 FB73     		strb	r3, [r7, #15]
 490              	.L32:
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 491              		.loc 1 390 0
 492 0072 7B68     		ldr	r3, [r7, #4]
 493 0074 0022     		movs	r2, #0
 494 0076 83F82420 		strb	r2, [r3, #36]
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 495              		.loc 1 393 0
 496 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 497              	.L29:
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 498              		.loc 1 394 0
 499 007c 1846     		mov	r0, r3
 500 007e 1037     		adds	r7, r7, #16
 501              	.LCFI13:
 502              		.cfi_def_cfa_offset 8
 503 0080 BD46     		mov	sp, r7
 504              	.LCFI14:
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0082 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE68:
 511              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 512              		.align	1
 513              		.global	HAL_ADCEx_InjectedPollForConversion
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
ARM GAS  /tmp/ccAQNJcJ.s 			page 17


 517              		.fpu softvfp
 519              	HAL_ADCEx_InjectedPollForConversion:
 520              	.LFB69:
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 521              		.loc 1 403 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 24
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525 0000 90B5     		push	{r4, r7, lr}
 526              	.LCFI15:
 527              		.cfi_def_cfa_offset 12
 528              		.cfi_offset 4, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 87B0     		sub	sp, sp, #28
 532              	.LCFI16:
 533              		.cfi_def_cfa_offset 40
 534 0004 00AF     		add	r7, sp, #0
 535              	.LCFI17:
 536              		.cfi_def_cfa_register 7
 537 0006 7860     		str	r0, [r7, #4]
 538 0008 3960     		str	r1, [r7]
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tickstart;
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled and polling for each  */
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion.                                                              */
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t Conversion_Timeout_CPU_cycles = 0U;
 539              		.loc 1 408 0
 540 000a 0023     		movs	r3, #0
 541 000c FB60     		str	r3, [r7, #12]
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
 542              		.loc 1 409 0
 543 000e 0023     		movs	r3, #0
 544 0010 7B61     		str	r3, [r7, #20]
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Get timeout */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
 545              		.loc 1 415 0
 546 0012 FFF7FEFF 		bl	HAL_GetTick
 547 0016 3861     		str	r0, [r7, #16]
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion.                                                              */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* For injected group, flag JEOC is set only at the end of the sequence,    */
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* not for each conversion within the sequence.                             */
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - If single conversion for injected group (scan mode disabled or        */
ARM GAS  /tmp/ccAQNJcJ.s 			page 18


 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion ==1), flag JEOC is used to determine the      */
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - If sequence conversion for injected group (scan mode enabled and      */
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion >=2), flag JEOC is set only at the end of the */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    sequence.                                                             */
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    As flag JEOC is not set after each conversion, no timeout status can  */
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    be set.                                                               */
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((hadc->Instance->JSQR & ADC_JSQR_JL) == RESET)
 548              		.loc 1 433 0
 549 0018 7B68     		ldr	r3, [r7, #4]
 550 001a 1B68     		ldr	r3, [r3]
 551 001c 9B6B     		ldr	r3, [r3, #56]
 552 001e 03F44013 		and	r3, r3, #3145728
 553 0022 002B     		cmp	r3, #0
 554 0024 23D1     		bne	.L34
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
 555              		.loc 1 436 0
 556 0026 1AE0     		b	.L35
 557              	.L38:
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
 558              		.loc 1 439 0
 559 0028 3B68     		ldr	r3, [r7]
 560 002a B3F1FF3F 		cmp	r3, #-1
 561 002e 16D0     		beq	.L35
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 562              		.loc 1 441 0
 563 0030 3B68     		ldr	r3, [r7]
 564 0032 002B     		cmp	r3, #0
 565 0034 07D0     		beq	.L36
 566              		.loc 1 441 0 is_stmt 0 discriminator 1
 567 0036 FFF7FEFF 		bl	HAL_GetTick
 568 003a 0246     		mov	r2, r0
 569 003c 3B69     		ldr	r3, [r7, #16]
 570 003e D31A     		subs	r3, r2, r3
 571 0040 3A68     		ldr	r2, [r7]
 572 0042 9A42     		cmp	r2, r3
 573 0044 0BD2     		bcs	.L35
 574              	.L36:
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 575              		.loc 1 444 0 is_stmt 1
 576 0046 7B68     		ldr	r3, [r7, #4]
 577 0048 9B6A     		ldr	r3, [r3, #40]
 578 004a 43F00402 		orr	r2, r3, #4
 579 004e 7B68     		ldr	r3, [r7, #4]
 580 0050 9A62     		str	r2, [r3, #40]
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           
ARM GAS  /tmp/ccAQNJcJ.s 			page 19


 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Process unlocked */
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 581              		.loc 1 447 0
 582 0052 7B68     		ldr	r3, [r7, #4]
 583 0054 0022     		movs	r2, #0
 584 0056 83F82420 		strb	r2, [r3, #36]
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 585              		.loc 1 449 0
 586 005a 0323     		movs	r3, #3
 587 005c ADE0     		b	.L37
 588              	.L35:
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 589              		.loc 1 436 0
 590 005e 7B68     		ldr	r3, [r7, #4]
 591 0060 1B68     		ldr	r3, [r3]
 592 0062 1B68     		ldr	r3, [r3]
 593 0064 03F00403 		and	r3, r3, #4
 594 0068 002B     		cmp	r3, #0
 595 006a DDD0     		beq	.L38
 596 006c 6CE0     		b	.L39
 597              	.L34:
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles   */
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*    and ADC maximum conversion cycles on all channels.                  */
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Wait for the expected ADC clock cycles delay                        */
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ((SystemCoreClock
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 598              		.loc 1 461 0
 599 006e 554B     		ldr	r3, .L54
 600 0070 1C68     		ldr	r4, [r3]
 601 0072 0220     		movs	r0, #2
 602 0074 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 603 0078 0346     		mov	r3, r0
 604 007a B4FBF3F2 		udiv	r2, r4, r3
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                          * ADC_CONVCYCLES_MAX_RANGE(hadc)                 );
 605              		.loc 1 462 0
 606 007e 7B68     		ldr	r3, [r7, #4]
 607 0080 1B68     		ldr	r3, [r3]
 608 0082 1969     		ldr	r1, [r3, #16]
 609 0084 504B     		ldr	r3, .L54+4
 610 0086 0B40     		ands	r3, r3, r1
 611 0088 002B     		cmp	r3, #0
 612 008a 18D1     		bne	.L40
 613              		.loc 1 462 0 is_stmt 0 discriminator 1
 614 008c 7B68     		ldr	r3, [r7, #4]
 615 008e 1B68     		ldr	r3, [r3]
 616 0090 D968     		ldr	r1, [r3, #12]
 617 0092 4E4B     		ldr	r3, .L54+8
 618 0094 0B40     		ands	r3, r3, r1
 619 0096 002B     		cmp	r3, #0
ARM GAS  /tmp/ccAQNJcJ.s 			page 20


 620 0098 11D1     		bne	.L40
 621              		.loc 1 462 0 discriminator 3
 622 009a 7B68     		ldr	r3, [r7, #4]
 623 009c 1B68     		ldr	r3, [r3]
 624 009e 1969     		ldr	r1, [r3, #16]
 625 00a0 4B4B     		ldr	r3, .L54+12
 626 00a2 0B40     		ands	r3, r3, r1
 627 00a4 002B     		cmp	r3, #0
 628 00a6 08D1     		bne	.L41
 629              		.loc 1 462 0 discriminator 5
 630 00a8 7B68     		ldr	r3, [r7, #4]
 631 00aa 1B68     		ldr	r3, [r3]
 632 00ac D968     		ldr	r1, [r3, #12]
 633 00ae 494B     		ldr	r3, .L54+16
 634 00b0 0B40     		ands	r3, r3, r1
 635 00b2 002B     		cmp	r3, #0
 636 00b4 01D1     		bne	.L41
 637              		.loc 1 462 0 discriminator 7
 638 00b6 1423     		movs	r3, #20
 639 00b8 20E0     		b	.L43
 640              	.L41:
 641              		.loc 1 462 0 discriminator 8
 642 00ba 2923     		movs	r3, #41
 643 00bc 1EE0     		b	.L43
 644              	.L40:
 645              		.loc 1 462 0 discriminator 4
 646 00be 7B68     		ldr	r3, [r7, #4]
 647 00c0 1B68     		ldr	r3, [r3]
 648 00c2 1969     		ldr	r1, [r3, #16]
 649 00c4 424B     		ldr	r3, .L54+12
 650 00c6 0B40     		ands	r3, r3, r1
 651 00c8 002B     		cmp	r3, #0
 652 00ca 06D1     		bne	.L44
 653              		.loc 1 462 0 discriminator 11
 654 00cc 7B68     		ldr	r3, [r7, #4]
 655 00ce 1B68     		ldr	r3, [r3]
 656 00d0 D968     		ldr	r1, [r3, #12]
 657 00d2 404B     		ldr	r3, .L54+16
 658 00d4 0B40     		ands	r3, r3, r1
 659 00d6 002B     		cmp	r3, #0
 660 00d8 0DD0     		beq	.L45
 661              	.L44:
 662              		.loc 1 462 0 discriminator 14
 663 00da 7B68     		ldr	r3, [r7, #4]
 664 00dc 1B68     		ldr	r3, [r3]
 665 00de 1969     		ldr	r1, [r3, #16]
 666 00e0 3D4B     		ldr	r3, .L54+20
 667 00e2 0B40     		ands	r3, r3, r1
 668 00e4 002B     		cmp	r3, #0
 669 00e6 08D1     		bne	.L46
 670              		.loc 1 462 0 discriminator 15
 671 00e8 7B68     		ldr	r3, [r7, #4]
 672 00ea 1B68     		ldr	r3, [r3]
 673 00ec D968     		ldr	r1, [r3, #12]
 674 00ee 3A4B     		ldr	r3, .L54+20
 675 00f0 0B40     		ands	r3, r3, r1
 676 00f2 002B     		cmp	r3, #0
ARM GAS  /tmp/ccAQNJcJ.s 			page 21


 677 00f4 01D1     		bne	.L46
 678              	.L45:
 679              		.loc 1 462 0 discriminator 17
 680 00f6 5423     		movs	r3, #84
 681 00f8 00E0     		b	.L43
 682              	.L46:
 683              		.loc 1 462 0 discriminator 18
 684 00fa FC23     		movs	r3, #252
 685              	.L43:
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 686              		.loc 1 460 0 is_stmt 1
 687 00fc 02FB03F3 		mul	r3, r2, r3
 688 0100 7B61     		str	r3, [r7, #20]
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
 689              		.loc 1 464 0
 690 0102 1DE0     		b	.L48
 691              	.L51:
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
 692              		.loc 1 467 0
 693 0104 3B68     		ldr	r3, [r7]
 694 0106 B3F1FF3F 		cmp	r3, #-1
 695 010a 16D0     		beq	.L49
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 696              		.loc 1 469 0
 697 010c 3B68     		ldr	r3, [r7]
 698 010e 002B     		cmp	r3, #0
 699 0110 07D0     		beq	.L50
 700              		.loc 1 469 0 is_stmt 0 discriminator 1
 701 0112 FFF7FEFF 		bl	HAL_GetTick
 702 0116 0246     		mov	r2, r0
 703 0118 3B69     		ldr	r3, [r7, #16]
 704 011a D31A     		subs	r3, r2, r3
 705 011c 3A68     		ldr	r2, [r7]
 706 011e 9A42     		cmp	r2, r3
 707 0120 0BD2     		bcs	.L49
 708              	.L50:
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 709              		.loc 1 472 0 is_stmt 1
 710 0122 7B68     		ldr	r3, [r7, #4]
 711 0124 9B6A     		ldr	r3, [r3, #40]
 712 0126 43F00402 		orr	r2, r3, #4
 713 012a 7B68     		ldr	r3, [r7, #4]
 714 012c 9A62     		str	r2, [r3, #40]
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Process unlocked */
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 715              		.loc 1 475 0
 716 012e 7B68     		ldr	r3, [r7, #4]
 717 0130 0022     		movs	r2, #0
 718 0132 83F82420 		strb	r2, [r3, #36]
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           
ARM GAS  /tmp/ccAQNJcJ.s 			page 22


 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 719              		.loc 1 477 0
 720 0136 0323     		movs	r3, #3
 721 0138 3FE0     		b	.L37
 722              	.L49:
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
 723              		.loc 1 480 0
 724 013a FB68     		ldr	r3, [r7, #12]
 725 013c 0133     		adds	r3, r3, #1
 726 013e FB60     		str	r3, [r7, #12]
 727              	.L48:
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 728              		.loc 1 464 0
 729 0140 FB68     		ldr	r3, [r7, #12]
 730 0142 7A69     		ldr	r2, [r7, #20]
 731 0144 9A42     		cmp	r2, r3
 732 0146 DDD8     		bhi	.L51
 733              	.L39:
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Clear injected group conversion flag */
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: On STM32F1 ADC, clear regular conversion flag raised               */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* simultaneously.                                                          */
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JSTRT | ADC_FLAG_JEOC | ADC_FLAG_EOC);
 734              		.loc 1 487 0
 735 0148 7B68     		ldr	r3, [r7, #4]
 736 014a 1B68     		ldr	r3, [r3]
 737 014c 6FF00E02 		mvn	r2, #14
 738 0150 1A60     		str	r2, [r3]
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Update ADC state machine */
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 739              		.loc 1 490 0
 740 0152 7B68     		ldr	r3, [r7, #4]
 741 0154 9B6A     		ldr	r3, [r3, #40]
 742 0156 43F40052 		orr	r2, r3, #8192
 743 015a 7B68     		ldr	r3, [r7, #4]
 744 015c 9A62     		str	r2, [r3, #40]
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
 745              		.loc 1 495 0
 746 015e 7B68     		ldr	r3, [r7, #4]
 747 0160 1B68     		ldr	r3, [r3]
 748 0162 9B68     		ldr	r3, [r3, #8]
 749 0164 03F4E043 		and	r3, r3, #28672
 750 0168 B3F5E04F 		cmp	r3, #28672
 751 016c 12D0     		beq	.L52
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 752              		.loc 1 496 0 discriminator 1
 753 016e 7B68     		ldr	r3, [r7, #4]
 754 0170 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccAQNJcJ.s 			page 23


 755 0172 5B68     		ldr	r3, [r3, #4]
 756 0174 03F48063 		and	r3, r3, #1024
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 757              		.loc 1 495 0 discriminator 1
 758 0178 002B     		cmp	r3, #0
 759 017a 1DD1     		bne	.L53
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 760              		.loc 1 497 0
 761 017c 7B68     		ldr	r3, [r7, #4]
 762 017e 1B68     		ldr	r3, [r3]
 763 0180 9B68     		ldr	r3, [r3, #8]
 764 0182 03F46023 		and	r3, r3, #917504
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 765              		.loc 1 496 0
 766 0186 B3F5602F 		cmp	r3, #917504
 767 018a 15D1     		bne	.L53
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 768              		.loc 1 498 0
 769 018c 7B68     		ldr	r3, [r7, #4]
 770 018e DB68     		ldr	r3, [r3, #12]
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 771              		.loc 1 497 0
 772 0190 002B     		cmp	r3, #0
 773 0192 11D1     		bne	.L53
 774              	.L52:
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state */
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 775              		.loc 1 501 0
 776 0194 7B68     		ldr	r3, [r7, #4]
 777 0196 9B6A     		ldr	r3, [r3, #40]
 778 0198 23F48052 		bic	r2, r3, #4096
 779 019c 7B68     		ldr	r3, [r7, #4]
 780 019e 9A62     		str	r2, [r3, #40]
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 781              		.loc 1 503 0
 782 01a0 7B68     		ldr	r3, [r7, #4]
 783 01a2 9B6A     		ldr	r3, [r3, #40]
 784 01a4 03F48073 		and	r3, r3, #256
 785 01a8 002B     		cmp	r3, #0
 786 01aa 05D1     		bne	.L53
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 787              		.loc 1 505 0
 788 01ac 7B68     		ldr	r3, [r7, #4]
 789 01ae 9B6A     		ldr	r3, [r3, #40]
 790 01b0 43F00102 		orr	r2, r3, #1
 791 01b4 7B68     		ldr	r3, [r7, #4]
 792 01b6 9A62     		str	r2, [r3, #40]
 793              	.L53:
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC state */
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return HAL_OK;
 794              		.loc 1 510 0
ARM GAS  /tmp/ccAQNJcJ.s 			page 24


 795 01b8 0023     		movs	r3, #0
 796              	.L37:
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 797              		.loc 1 511 0
 798 01ba 1846     		mov	r0, r3
 799 01bc 1C37     		adds	r7, r7, #28
 800              	.LCFI18:
 801              		.cfi_def_cfa_offset 12
 802 01be BD46     		mov	sp, r7
 803              	.LCFI19:
 804              		.cfi_def_cfa_register 13
 805              		@ sp needed
 806 01c0 90BD     		pop	{r4, r7, pc}
 807              	.L55:
 808 01c2 00BF     		.align	2
 809              	.L54:
 810 01c4 00000000 		.word	SystemCoreClock
 811 01c8 24499224 		.word	613566756
 812 01cc 24499200 		.word	9586980
 813 01d0 92244912 		.word	306783378
 814 01d4 92244900 		.word	4793490
 815 01d8 49922400 		.word	2396745
 816              		.cfi_endproc
 817              	.LFE69:
 819              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 820              		.align	1
 821              		.global	HAL_ADCEx_InjectedStart_IT
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 825              		.fpu softvfp
 827              	HAL_ADCEx_InjectedStart_IT:
 828              	.LFB70:
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group)
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status.
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 829              		.loc 1 521 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 16
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              	.LCFI20:
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 7, -8
 837              		.cfi_offset 14, -4
 838 0002 84B0     		sub	sp, sp, #16
 839              	.LCFI21:
 840              		.cfi_def_cfa_offset 24
 841 0004 00AF     		add	r7, sp, #0
 842              	.LCFI22:
ARM GAS  /tmp/ccAQNJcJ.s 			page 25


 843              		.cfi_def_cfa_register 7
 844 0006 7860     		str	r0, [r7, #4]
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 845              		.loc 1 522 0
 846 0008 0023     		movs	r3, #0
 847 000a FB73     		strb	r3, [r7, #15]
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 848              		.loc 1 528 0
 849 000c 7B68     		ldr	r3, [r7, #4]
 850 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 851 0012 012B     		cmp	r3, #1
 852 0014 01D1     		bne	.L57
 853              		.loc 1 528 0 is_stmt 0 discriminator 1
 854 0016 0223     		movs	r3, #2
 855 0018 78E0     		b	.L58
 856              	.L57:
 857              		.loc 1 528 0 discriminator 2
 858 001a 7B68     		ldr	r3, [r7, #4]
 859 001c 0122     		movs	r2, #1
 860 001e 83F82420 		strb	r2, [r3, #36]
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 861              		.loc 1 531 0 is_stmt 1 discriminator 2
 862 0022 7868     		ldr	r0, [r7, #4]
 863 0024 FFF7FEFF 		bl	ADC_Enable
 864 0028 0346     		mov	r3, r0
 865 002a FB73     		strb	r3, [r7, #15]
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 866              		.loc 1 534 0 discriminator 2
 867 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 868 002e 002B     		cmp	r3, #0
 869 0030 67D1     		bne	.L59
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 870              		.loc 1 539 0
 871 0032 7B68     		ldr	r3, [r7, #4]
 872 0034 9B6A     		ldr	r3, [r3, #40]
 873 0036 23F44053 		bic	r3, r3, #12288
 874 003a 23F00103 		bic	r3, r3, #1
 875 003e 43F48052 		orr	r2, r3, #4096
 876 0042 7B68     		ldr	r3, [r7, #4]
 877 0044 9A62     		str	r2, [r3, #40]
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of independent mode or multimode (for devices with several ADCs): */
ARM GAS  /tmp/ccAQNJcJ.s 			page 26


 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set multimode state.                                                   */
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 878              		.loc 1 545 0
 879 0046 7B68     		ldr	r3, [r7, #4]
 880 0048 1B68     		ldr	r3, [r3]
 881 004a 324A     		ldr	r2, .L68
 882 004c 9342     		cmp	r3, r2
 883 004e 05D1     		bne	.L60
 884              		.loc 1 545 0 is_stmt 0 discriminator 1
 885 0050 314B     		ldr	r3, .L68+4
 886 0052 5B68     		ldr	r3, [r3, #4]
 887 0054 03F47023 		and	r3, r3, #983040
 888 0058 002B     		cmp	r3, #0
 889 005a 06D1     		bne	.L61
 890              	.L60:
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 891              		.loc 1 547 0 is_stmt 1
 892 005c 7B68     		ldr	r3, [r7, #4]
 893 005e 9B6A     		ldr	r3, [r3, #40]
 894 0060 23F48012 		bic	r2, r3, #1048576
 895 0064 7B68     		ldr	r3, [r7, #4]
 896 0066 9A62     		str	r2, [r3, #40]
 897 0068 05E0     		b	.L62
 898              	.L61:
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 899              		.loc 1 551 0
 900 006a 7B68     		ldr	r3, [r7, #4]
 901 006c 9B6A     		ldr	r3, [r3, #40]
 902 006e 43F48012 		orr	r2, r3, #1048576
 903 0072 7B68     		ldr	r3, [r7, #4]
 904 0074 9A62     		str	r2, [r3, #40]
 905              	.L62:
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 906              		.loc 1 558 0
 907 0076 7B68     		ldr	r3, [r7, #4]
 908 0078 9B6A     		ldr	r3, [r3, #40]
 909 007a 03F48073 		and	r3, r3, #256
 910 007e 002B     		cmp	r3, #0
 911 0080 02D1     		bne	.L63
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 912              		.loc 1 561 0
 913 0082 7B68     		ldr	r3, [r7, #4]
 914 0084 0022     		movs	r2, #0
 915 0086 DA62     		str	r2, [r3, #44]
 916              	.L63:
ARM GAS  /tmp/ccAQNJcJ.s 			page 27


 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 917              		.loc 1 567 0
 918 0088 7B68     		ldr	r3, [r7, #4]
 919 008a 0022     		movs	r2, #0
 920 008c 83F82420 		strb	r2, [r3, #36]
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 921              		.loc 1 571 0
 922 0090 7B68     		ldr	r3, [r7, #4]
 923 0092 1B68     		ldr	r3, [r3]
 924 0094 6FF00402 		mvn	r2, #4
 925 0098 1A60     		str	r2, [r3]
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for injected channels */
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 926              		.loc 1 574 0
 927 009a 7B68     		ldr	r3, [r7, #4]
 928 009c 1B68     		ldr	r3, [r3]
 929 009e 5A68     		ldr	r2, [r3, #4]
 930 00a0 7B68     		ldr	r3, [r7, #4]
 931 00a2 1B68     		ldr	r3, [r3]
 932 00a4 42F08002 		orr	r2, r2, #128
 933 00a8 5A60     		str	r2, [r3, #4]
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start conversion of injected group if software start has been selected */
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* and if automatic injected conversion is disabled.                      */
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO))
 934              		.loc 1 582 0
 935 00aa 7B68     		ldr	r3, [r7, #4]
 936 00ac 1B68     		ldr	r3, [r3]
 937 00ae 5B68     		ldr	r3, [r3, #4]
 938 00b0 03F48063 		and	r3, r3, #1024
 939 00b4 002B     		cmp	r3, #0
 940 00b6 28D1     		bne	.L67
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (ADC_IS_SOFTWARE_START_INJECTED(hadc)     &&
 941              		.loc 1 584 0
 942 00b8 7B68     		ldr	r3, [r7, #4]
 943 00ba 1B68     		ldr	r3, [r3]
 944 00bc 9B68     		ldr	r3, [r3, #8]
 945 00be 03F4E043 		and	r3, r3, #28672
 946 00c2 B3F5E04F 		cmp	r3, #28672
 947 00c6 13D1     		bne	.L65
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 948              		.loc 1 585 0 discriminator 1
 949 00c8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccAQNJcJ.s 			page 28


 950 00ca 1B68     		ldr	r3, [r3]
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 951              		.loc 1 584 0 discriminator 1
 952 00cc 114A     		ldr	r2, .L68
 953 00ce 9342     		cmp	r3, r2
 954 00d0 05D1     		bne	.L66
 955              		.loc 1 585 0 discriminator 2
 956 00d2 114B     		ldr	r3, .L68+4
 957 00d4 5B68     		ldr	r3, [r3, #4]
 958 00d6 03F47023 		and	r3, r3, #983040
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 959              		.loc 1 584 0 discriminator 2
 960 00da 002B     		cmp	r3, #0
 961 00dc 08D1     		bne	.L65
 962              	.L66:
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with SW start */
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
 963              		.loc 1 588 0
 964 00de 7B68     		ldr	r3, [r7, #4]
 965 00e0 1B68     		ldr	r3, [r3]
 966 00e2 9A68     		ldr	r2, [r3, #8]
 967 00e4 7B68     		ldr	r3, [r7, #4]
 968 00e6 1B68     		ldr	r3, [r3]
 969 00e8 42F40212 		orr	r2, r2, #2129920
 970 00ec 9A60     		str	r2, [r3, #8]
 971 00ee 0CE0     		b	.L67
 972              	.L65:
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with external trigger */
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
 973              		.loc 1 593 0
 974 00f0 7B68     		ldr	r3, [r7, #4]
 975 00f2 1B68     		ldr	r3, [r3]
 976 00f4 9A68     		ldr	r2, [r3, #8]
 977 00f6 7B68     		ldr	r3, [r7, #4]
 978 00f8 1B68     		ldr	r3, [r3]
 979 00fa 42F40042 		orr	r2, r2, #32768
 980 00fe 9A60     		str	r2, [r3, #8]
 981 0100 03E0     		b	.L67
 982              	.L59:
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 983              		.loc 1 600 0
 984 0102 7B68     		ldr	r3, [r7, #4]
 985 0104 0022     		movs	r2, #0
 986 0106 83F82420 		strb	r2, [r3, #36]
 987              	.L67:
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccAQNJcJ.s 			page 29


 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 988              		.loc 1 604 0
 989 010a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 990              	.L58:
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 991              		.loc 1 605 0
 992 010c 1846     		mov	r0, r3
 993 010e 1037     		adds	r7, r7, #16
 994              	.LCFI23:
 995              		.cfi_def_cfa_offset 8
 996 0110 BD46     		mov	sp, r7
 997              	.LCFI24:
 998              		.cfi_def_cfa_register 13
 999              		@ sp needed
 1000 0112 80BD     		pop	{r7, pc}
 1001              	.L69:
 1002              		.align	2
 1003              	.L68:
 1004 0114 00280140 		.word	1073817600
 1005 0118 00240140 		.word	1073816576
 1006              		.cfi_endproc
 1007              	.LFE70:
 1009              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 1010              		.align	1
 1011              		.global	HAL_ADCEx_InjectedStop_IT
 1012              		.syntax unified
 1013              		.thumb
 1014              		.thumb_func
 1015              		.fpu softvfp
 1017              	HAL_ADCEx_InjectedStop_IT:
 1018              	.LFB71:
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of 
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         is on going.
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1019              		.loc 1 620 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 16
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023 0000 80B5     		push	{r7, lr}
 1024              	.LCFI25:
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccAQNJcJ.s 			page 30


 1029              	.LCFI26:
 1030              		.cfi_def_cfa_offset 24
 1031 0004 00AF     		add	r7, sp, #0
 1032              	.LCFI27:
 1033              		.cfi_def_cfa_register 7
 1034 0006 7860     		str	r0, [r7, #4]
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1035              		.loc 1 621 0
 1036 0008 0023     		movs	r3, #0
 1037 000a FB73     		strb	r3, [r7, #15]
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1038              		.loc 1 627 0
 1039 000c 7B68     		ldr	r3, [r7, #4]
 1040 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1041 0012 012B     		cmp	r3, #1
 1042 0014 01D1     		bne	.L71
 1043              		.loc 1 627 0 is_stmt 0 discriminator 1
 1044 0016 0223     		movs	r3, #2
 1045 0018 38E0     		b	.L72
 1046              	.L71:
 1047              		.loc 1 627 0 discriminator 2
 1048 001a 7B68     		ldr	r3, [r7, #4]
 1049 001c 0122     		movs	r2, #1
 1050 001e 83F82420 		strb	r2, [r3, #36]
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   are common)                                                            */
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */ 
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 1051              		.loc 1 635 0 is_stmt 1 discriminator 2
 1052 0022 7B68     		ldr	r3, [r7, #4]
 1053 0024 9B6A     		ldr	r3, [r3, #40]
 1054 0026 03F48073 		and	r3, r3, #256
 1055 002a 002B     		cmp	r3, #0
 1056 002c 21D1     		bne	.L73
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 1057              		.loc 1 636 0 discriminator 1
 1058 002e 7B68     		ldr	r3, [r7, #4]
 1059 0030 1B68     		ldr	r3, [r3]
 1060 0032 5B68     		ldr	r3, [r3, #4]
 1061 0034 03F48063 		and	r3, r3, #1024
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 1062              		.loc 1 635 0 discriminator 1
 1063 0038 002B     		cmp	r3, #0
 1064 003a 1AD1     		bne	.L73
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
ARM GAS  /tmp/ccAQNJcJ.s 			page 31


 1065              		.loc 1 640 0
 1066 003c 7868     		ldr	r0, [r7, #4]
 1067 003e FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1068 0042 0346     		mov	r3, r0
 1069 0044 FB73     		strb	r3, [r7, #15]
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1070              		.loc 1 643 0
 1071 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1072 0048 002B     		cmp	r3, #0
 1073 004a 1AD1     		bne	.L75
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 1074              		.loc 1 646 0
 1075 004c 7B68     		ldr	r3, [r7, #4]
 1076 004e 1B68     		ldr	r3, [r3]
 1077 0050 5A68     		ldr	r2, [r3, #4]
 1078 0052 7B68     		ldr	r3, [r7, #4]
 1079 0054 1B68     		ldr	r3, [r3]
 1080 0056 22F08002 		bic	r2, r2, #128
 1081 005a 5A60     		str	r2, [r3, #4]
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set ADC state */
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1082              		.loc 1 649 0
 1083 005c 7B68     		ldr	r3, [r7, #4]
 1084 005e 9B6A     		ldr	r3, [r3, #40]
 1085 0060 23F48853 		bic	r3, r3, #4352
 1086 0064 23F00103 		bic	r3, r3, #1
 1087 0068 43F00102 		orr	r2, r3, #1
 1088 006c 7B68     		ldr	r3, [r7, #4]
 1089 006e 9A62     		str	r2, [r3, #40]
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 1090              		.loc 1 643 0
 1091 0070 07E0     		b	.L75
 1092              	.L73:
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1093              		.loc 1 657 0
 1094 0072 7B68     		ldr	r3, [r7, #4]
 1095 0074 9B6A     		ldr	r3, [r3, #40]
 1096 0076 43F02002 		orr	r2, r3, #32
 1097 007a 7B68     		ldr	r3, [r7, #4]
 1098 007c 9A62     		str	r2, [r3, #40]
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 1099              		.loc 1 659 0
 1100 007e 0123     		movs	r3, #1
 1101 0080 FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccAQNJcJ.s 			page 32


 1102              	.L75:
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1103              		.loc 1 663 0
 1104 0082 7B68     		ldr	r3, [r7, #4]
 1105 0084 0022     		movs	r2, #0
 1106 0086 83F82420 		strb	r2, [r3, #36]
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 1107              		.loc 1 666 0
 1108 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1109              	.L72:
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1110              		.loc 1 667 0
 1111 008c 1846     		mov	r0, r3
 1112 008e 1037     		adds	r7, r7, #16
 1113              	.LCFI28:
 1114              		.cfi_def_cfa_offset 8
 1115 0090 BD46     		mov	sp, r7
 1116              	.LCFI29:
 1117              		.cfi_def_cfa_register 13
 1118              		@ sp needed
 1119 0092 80BD     		pop	{r7, pc}
 1120              		.cfi_endproc
 1121              	.LFE71:
 1123              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 1124              		.align	1
 1125              		.global	HAL_ADCEx_MultiModeStart_DMA
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu softvfp
 1131              	HAL_ADCEx_MultiModeStart_DMA:
 1132              	.LFB72:
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105xC) || defined (STM32F107xC
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         through DMA.
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Multimode must have been previously configured using 
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - DMA transfer complete
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - DMA half transfer
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note:  On STM32F1 devices, ADC slave regular group must be configured 
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         with conversion trigger ADC_SOFTWARE_START.
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note:  ADC slave can be enabled preliminarily using single-mode  
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADC_Start() function.
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/ccAQNJcJ.s 			page 33


 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t L
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1133              		.loc 1 689 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 72
 1136              		@ frame_needed = 1, uses_anonymous_args = 0
 1137 0000 80B5     		push	{r7, lr}
 1138              	.LCFI30:
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 7, -8
 1141              		.cfi_offset 14, -4
 1142 0002 92B0     		sub	sp, sp, #72
 1143              	.LCFI31:
 1144              		.cfi_def_cfa_offset 80
 1145 0004 00AF     		add	r7, sp, #0
 1146              	.LCFI32:
 1147              		.cfi_def_cfa_register 7
 1148 0006 F860     		str	r0, [r7, #12]
 1149 0008 B960     		str	r1, [r7, #8]
 1150 000a 7A60     		str	r2, [r7, #4]
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1151              		.loc 1 690 0
 1152 000c 0023     		movs	r3, #0
 1153 000e 87F84730 		strb	r3, [r7, #71]
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1154              		.loc 1 698 0
 1155 0012 FB68     		ldr	r3, [r7, #12]
 1156 0014 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1157 0018 012B     		cmp	r3, #1
 1158 001a 01D1     		bne	.L77
 1159              		.loc 1 698 0 is_stmt 0 discriminator 1
 1160 001c 0223     		movs	r3, #2
 1161 001e 8FE0     		b	.L86
 1162              	.L77:
 1163              		.loc 1 698 0 discriminator 2
 1164 0020 FB68     		ldr	r3, [r7, #12]
 1165 0022 0122     		movs	r2, #1
 1166 0024 83F82420 		strb	r2, [r3, #36]
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Set a temporary handle of the ADC slave associated to the ADC master     */
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 1167              		.loc 1 701 0 is_stmt 1 discriminator 2
 1168 0028 474B     		ldr	r3, .L87
 1169 002a 7B61     		str	r3, [r7, #20]
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* On STM32F1 devices, ADC slave regular group must be configured with      */
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion trigger ADC_SOFTWARE_START.                                   */
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: External trigger of ADC slave must be enabled, it is already done  */
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       into function "HAL_ADC_Init()".                                    */
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(!ADC_IS_SOFTWARE_START_REGULAR(&tmphadcSlave))  
ARM GAS  /tmp/ccAQNJcJ.s 			page 34


 1170              		.loc 1 707 0 discriminator 2
 1171 002c 7B69     		ldr	r3, [r7, #20]
 1172 002e 9B68     		ldr	r3, [r3, #8]
 1173 0030 03F46023 		and	r3, r3, #917504
 1174 0034 B3F5602F 		cmp	r3, #917504
 1175 0038 0BD0     		beq	.L79
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1176              		.loc 1 710 0
 1177 003a FB68     		ldr	r3, [r7, #12]
 1178 003c 9B6A     		ldr	r3, [r3, #40]
 1179 003e 43F02002 		orr	r2, r3, #32
 1180 0042 FB68     		ldr	r3, [r7, #12]
 1181 0044 9A62     		str	r2, [r3, #40]
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 1182              		.loc 1 713 0
 1183 0046 FB68     		ldr	r3, [r7, #12]
 1184 0048 0022     		movs	r2, #0
 1185 004a 83F82420 		strb	r2, [r3, #36]
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     return HAL_ERROR;
 1186              		.loc 1 715 0
 1187 004e 0123     		movs	r3, #1
 1188 0050 76E0     		b	.L86
 1189              	.L79:
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripherals: master and slave (in case if not already     */
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* enabled previously)                                                      */
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 1190              		.loc 1 720 0
 1191 0052 F868     		ldr	r0, [r7, #12]
 1192 0054 FFF7FEFF 		bl	ADC_Enable
 1193 0058 0346     		mov	r3, r0
 1194 005a 87F84730 		strb	r3, [r7, #71]
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1195              		.loc 1 721 0
 1196 005e 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 1197 0062 002B     		cmp	r3, #0
 1198 0064 07D1     		bne	.L80
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(&tmphadcSlave);
 1199              		.loc 1 723 0
 1200 0066 07F11403 		add	r3, r7, #20
 1201 006a 1846     		mov	r0, r3
 1202 006c FFF7FEFF 		bl	ADC_Enable
 1203 0070 0346     		mov	r3, r0
 1204 0072 87F84730 		strb	r3, [r7, #71]
 1205              	.L80:
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if all ADCs of multimode are effectively enabled */
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1206              		.loc 1 727 0
ARM GAS  /tmp/ccAQNJcJ.s 			page 35


 1207 0076 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 1208 007a 002B     		cmp	r3, #0
 1209 007c 5AD1     		bne	.L81
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state (ADC master)                                             */
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 1210              		.loc 1 732 0
 1211 007e FB68     		ldr	r3, [r7, #12]
 1212 0080 9A6A     		ldr	r2, [r3, #40]
 1213 0082 324B     		ldr	r3, .L87+4
 1214 0084 1340     		ands	r3, r3, r2
 1215 0086 43F48072 		orr	r2, r3, #256
 1216 008a FB68     		ldr	r3, [r7, #12]
 1217 008c 9A62     		str	r2, [r3, #40]
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_MULTIMODE_SLAVE,
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1218              		.loc 1 738 0
 1219 008e FB68     		ldr	r3, [r7, #12]
 1220 0090 1B68     		ldr	r3, [r3]
 1221 0092 5B68     		ldr	r3, [r3, #4]
 1222 0094 03F48063 		and	r3, r3, #1024
 1223 0098 002B     		cmp	r3, #0
 1224 009a 07D0     		beq	.L82
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1225              		.loc 1 740 0
 1226 009c FB68     		ldr	r3, [r7, #12]
 1227 009e 9B6A     		ldr	r3, [r3, #40]
 1228 00a0 23F44053 		bic	r3, r3, #12288
 1229 00a4 43F48052 		orr	r2, r3, #4096
 1230 00a8 FB68     		ldr	r3, [r7, #12]
 1231 00aa 9A62     		str	r2, [r3, #40]
 1232              	.L82:
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 1233              		.loc 1 746 0
 1234 00ac FB68     		ldr	r3, [r7, #12]
 1235 00ae 0022     		movs	r2, #0
 1236 00b0 83F82420 		strb	r2, [r3, #36]
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 1237              		.loc 1 749 0
 1238 00b4 FB68     		ldr	r3, [r7, #12]
 1239 00b6 0022     		movs	r2, #0
 1240 00b8 DA62     		str	r2, [r3, #44]
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
ARM GAS  /tmp/ccAQNJcJ.s 			page 36


 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA transfer complete callback */
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1241              		.loc 1 753 0
 1242 00ba FB68     		ldr	r3, [r7, #12]
 1243 00bc 1B6A     		ldr	r3, [r3, #32]
 1244 00be 244A     		ldr	r2, .L87+8
 1245 00c0 9A62     		str	r2, [r3, #40]
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****        
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA half transfer complete callback */
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1246              		.loc 1 756 0
 1247 00c2 FB68     		ldr	r3, [r7, #12]
 1248 00c4 1B6A     		ldr	r3, [r3, #32]
 1249 00c6 234A     		ldr	r2, .L87+12
 1250 00c8 DA62     		str	r2, [r3, #44]
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA error callback */
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1251              		.loc 1 759 0
 1252 00ca FB68     		ldr	r3, [r7, #12]
 1253 00cc 1B6A     		ldr	r3, [r3, #32]
 1254 00ce 224A     		ldr	r2, .L87+16
 1255 00d0 1A63     		str	r2, [r3, #48]
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* start (in case of SW start):                                           */
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 1256              		.loc 1 767 0
 1257 00d2 FB68     		ldr	r3, [r7, #12]
 1258 00d4 1B68     		ldr	r3, [r3]
 1259 00d6 6FF00202 		mvn	r2, #2
 1260 00da 1A60     		str	r2, [r3]
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable ADC DMA mode of ADC master */
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 1261              		.loc 1 770 0
 1262 00dc FB68     		ldr	r3, [r7, #12]
 1263 00de 1B68     		ldr	r3, [r3]
 1264 00e0 9A68     		ldr	r2, [r3, #8]
 1265 00e2 FB68     		ldr	r3, [r7, #12]
 1266 00e4 1B68     		ldr	r3, [r3]
 1267 00e6 42F48072 		orr	r2, r2, #256
 1268 00ea 9A60     		str	r2, [r3, #8]
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start the DMA channel */
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1269              		.loc 1 773 0
 1270 00ec FB68     		ldr	r3, [r7, #12]
 1271 00ee 186A     		ldr	r0, [r3, #32]
 1272 00f0 FB68     		ldr	r3, [r7, #12]
 1273 00f2 1B68     		ldr	r3, [r3]
 1274 00f4 4C33     		adds	r3, r3, #76
ARM GAS  /tmp/ccAQNJcJ.s 			page 37


 1275 00f6 1946     		mov	r1, r3
 1276 00f8 BA68     		ldr	r2, [r7, #8]
 1277 00fa 7B68     		ldr	r3, [r7, #4]
 1278 00fc FFF7FEFF 		bl	HAL_DMA_Start_IT
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start conversion of regular group if software start has been selected. */
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
 1279              		.loc 1 780 0
 1280 0100 FB68     		ldr	r3, [r7, #12]
 1281 0102 1B68     		ldr	r3, [r3]
 1282 0104 9B68     		ldr	r3, [r3, #8]
 1283 0106 03F46023 		and	r3, r3, #917504
 1284 010a B3F5602F 		cmp	r3, #917504
 1285 010e 08D1     		bne	.L83
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 1286              		.loc 1 783 0
 1287 0110 FB68     		ldr	r3, [r7, #12]
 1288 0112 1B68     		ldr	r3, [r3]
 1289 0114 9A68     		ldr	r2, [r3, #8]
 1290 0116 FB68     		ldr	r3, [r7, #12]
 1291 0118 1B68     		ldr	r3, [r3]
 1292 011a 42F4A002 		orr	r2, r2, #5242880
 1293 011e 9A60     		str	r2, [r3, #8]
 1294 0120 0CE0     		b	.L85
 1295              	.L83:
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 1296              		.loc 1 788 0
 1297 0122 FB68     		ldr	r3, [r7, #12]
 1298 0124 1B68     		ldr	r3, [r3]
 1299 0126 9A68     		ldr	r2, [r3, #8]
 1300 0128 FB68     		ldr	r3, [r7, #12]
 1301 012a 1B68     		ldr	r3, [r3]
 1302 012c 42F48012 		orr	r2, r2, #1048576
 1303 0130 9A60     		str	r2, [r3, #8]
 1304 0132 03E0     		b	.L85
 1305              	.L81:
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 1306              		.loc 1 794 0
 1307 0134 FB68     		ldr	r3, [r7, #12]
 1308 0136 0022     		movs	r2, #0
 1309 0138 83F82420 		strb	r2, [r3, #36]
 1310              	.L85:
ARM GAS  /tmp/ccAQNJcJ.s 			page 38


 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 1311              		.loc 1 798 0
 1312 013c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 1313              	.L86:
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1314              		.loc 1 799 0 discriminator 1
 1315 0140 1846     		mov	r0, r3
 1316 0142 4837     		adds	r7, r7, #72
 1317              	.LCFI33:
 1318              		.cfi_def_cfa_offset 8
 1319 0144 BD46     		mov	sp, r7
 1320              	.LCFI34:
 1321              		.cfi_def_cfa_register 13
 1322              		@ sp needed
 1323 0146 80BD     		pop	{r7, pc}
 1324              	.L88:
 1325              		.align	2
 1326              	.L87:
 1327 0148 00280140 		.word	1073817600
 1328 014c FEFCEFFF 		.word	-1049346
 1329 0150 00000000 		.word	ADC_DMAConvCplt
 1330 0154 00000000 		.word	ADC_DMAHalfConvCplt
 1331 0158 00000000 		.word	ADC_DMAError
 1332              		.cfi_endproc
 1333              	.LFE72:
 1335              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 1336              		.align	1
 1337              		.global	HAL_ADCEx_MultiModeStop_DMA
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1341              		.fpu softvfp
 1343              	HAL_ADCEx_MultiModeStop_DMA:
 1344              	.LFB73:
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         ADC peripheral.
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode 
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel(), ADC must be 
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef* hadc)
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1345              		.loc 1 815 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 64
 1348              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccAQNJcJ.s 			page 39


 1349 0000 80B5     		push	{r7, lr}
 1350              	.LCFI35:
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 7, -8
 1353              		.cfi_offset 14, -4
 1354 0002 90B0     		sub	sp, sp, #64
 1355              	.LCFI36:
 1356              		.cfi_def_cfa_offset 72
 1357 0004 00AF     		add	r7, sp, #0
 1358              	.LCFI37:
 1359              		.cfi_def_cfa_register 7
 1360 0006 7860     		str	r0, [r7, #4]
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1361              		.loc 1 816 0
 1362 0008 0023     		movs	r3, #0
 1363 000a 87F83F30 		strb	r3, [r7, #63]
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1364              		.loc 1 823 0
 1365 000e 7B68     		ldr	r3, [r7, #4]
 1366 0010 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1367 0014 012B     		cmp	r3, #1
 1368 0016 01D1     		bne	.L90
 1369              		.loc 1 823 0 is_stmt 0 discriminator 1
 1370 0018 0223     		movs	r3, #2
 1371 001a 4FE0     		b	.L94
 1372              	.L90:
 1373              		.loc 1 823 0 discriminator 2
 1374 001c 7B68     		ldr	r3, [r7, #4]
 1375 001e 0122     		movs	r2, #1
 1376 0020 83F82420 		strb	r2, [r3, #36]
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Disable ADC master peripheral */
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 1377              		.loc 1 828 0 is_stmt 1 discriminator 2
 1378 0024 7868     		ldr	r0, [r7, #4]
 1379 0026 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1380 002a 0346     		mov	r3, r0
 1381 002c 87F83F30 		strb	r3, [r7, #63]
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(tmp_hal_status == HAL_OK)
 1382              		.loc 1 831 0 discriminator 2
 1383 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1384 0034 002B     		cmp	r3, #0
 1385 0036 3BD1     		bne	.L92
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 1386              		.loc 1 834 0
ARM GAS  /tmp/ccAQNJcJ.s 			page 40


 1387 0038 224B     		ldr	r3, .L95
 1388 003a FB60     		str	r3, [r7, #12]
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC slave peripheral */
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(&tmphadcSlave);
 1389              		.loc 1 837 0
 1390 003c 07F10C03 		add	r3, r7, #12
 1391 0040 1846     		mov	r0, r3
 1392 0042 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1393 0046 0346     		mov	r3, r0
 1394 0048 87F83F30 		strb	r3, [r7, #63]
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if(tmp_hal_status != HAL_OK)
 1395              		.loc 1 840 0
 1396 004c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1397 0050 002B     		cmp	r3, #0
 1398 0052 0BD0     		beq	.L93
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 1399              		.loc 1 843 0
 1400 0054 7B68     		ldr	r3, [r7, #4]
 1401 0056 9B6A     		ldr	r3, [r3, #40]
 1402 0058 43F01002 		orr	r2, r3, #16
 1403 005c 7B68     		ldr	r3, [r7, #4]
 1404 005e 9A62     		str	r2, [r3, #40]
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Process unlocked */
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1405              		.loc 1 846 0
 1406 0060 7B68     		ldr	r3, [r7, #4]
 1407 0062 0022     		movs	r2, #0
 1408 0064 83F82420 		strb	r2, [r3, #36]
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       return HAL_ERROR;
 1409              		.loc 1 848 0
 1410 0068 0123     		movs	r3, #1
 1411 006a 27E0     		b	.L94
 1412              	.L93:
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC DMA mode */
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 1413              		.loc 1 852 0
 1414 006c 7B68     		ldr	r3, [r7, #4]
 1415 006e 1B68     		ldr	r3, [r3]
 1416 0070 9A68     		ldr	r2, [r3, #8]
 1417 0072 7B68     		ldr	r3, [r7, #4]
 1418 0074 1B68     		ldr	r3, [r3]
 1419 0076 22F48072 		bic	r2, r2, #256
 1420 007a 9A60     		str	r2, [r3, #8]
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Reset configuration of ADC DMA continuous request for dual mode */
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR1, ADC_CR1_DUALMOD);
 1421              		.loc 1 855 0
 1422 007c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccAQNJcJ.s 			page 41


 1423 007e 1B68     		ldr	r3, [r3]
 1424 0080 5A68     		ldr	r2, [r3, #4]
 1425 0082 7B68     		ldr	r3, [r7, #4]
 1426 0084 1B68     		ldr	r3, [r3]
 1427 0086 22F47022 		bic	r2, r2, #983040
 1428 008a 5A60     		str	r2, [r3, #4]
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 1429              		.loc 1 859 0
 1430 008c 7B68     		ldr	r3, [r7, #4]
 1431 008e 1B6A     		ldr	r3, [r3, #32]
 1432 0090 1846     		mov	r0, r3
 1433 0092 FFF7FEFF 		bl	HAL_DMA_Abort
 1434 0096 0346     		mov	r3, r0
 1435 0098 87F83F30 		strb	r3, [r7, #63]
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Change ADC state (ADC master) */
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 1436              		.loc 1 862 0
 1437 009c 7B68     		ldr	r3, [r7, #4]
 1438 009e 9B6A     		ldr	r3, [r3, #40]
 1439 00a0 23F48853 		bic	r3, r3, #4352
 1440 00a4 23F00103 		bic	r3, r3, #1
 1441 00a8 43F00102 		orr	r2, r3, #1
 1442 00ac 7B68     		ldr	r3, [r7, #4]
 1443 00ae 9A62     		str	r2, [r3, #40]
 1444              	.L92:
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1445              		.loc 1 868 0
 1446 00b0 7B68     		ldr	r3, [r7, #4]
 1447 00b2 0022     		movs	r2, #0
 1448 00b4 83F82420 		strb	r2, [r3, #36]
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 1449              		.loc 1 871 0
 1450 00b8 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1451              	.L94:
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1452              		.loc 1 872 0 discriminator 1
 1453 00bc 1846     		mov	r0, r3
 1454 00be 4037     		adds	r7, r7, #64
 1455              	.LCFI38:
 1456              		.cfi_def_cfa_offset 8
 1457 00c0 BD46     		mov	sp, r7
 1458              	.LCFI39:
 1459              		.cfi_def_cfa_register 13
 1460              		@ sp needed
 1461 00c2 80BD     		pop	{r7, pc}
 1462              	.L96:
ARM GAS  /tmp/ccAQNJcJ.s 			page 42


 1463              		.align	2
 1464              	.L95:
 1465 00c4 00280140 		.word	1073817600
 1466              		.cfi_endproc
 1467              	.LFE73:
 1469              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 1470              		.align	1
 1471              		.global	HAL_ADCEx_InjectedGetValue
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu softvfp
 1477              	HAL_ADCEx_InjectedGetValue:
 1478              	.LFB74:
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #endif /* defined STM32F103x6 || defined STM32F103xB || defined STM32F105xC || defined STM32F107xC 
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            to flag JEOC.
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  InjectedRank: the converted ADC injected rank.
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1479              		.loc 1 904 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 16
 1482              		@ frame_needed = 1, uses_anonymous_args = 0
 1483              		@ link register save eliminated.
 1484 0000 80B4     		push	{r7}
 1485              	.LCFI40:
 1486              		.cfi_def_cfa_offset 4
 1487              		.cfi_offset 7, -4
 1488 0002 85B0     		sub	sp, sp, #20
 1489              	.LCFI41:
ARM GAS  /tmp/ccAQNJcJ.s 			page 43


 1490              		.cfi_def_cfa_offset 24
 1491 0004 00AF     		add	r7, sp, #0
 1492              	.LCFI42:
 1493              		.cfi_def_cfa_register 7
 1494 0006 7860     		str	r0, [r7, #4]
 1495 0008 3960     		str	r1, [r7]
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
 1496              		.loc 1 905 0
 1497 000a 0023     		movs	r3, #0
 1498 000c FB60     		str	r3, [r7, #12]
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   switch(InjectedRank)
 1499              		.loc 1 912 0
 1500 000e 3B68     		ldr	r3, [r7]
 1501 0010 032B     		cmp	r3, #3
 1502 0012 09D0     		beq	.L99
 1503 0014 042B     		cmp	r3, #4
 1504 0016 02D0     		beq	.L100
 1505 0018 022B     		cmp	r3, #2
 1506 001a 0AD0     		beq	.L101
 1507 001c 0EE0     		b	.L104
 1508              	.L100:
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {  
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
 1509              		.loc 1 915 0
 1510 001e 7B68     		ldr	r3, [r7, #4]
 1511 0020 1B68     		ldr	r3, [r3]
 1512 0022 9B6C     		ldr	r3, [r3, #72]
 1513 0024 FB60     		str	r3, [r7, #12]
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1514              		.loc 1 916 0
 1515 0026 0EE0     		b	.L102
 1516              	.L99:
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
 1517              		.loc 1 918 0
 1518 0028 7B68     		ldr	r3, [r7, #4]
 1519 002a 1B68     		ldr	r3, [r3]
 1520 002c 5B6C     		ldr	r3, [r3, #68]
 1521 002e FB60     		str	r3, [r7, #12]
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1522              		.loc 1 919 0
 1523 0030 09E0     		b	.L102
 1524              	.L101:
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
 1525              		.loc 1 921 0
 1526 0032 7B68     		ldr	r3, [r7, #4]
 1527 0034 1B68     		ldr	r3, [r3]
 1528 0036 1B6C     		ldr	r3, [r3, #64]
 1529 0038 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccAQNJcJ.s 			page 44


 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1530              		.loc 1 922 0
 1531 003a 04E0     		b	.L102
 1532              	.L104:
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     default:
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 1533              		.loc 1 925 0
 1534 003c 7B68     		ldr	r3, [r7, #4]
 1535 003e 1B68     		ldr	r3, [r3]
 1536 0040 DB6B     		ldr	r3, [r3, #60]
 1537 0042 FB60     		str	r3, [r7, #12]
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1538              		.loc 1 926 0
 1539 0044 00BF     		nop
 1540              	.L102:
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_jdr;
 1541              		.loc 1 930 0
 1542 0046 FB68     		ldr	r3, [r7, #12]
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1543              		.loc 1 931 0
 1544 0048 1846     		mov	r0, r3
 1545 004a 1437     		adds	r7, r7, #20
 1546              	.LCFI43:
 1547              		.cfi_def_cfa_offset 4
 1548 004c BD46     		mov	sp, r7
 1549              	.LCFI44:
 1550              		.cfi_def_cfa_register 13
 1551              		@ sp needed
 1552 004e 80BC     		pop	{r7}
 1553              	.LCFI45:
 1554              		.cfi_restore 7
 1555              		.cfi_def_cfa_offset 0
 1556 0050 7047     		bx	lr
 1557              		.cfi_endproc
 1558              	.LFE74:
 1560              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 1561              		.align	1
 1562              		.global	HAL_ADCEx_MultiModeGetValue
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1566              		.fpu softvfp
 1568              	HAL_ADCEx_MultiModeGetValue:
 1569              	.LFB75:
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105xC) || defined (STM32F107xC
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Returns the last ADC Master&Slave regular conversions results data
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         in the selected multi mode.
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval The converted data value.
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef* hadc)
ARM GAS  /tmp/ccAQNJcJ.s 			page 45


 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1570              		.loc 1 941 0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 16
 1573              		@ frame_needed = 1, uses_anonymous_args = 0
 1574              		@ link register save eliminated.
 1575 0000 80B4     		push	{r7}
 1576              	.LCFI46:
 1577              		.cfi_def_cfa_offset 4
 1578              		.cfi_offset 7, -4
 1579 0002 85B0     		sub	sp, sp, #20
 1580              	.LCFI47:
 1581              		.cfi_def_cfa_offset 24
 1582 0004 00AF     		add	r7, sp, #0
 1583              	.LCFI48:
 1584              		.cfi_def_cfa_register 7
 1585 0006 7860     		str	r0, [r7, #4]
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tmpDR = 0U;
 1586              		.loc 1 942 0
 1587 0008 0023     		movs	r3, #0
 1588 000a FB60     		str	r3, [r7, #12]
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       cleared by hardware when reading register DR.                      */
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* On STM32F1 devices, ADC1 data register DR contains ADC2 conversions      */
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* only if ADC1 DMA mode is enabled.                                        */
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmpDR = hadc->Instance->DR;
 1589              		.loc 1 955 0
 1590 000c 7B68     		ldr	r3, [r7, #4]
 1591 000e 1B68     		ldr	r3, [r3]
 1592 0010 DB6C     		ldr	r3, [r3, #76]
 1593 0012 FB60     		str	r3, [r7, #12]
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(ADC1->CR2, ADC_CR2_DMA))
 1594              		.loc 1 957 0
 1595 0014 084B     		ldr	r3, .L108
 1596 0016 9B68     		ldr	r3, [r3, #8]
 1597 0018 03F48073 		and	r3, r3, #256
 1598 001c 002B     		cmp	r3, #0
 1599 001e 05D1     		bne	.L106
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmpDR |= (ADC2->DR << 16U);
 1600              		.loc 1 959 0
 1601 0020 064B     		ldr	r3, .L108+4
 1602 0022 DB6C     		ldr	r3, [r3, #76]
 1603 0024 1B04     		lsls	r3, r3, #16
 1604 0026 FA68     		ldr	r2, [r7, #12]
 1605 0028 1343     		orrs	r3, r3, r2
 1606 002a FB60     		str	r3, [r7, #12]
 1607              	.L106:
ARM GAS  /tmp/ccAQNJcJ.s 			page 46


 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmpDR;
 1608              		.loc 1 963 0
 1609 002c FB68     		ldr	r3, [r7, #12]
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1610              		.loc 1 964 0
 1611 002e 1846     		mov	r0, r3
 1612 0030 1437     		adds	r7, r7, #20
 1613              	.LCFI49:
 1614              		.cfi_def_cfa_offset 4
 1615 0032 BD46     		mov	sp, r7
 1616              	.LCFI50:
 1617              		.cfi_def_cfa_register 13
 1618              		@ sp needed
 1619 0034 80BC     		pop	{r7}
 1620              	.LCFI51:
 1621              		.cfi_restore 7
 1622              		.cfi_def_cfa_offset 0
 1623 0036 7047     		bx	lr
 1624              	.L109:
 1625              		.align	2
 1626              	.L108:
 1627 0038 00240140 		.word	1073816576
 1628 003c 00280140 		.word	1073817600
 1629              		.cfi_endproc
 1630              	.LFE75:
 1632              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1633              		.align	1
 1634              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1635              		.syntax unified
 1636              		.thumb
 1637              		.thumb_func
 1638              		.fpu softvfp
 1640              	HAL_ADCEx_InjectedConvCpltCallback:
 1641              	.LFB76:
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #endif /* defined STM32F103x6 || defined STM32F103xB || defined STM32F105xC || defined STM32F107xC 
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non blocking mode 
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1642              		.loc 1 973 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 8
 1645              		@ frame_needed = 1, uses_anonymous_args = 0
 1646              		@ link register save eliminated.
 1647 0000 80B4     		push	{r7}
 1648              	.LCFI52:
 1649              		.cfi_def_cfa_offset 4
 1650              		.cfi_offset 7, -4
 1651 0002 83B0     		sub	sp, sp, #12
 1652              	.LCFI53:
ARM GAS  /tmp/ccAQNJcJ.s 			page 47


 1653              		.cfi_def_cfa_offset 16
 1654 0004 00AF     		add	r7, sp, #0
 1655              	.LCFI54:
 1656              		.cfi_def_cfa_register 7
 1657 0006 7860     		str	r0, [r7, #4]
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   UNUSED(hadc);
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             the HAL_ADCEx_InjectedConvCpltCallback could be implemented in the user file
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1658              		.loc 1 979 0
 1659 0008 00BF     		nop
 1660 000a 0C37     		adds	r7, r7, #12
 1661              	.LCFI55:
 1662              		.cfi_def_cfa_offset 4
 1663 000c BD46     		mov	sp, r7
 1664              	.LCFI56:
 1665              		.cfi_def_cfa_register 13
 1666              		@ sp needed
 1667 000e 80BC     		pop	{r7}
 1668              	.LCFI57:
 1669              		.cfi_restore 7
 1670              		.cfi_def_cfa_offset 0
 1671 0010 7047     		bx	lr
 1672              		.cfi_endproc
 1673              	.LFE76:
 1675              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 1676              		.align	1
 1677              		.global	HAL_ADCEx_InjectedConfigChannel
 1678              		.syntax unified
 1679              		.thumb
 1680              		.thumb_func
 1681              		.fpu softvfp
 1683              	HAL_ADCEx_InjectedConfigChannel:
 1684              	.LFB77:
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @}
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 Extended Peripheral Control functions
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief    Extended Peripheral Control functions
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @verbatim   
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================  
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Configure channels on injected group
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Configure multimode
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @endverbatim
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
ARM GAS  /tmp/ccAQNJcJ.s 			page 48


1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         linked to the injected group.
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without reseting the ADC.
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state: 
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         this function must be called when ADC is not under conversion.
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  sConfigInjected: Structure of ADC injected group and ADC channel for
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected group.
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1685              		.loc 1 1015 0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 16
 1688              		@ frame_needed = 1, uses_anonymous_args = 0
 1689              		@ link register save eliminated.
 1690 0000 90B4     		push	{r4, r7}
 1691              	.LCFI58:
 1692              		.cfi_def_cfa_offset 8
 1693              		.cfi_offset 4, -8
 1694              		.cfi_offset 7, -4
 1695 0002 84B0     		sub	sp, sp, #16
 1696              	.LCFI59:
 1697              		.cfi_def_cfa_offset 24
 1698 0004 00AF     		add	r7, sp, #0
 1699              	.LCFI60:
 1700              		.cfi_def_cfa_register 7
 1701 0006 7860     		str	r0, [r7, #4]
 1702 0008 3960     		str	r1, [r7]
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1703              		.loc 1 1016 0
 1704 000a 0023     		movs	r3, #0
 1705 000c FB73     		strb	r3, [r7, #15]
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 1706              		.loc 1 1017 0
 1707 000e 0023     		movs	r3, #0
 1708 0010 BB60     		str	r3, [r7, #8]
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(sConfigInjected->InjectedOffset));
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccAQNJcJ.s 			page 49


1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1709              		.loc 1 1035 0
 1710 0012 7B68     		ldr	r3, [r7, #4]
 1711 0014 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1712 0018 012B     		cmp	r3, #1
 1713 001a 01D1     		bne	.L112
 1714              		.loc 1 1035 0 is_stmt 0 discriminator 1
 1715 001c 0223     		movs	r3, #2
 1716 001e 7AE1     		b	.L113
 1717              	.L112:
 1718              		.loc 1 1035 0 discriminator 2
 1719 0020 7B68     		ldr	r3, [r7, #4]
 1720 0022 0122     		movs	r2, #1
 1721 0024 83F82420 		strb	r2, [r3, #36]
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - if scan mode is disabled, injected channels sequence length is set to  */
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   0x00: 1 channel converted (channel on regular rank 1)                  */
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   Parameter "InjectedNbrOfConversion" is discarded.                      */
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   Note: Scan mode is present by hardware on this device and, if          */
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   disabled, discards automatically nb of conversions. Anyway, nb of      */
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   conversions is forced to 0x00 for alignment over all STM32 devices.    */
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - if scan mode is enabled, injected channels sequence length is set to   */
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   parameter "InjectedNbrOfConversion".                                   */
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 1722              		.loc 1 1046 0 is_stmt 1 discriminator 2
 1723 0028 7B68     		ldr	r3, [r7, #4]
 1724 002a 9B68     		ldr	r3, [r3, #8]
 1725 002c 002B     		cmp	r3, #0
 1726 002e 19D1     		bne	.L114
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
 1727              		.loc 1 1048 0
 1728 0030 3B68     		ldr	r3, [r7]
 1729 0032 5B68     		ldr	r3, [r3, #4]
 1730 0034 012B     		cmp	r3, #1
 1731 0036 0CD1     		bne	.L115
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for all injected ranks */
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                             ,
 1732              		.loc 1 1051 0
 1733 0038 7B68     		ldr	r3, [r7, #4]
 1734 003a 1B68     		ldr	r3, [r3]
 1735 003c 9B6B     		ldr	r3, [r3, #56]
 1736 003e 9B0D     		lsrs	r3, r3, #22
 1737 0040 9B05     		lsls	r3, r3, #22
 1738 0042 3A68     		ldr	r2, [r7]
 1739 0044 1268     		ldr	r2, [r2]
 1740 0046 D103     		lsls	r1, r2, #15
 1741 0048 7A68     		ldr	r2, [r7, #4]
 1742 004a 1268     		ldr	r2, [r2]
 1743 004c 0B43     		orrs	r3, r3, r1
 1744 004e 9363     		str	r3, [r2, #56]
 1745 0050 4FE0     		b	.L117
 1746              	.L115:
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL   |
ARM GAS  /tmp/ccAQNJcJ.s 			page 50


1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4 |
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3 |
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2 |
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1                                    ,
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   ADC_INJECTED_RANK_1,
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   0x01U));
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1747              		.loc 1 1066 0
 1748 0052 7B68     		ldr	r3, [r7, #4]
 1749 0054 9B6A     		ldr	r3, [r3, #40]
 1750 0056 43F02002 		orr	r2, r3, #32
 1751 005a 7B68     		ldr	r3, [r7, #4]
 1752 005c 9A62     		str	r2, [r3, #40]
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 1753              		.loc 1 1068 0
 1754 005e 0123     		movs	r3, #1
 1755 0060 FB73     		strb	r3, [r7, #15]
 1756 0062 46E0     		b	.L117
 1757              	.L114:
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Since injected channels rank conv. order depends on total number of   */
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* injected conversions, selected rank must be below or equal to total   */
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* number of injected conversions to be updated.                         */
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank <= sConfigInjected->InjectedNbrOfConversion)
 1758              		.loc 1 1076 0
 1759 0064 3B68     		ldr	r3, [r7]
 1760 0066 5A68     		ldr	r2, [r3, #4]
 1761 0068 3B68     		ldr	r3, [r7]
 1762 006a 1B69     		ldr	r3, [r3, #16]
 1763 006c 9A42     		cmp	r2, r3
 1764 006e 2AD8     		bhi	.L118
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set the SQx bits for the selected rank */
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                         ,
 1765              		.loc 1 1080 0
 1766 0070 7B68     		ldr	r3, [r7, #4]
 1767 0072 1B68     		ldr	r3, [r3]
 1768 0074 996B     		ldr	r1, [r3, #56]
 1769 0076 3B68     		ldr	r3, [r7]
 1770 0078 5A68     		ldr	r2, [r3, #4]
 1771 007a 3B68     		ldr	r3, [r7]
 1772 007c 1B69     		ldr	r3, [r3, #16]
 1773 007e D21A     		subs	r2, r2, r3
 1774 0080 1346     		mov	r3, r2
 1775 0082 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccAQNJcJ.s 			page 51


 1776 0084 1344     		add	r3, r3, r2
 1777 0086 0F33     		adds	r3, r3, #15
 1778 0088 1F22     		movs	r2, #31
 1779 008a 02FA03F3 		lsl	r3, r2, r3
 1780 008e 43F44013 		orr	r3, r3, #3145728
 1781 0092 DB43     		mvns	r3, r3
 1782 0094 1940     		ands	r1, r1, r3
 1783 0096 3B68     		ldr	r3, [r7]
 1784 0098 1B69     		ldr	r3, [r3, #16]
 1785 009a 013B     		subs	r3, r3, #1
 1786 009c 1805     		lsls	r0, r3, #20
 1787 009e 3B68     		ldr	r3, [r7]
 1788 00a0 1C68     		ldr	r4, [r3]
 1789 00a2 3B68     		ldr	r3, [r7]
 1790 00a4 5A68     		ldr	r2, [r3, #4]
 1791 00a6 3B68     		ldr	r3, [r7]
 1792 00a8 1B69     		ldr	r3, [r3, #16]
 1793 00aa D21A     		subs	r2, r2, r3
 1794 00ac 1346     		mov	r3, r2
 1795 00ae 9B00     		lsls	r3, r3, #2
 1796 00b0 1344     		add	r3, r3, r2
 1797 00b2 0F33     		adds	r3, r3, #15
 1798 00b4 04FA03F3 		lsl	r3, r4, r3
 1799 00b8 40EA0302 		orr	r2, r0, r3
 1800 00bc 7B68     		ldr	r3, [r7, #4]
 1801 00be 1B68     		ldr	r3, [r3]
 1802 00c0 0A43     		orrs	r2, r2, r1
 1803 00c2 9A63     		str	r2, [r3, #56]
 1804 00c4 15E0     		b	.L117
 1805              	.L118:
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                               |
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion)   ,
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL_SHIFT(sConfigInjected->InjectedNbrOfConversion) |
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,      
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion)    );
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                       ,
 1806              		.loc 1 1095 0
 1807 00c6 7B68     		ldr	r3, [r7, #4]
 1808 00c8 1B68     		ldr	r3, [r3]
 1809 00ca 996B     		ldr	r1, [r3, #56]
 1810 00cc 3B68     		ldr	r3, [r7]
 1811 00ce 5A68     		ldr	r2, [r3, #4]
 1812 00d0 3B68     		ldr	r3, [r7]
 1813 00d2 1B69     		ldr	r3, [r3, #16]
 1814 00d4 D21A     		subs	r2, r2, r3
 1815 00d6 1346     		mov	r3, r2
 1816 00d8 9B00     		lsls	r3, r3, #2
 1817 00da 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccAQNJcJ.s 			page 52


 1818 00dc 0F33     		adds	r3, r3, #15
 1819 00de 1F22     		movs	r2, #31
 1820 00e0 02FA03F3 		lsl	r3, r2, r3
 1821 00e4 43F44013 		orr	r3, r3, #3145728
 1822 00e8 DA43     		mvns	r2, r3
 1823 00ea 7B68     		ldr	r3, [r7, #4]
 1824 00ec 1B68     		ldr	r3, [r3]
 1825 00ee 0A40     		ands	r2, r2, r1
 1826 00f0 9A63     		str	r2, [r3, #56]
 1827              	.L117:
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                               |
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion) ,
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  0x00000000U);
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   } 
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - external trigger to start conversion                                  */
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update not conditioned to ADC state:                          */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, caution to not launch an unwanted  */
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       conversion while modifying register CR2 by writing 1 to bit ADON.  */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 1828              		.loc 1 1115 0
 1829 00f2 7B68     		ldr	r3, [r7, #4]
 1830 00f4 1B68     		ldr	r3, [r3]
 1831 00f6 9B68     		ldr	r3, [r3, #8]
 1832 00f8 03F00103 		and	r3, r3, #1
 1833 00fc 012B     		cmp	r3, #1
 1834 00fe 0CD0     		beq	.L119
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {    
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR2                                           ,
 1835              		.loc 1 1117 0
 1836 0100 7B68     		ldr	r3, [r7, #4]
 1837 0102 1B68     		ldr	r3, [r3]
 1838 0104 9B68     		ldr	r3, [r3, #8]
 1839 0106 23F4E043 		bic	r3, r3, #28672
 1840 010a 23F00103 		bic	r3, r3, #1
 1841 010e 3A68     		ldr	r2, [r7]
 1842 0110 D169     		ldr	r1, [r2, #28]
 1843 0112 7A68     		ldr	r2, [r7, #4]
 1844 0114 1268     		ldr	r2, [r2]
 1845 0116 0B43     		orrs	r3, r3, r1
 1846 0118 9360     		str	r3, [r2, #8]
 1847              	.L119:
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL |
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR2_ADON                                                  ,
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CFGR_JEXTSEL(hadc, sConfigInjected->ExternalTrigInjecConv) );
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccAQNJcJ.s 			page 53


1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Automatic injected conversion can be enabled if injected group         */
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* external triggers are disabled.                                        */
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == ENABLE)
 1848              		.loc 1 1130 0
 1849 011a 3B68     		ldr	r3, [r7]
 1850 011c 9B69     		ldr	r3, [r3, #24]
 1851 011e 012B     		cmp	r3, #1
 1852 0120 15D1     		bne	.L120
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 1853              		.loc 1 1132 0
 1854 0122 3B68     		ldr	r3, [r7]
 1855 0124 DB69     		ldr	r3, [r3, #28]
 1856 0126 B3F5E04F 		cmp	r3, #28672
 1857 012a 08D1     		bne	.L121
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO);
 1858              		.loc 1 1134 0
 1859 012c 7B68     		ldr	r3, [r7, #4]
 1860 012e 1B68     		ldr	r3, [r3]
 1861 0130 5A68     		ldr	r2, [r3, #4]
 1862 0132 7B68     		ldr	r3, [r7, #4]
 1863 0134 1B68     		ldr	r3, [r3]
 1864 0136 42F48062 		orr	r2, r2, #1024
 1865 013a 5A60     		str	r2, [r3, #4]
 1866 013c 07E0     		b	.L120
 1867              	.L121:
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1868              		.loc 1 1139 0
 1869 013e 7B68     		ldr	r3, [r7, #4]
 1870 0140 9B6A     		ldr	r3, [r3, #40]
 1871 0142 43F02002 		orr	r2, r3, #32
 1872 0146 7B68     		ldr	r3, [r7, #4]
 1873 0148 9A62     		str	r2, [r3, #40]
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 1874              		.loc 1 1141 0
 1875 014a 0123     		movs	r3, #1
 1876 014c FB73     		strb	r3, [r7, #15]
 1877              	.L120:
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Injected discontinuous can be enabled only if auto-injected mode is    */
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* disabled.                                                              */  
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
 1878              		.loc 1 1147 0
 1879 014e 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccAQNJcJ.s 			page 54


 1880 0150 5B69     		ldr	r3, [r3, #20]
 1881 0152 012B     		cmp	r3, #1
 1882 0154 14D1     		bne	.L122
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == DISABLE)
 1883              		.loc 1 1149 0
 1884 0156 3B68     		ldr	r3, [r7]
 1885 0158 9B69     		ldr	r3, [r3, #24]
 1886 015a 002B     		cmp	r3, #0
 1887 015c 08D1     		bne	.L123
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JDISCEN);
 1888              		.loc 1 1151 0
 1889 015e 7B68     		ldr	r3, [r7, #4]
 1890 0160 1B68     		ldr	r3, [r3]
 1891 0162 5A68     		ldr	r2, [r3, #4]
 1892 0164 7B68     		ldr	r3, [r7, #4]
 1893 0166 1B68     		ldr	r3, [r3]
 1894 0168 42F48052 		orr	r2, r2, #4096
 1895 016c 5A60     		str	r2, [r3, #4]
 1896 016e 07E0     		b	.L122
 1897              	.L123:
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       } 
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1898              		.loc 1 1156 0
 1899 0170 7B68     		ldr	r3, [r7, #4]
 1900 0172 9B6A     		ldr	r3, [r3, #40]
 1901 0174 43F02002 		orr	r2, r3, #32
 1902 0178 7B68     		ldr	r3, [r7, #4]
 1903 017a 9A62     		str	r2, [r3, #40]
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 1904              		.loc 1 1158 0
 1905 017c 0123     		movs	r3, #1
 1906 017e FB73     		strb	r3, [r7, #15]
 1907              	.L122:
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* InjectedChannel sampling time configuration */
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* For channels 10 to 17 */
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
 1908              		.loc 1 1165 0
 1909 0180 3B68     		ldr	r3, [r7]
 1910 0182 1B68     		ldr	r3, [r3]
 1911 0184 092B     		cmp	r3, #9
 1912 0186 1CD9     		bls	.L124
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1                                                             ,
 1913              		.loc 1 1167 0
 1914 0188 7B68     		ldr	r3, [r7, #4]
 1915 018a 1B68     		ldr	r3, [r3]
 1916 018c D968     		ldr	r1, [r3, #12]
ARM GAS  /tmp/ccAQNJcJ.s 			page 55


 1917 018e 3B68     		ldr	r3, [r7]
 1918 0190 1A68     		ldr	r2, [r3]
 1919 0192 1346     		mov	r3, r2
 1920 0194 5B00     		lsls	r3, r3, #1
 1921 0196 1344     		add	r3, r3, r2
 1922 0198 1E3B     		subs	r3, r3, #30
 1923 019a 0722     		movs	r2, #7
 1924 019c 02FA03F3 		lsl	r3, r2, r3
 1925 01a0 DB43     		mvns	r3, r3
 1926 01a2 1940     		ands	r1, r1, r3
 1927 01a4 3B68     		ldr	r3, [r7]
 1928 01a6 9868     		ldr	r0, [r3, #8]
 1929 01a8 3B68     		ldr	r3, [r7]
 1930 01aa 1A68     		ldr	r2, [r3]
 1931 01ac 1346     		mov	r3, r2
 1932 01ae 5B00     		lsls	r3, r3, #1
 1933 01b0 1344     		add	r3, r3, r2
 1934 01b2 1E3B     		subs	r3, r3, #30
 1935 01b4 00FA03F2 		lsl	r2, r0, r3
 1936 01b8 7B68     		ldr	r3, [r7, #4]
 1937 01ba 1B68     		ldr	r3, [r3]
 1938 01bc 0A43     		orrs	r2, r2, r1
 1939 01be DA60     		str	r2, [r3, #12]
 1940 01c0 19E0     		b	.L125
 1941              	.L124:
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfigInjected->InjectedChannel)                      ,
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else /* For channels 0 to 9 */
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2                                                             ,
 1942              		.loc 1 1173 0
 1943 01c2 7B68     		ldr	r3, [r7, #4]
 1944 01c4 1B68     		ldr	r3, [r3]
 1945 01c6 1969     		ldr	r1, [r3, #16]
 1946 01c8 3B68     		ldr	r3, [r7]
 1947 01ca 1A68     		ldr	r2, [r3]
 1948 01cc 1346     		mov	r3, r2
 1949 01ce 5B00     		lsls	r3, r3, #1
 1950 01d0 1344     		add	r3, r3, r2
 1951 01d2 0722     		movs	r2, #7
 1952 01d4 02FA03F3 		lsl	r3, r2, r3
 1953 01d8 DB43     		mvns	r3, r3
 1954 01da 1940     		ands	r1, r1, r3
 1955 01dc 3B68     		ldr	r3, [r7]
 1956 01de 9868     		ldr	r0, [r3, #8]
 1957 01e0 3B68     		ldr	r3, [r7]
 1958 01e2 1A68     		ldr	r2, [r3]
 1959 01e4 1346     		mov	r3, r2
 1960 01e6 5B00     		lsls	r3, r3, #1
 1961 01e8 1344     		add	r3, r3, r2
 1962 01ea 00FA03F2 		lsl	r2, r0, r3
 1963 01ee 7B68     		ldr	r3, [r7, #4]
 1964 01f0 1B68     		ldr	r3, [r3]
 1965 01f2 0A43     		orrs	r2, r2, r1
 1966 01f4 1A61     		str	r2, [r3, #16]
 1967              	.L125:
ARM GAS  /tmp/ccAQNJcJ.s 			page 56


1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfigInjected->InjectedChannel)                       ,
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If ADC1 InjectedChannel_16 or InjectedChannel_17 is selected, enable Temperature sensor  */
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
 1968              		.loc 1 1180 0
 1969 01f6 3B68     		ldr	r3, [r7]
 1970 01f8 1B68     		ldr	r3, [r3]
 1971 01fa 102B     		cmp	r3, #16
 1972 01fc 03D0     		beq	.L126
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 1973              		.loc 1 1181 0 discriminator 1
 1974 01fe 3B68     		ldr	r3, [r7]
 1975 0200 1B68     		ldr	r3, [r3]
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 1976              		.loc 1 1180 0 discriminator 1
 1977 0202 112B     		cmp	r3, #17
 1978 0204 07D1     		bne	.L127
 1979              	.L126:
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
 1980              		.loc 1 1183 0
 1981 0206 7B68     		ldr	r3, [r7, #4]
 1982 0208 1B68     		ldr	r3, [r3]
 1983 020a 9A68     		ldr	r2, [r3, #8]
 1984 020c 7B68     		ldr	r3, [r7, #4]
 1985 020e 1B68     		ldr	r3, [r3]
 1986 0210 42F40002 		orr	r2, r2, #8388608
 1987 0214 9A60     		str	r2, [r3, #8]
 1988              	.L127:
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configure the offset: offset enable/disable, InjectedChannel, offset value */
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   switch(sConfigInjected->InjectedRank)
 1989              		.loc 1 1188 0
 1990 0216 3B68     		ldr	r3, [r7]
 1991 0218 5B68     		ldr	r3, [r3, #4]
 1992 021a 022B     		cmp	r3, #2
 1993 021c 11D0     		beq	.L129
 1994 021e 032B     		cmp	r3, #3
 1995 0220 1DD0     		beq	.L130
 1996 0222 012B     		cmp	r3, #1
 1997 0224 29D1     		bne	.L138
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 1:
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 1 offset */
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR1,
 1998              		.loc 1 1192 0
 1999 0226 7B68     		ldr	r3, [r7, #4]
 2000 0228 1B68     		ldr	r3, [r3]
 2001 022a 5B69     		ldr	r3, [r3, #20]
 2002 022c 23F47F63 		bic	r3, r3, #4080
 2003 0230 23F00F03 		bic	r3, r3, #15
 2004 0234 3A68     		ldr	r2, [r7]
ARM GAS  /tmp/ccAQNJcJ.s 			page 57


 2005 0236 D168     		ldr	r1, [r2, #12]
 2006 0238 7A68     		ldr	r2, [r7, #4]
 2007 023a 1268     		ldr	r2, [r2]
 2008 023c 0B43     		orrs	r3, r3, r1
 2009 023e 5361     		str	r3, [r2, #20]
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR1_JOFFSET1,
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 2010              		.loc 1 1195 0
 2011 0240 29E0     		b	.L132
 2012              	.L129:
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 2:
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 2 offset */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR2,
 2013              		.loc 1 1198 0
 2014 0242 7B68     		ldr	r3, [r7, #4]
 2015 0244 1B68     		ldr	r3, [r3]
 2016 0246 9B69     		ldr	r3, [r3, #24]
 2017 0248 23F47F63 		bic	r3, r3, #4080
 2018 024c 23F00F03 		bic	r3, r3, #15
 2019 0250 3A68     		ldr	r2, [r7]
 2020 0252 D168     		ldr	r1, [r2, #12]
 2021 0254 7A68     		ldr	r2, [r7, #4]
 2022 0256 1268     		ldr	r2, [r2]
 2023 0258 0B43     		orrs	r3, r3, r1
 2024 025a 9361     		str	r3, [r2, #24]
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 2025              		.loc 1 1201 0
 2026 025c 1BE0     		b	.L132
 2027              	.L130:
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 3:
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 3 offset */
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR3,
 2028              		.loc 1 1204 0
 2029 025e 7B68     		ldr	r3, [r7, #4]
 2030 0260 1B68     		ldr	r3, [r3]
 2031 0262 DB69     		ldr	r3, [r3, #28]
 2032 0264 23F47F63 		bic	r3, r3, #4080
 2033 0268 23F00F03 		bic	r3, r3, #15
 2034 026c 3A68     		ldr	r2, [r7]
 2035 026e D168     		ldr	r1, [r2, #12]
 2036 0270 7A68     		ldr	r2, [r7, #4]
 2037 0272 1268     		ldr	r2, [r2]
 2038 0274 0B43     		orrs	r3, r3, r1
 2039 0276 D361     		str	r3, [r2, #28]
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 2040              		.loc 1 1207 0
 2041 0278 0DE0     		b	.L132
 2042              	.L138:
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 4:
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     default:
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR4,
 2043              		.loc 1 1210 0
ARM GAS  /tmp/ccAQNJcJ.s 			page 58


 2044 027a 7B68     		ldr	r3, [r7, #4]
 2045 027c 1B68     		ldr	r3, [r3]
 2046 027e 1B6A     		ldr	r3, [r3, #32]
 2047 0280 23F47F63 		bic	r3, r3, #4080
 2048 0284 23F00F03 		bic	r3, r3, #15
 2049 0288 3A68     		ldr	r2, [r7]
 2050 028a D168     		ldr	r1, [r2, #12]
 2051 028c 7A68     		ldr	r2, [r7, #4]
 2052 028e 1268     		ldr	r2, [r2]
 2053 0290 0B43     		orrs	r3, r3, r1
 2054 0292 1362     		str	r3, [r2, #32]
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR4_JOFFSET4,
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 2055              		.loc 1 1213 0
 2056 0294 00BF     		nop
 2057              	.L132:
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
 2058              		.loc 1 1218 0
 2059 0296 3B68     		ldr	r3, [r7]
 2060 0298 1B68     		ldr	r3, [r3]
 2061 029a 102B     		cmp	r3, #16
 2062 029c 03D0     		beq	.L133
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 2063              		.loc 1 1219 0 discriminator 1
 2064 029e 3B68     		ldr	r3, [r7]
 2065 02a0 1B68     		ldr	r3, [r3]
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 2066              		.loc 1 1218 0 discriminator 1
 2067 02a2 112B     		cmp	r3, #17
 2068 02a4 32D1     		bne	.L134
 2069              	.L133:
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* For STM32F1 devices with several ADC: Only ADC1 can access internal    */
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* measurement channels (VrefInt/TempSensor). If these channels are       */
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* intended to be set on other ADC instances, an error is reported.       */
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (hadc->Instance == ADC1)
 2070              		.loc 1 1224 0
 2071 02a6 7B68     		ldr	r3, [r7, #4]
 2072 02a8 1B68     		ldr	r3, [r3]
 2073 02aa 1D4A     		ldr	r2, .L139
 2074 02ac 9342     		cmp	r3, r2
 2075 02ae 25D1     		bne	.L135
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
 2076              		.loc 1 1226 0
 2077 02b0 7B68     		ldr	r3, [r7, #4]
 2078 02b2 1B68     		ldr	r3, [r3]
 2079 02b4 9B68     		ldr	r3, [r3, #8]
 2080 02b6 03F40003 		and	r3, r3, #8388608
 2081 02ba 002B     		cmp	r3, #0
 2082 02bc 26D1     		bne	.L134
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/ccAQNJcJ.s 			page 59


1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
 2083              		.loc 1 1228 0
 2084 02be 7B68     		ldr	r3, [r7, #4]
 2085 02c0 1B68     		ldr	r3, [r3]
 2086 02c2 9A68     		ldr	r2, [r3, #8]
 2087 02c4 7B68     		ldr	r3, [r7, #4]
 2088 02c6 1B68     		ldr	r3, [r3]
 2089 02c8 42F40002 		orr	r2, r2, #8388608
 2090 02cc 9A60     		str	r2, [r3, #8]
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR))
 2091              		.loc 1 1230 0
 2092 02ce 3B68     		ldr	r3, [r7]
 2093 02d0 1B68     		ldr	r3, [r3]
 2094 02d2 102B     		cmp	r3, #16
 2095 02d4 1AD1     		bne	.L134
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 2096              		.loc 1 1234 0
 2097 02d6 134B     		ldr	r3, .L139+4
 2098 02d8 1B68     		ldr	r3, [r3]
 2099 02da 134A     		ldr	r2, .L139+8
 2100 02dc A2FB0323 		umull	r2, r3, r2, r3
 2101 02e0 9A0C     		lsrs	r2, r3, #18
 2102 02e2 1346     		mov	r3, r2
 2103 02e4 9B00     		lsls	r3, r3, #2
 2104 02e6 1344     		add	r3, r3, r2
 2105 02e8 5B00     		lsls	r3, r3, #1
 2106 02ea BB60     		str	r3, [r7, #8]
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 2107              		.loc 1 1235 0
 2108 02ec 02E0     		b	.L136
 2109              	.L137:
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           {
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             wait_loop_index--;
 2110              		.loc 1 1237 0
 2111 02ee BB68     		ldr	r3, [r7, #8]
 2112 02f0 013B     		subs	r3, r3, #1
 2113 02f2 BB60     		str	r3, [r7, #8]
 2114              	.L136:
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 2115              		.loc 1 1235 0
 2116 02f4 BB68     		ldr	r3, [r7, #8]
 2117 02f6 002B     		cmp	r3, #0
 2118 02f8 F9D1     		bne	.L137
 2119 02fa 07E0     		b	.L134
 2120              	.L135:
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           }
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
ARM GAS  /tmp/ccAQNJcJ.s 			page 60


 2121              		.loc 1 1245 0
 2122 02fc 7B68     		ldr	r3, [r7, #4]
 2123 02fe 9B6A     		ldr	r3, [r3, #40]
 2124 0300 43F02002 		orr	r2, r3, #32
 2125 0304 7B68     		ldr	r3, [r7, #4]
 2126 0306 9A62     		str	r2, [r3, #40]
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 2127              		.loc 1 1247 0
 2128 0308 0123     		movs	r3, #1
 2129 030a FB73     		strb	r3, [r7, #15]
 2130              	.L134:
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2131              		.loc 1 1252 0
 2132 030c 7B68     		ldr	r3, [r7, #4]
 2133 030e 0022     		movs	r2, #0
 2134 0310 83F82420 		strb	r2, [r3, #36]
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 2135              		.loc 1 1255 0
 2136 0314 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2137              	.L113:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 2138              		.loc 1 1256 0
 2139 0316 1846     		mov	r0, r3
 2140 0318 1037     		adds	r7, r7, #16
 2141              	.LCFI61:
 2142              		.cfi_def_cfa_offset 8
 2143 031a BD46     		mov	sp, r7
 2144              	.LCFI62:
 2145              		.cfi_def_cfa_register 13
 2146              		@ sp needed
 2147 031c 90BC     		pop	{r4, r7}
 2148              	.LCFI63:
 2149              		.cfi_restore 7
 2150              		.cfi_restore 4
 2151              		.cfi_def_cfa_offset 0
 2152 031e 7047     		bx	lr
 2153              	.L140:
 2154              		.align	2
 2155              	.L139:
 2156 0320 00240140 		.word	1073816576
 2157 0324 00000000 		.word	SystemCoreClock
 2158 0328 83DE1B43 		.word	1125899907
 2159              		.cfi_endproc
 2160              	.LFE77:
 2162              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 2163              		.align	1
 2164              		.global	HAL_ADCEx_MultiModeConfigChannel
 2165              		.syntax unified
 2166              		.thumb
 2167              		.thumb_func
ARM GAS  /tmp/ccAQNJcJ.s 			page 61


 2168              		.fpu softvfp
 2170              	HAL_ADCEx_MultiModeConfigChannel:
 2171              	.LFB78:
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105xC) || defined (STM32F107xC
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following  
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without reseting 
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         the ADCs (both ADCs of the common group).
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   To change back configuration from multimode to single mode, ADC must
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  multimode: Structure of ADC multimode configuration
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef* hadc, ADC_MultiModeTypeDef* m
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 2172              		.loc 1 1276 0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 64
 2175              		@ frame_needed = 1, uses_anonymous_args = 0
 2176              		@ link register save eliminated.
 2177 0000 80B4     		push	{r7}
 2178              	.LCFI64:
 2179              		.cfi_def_cfa_offset 4
 2180              		.cfi_offset 7, -4
 2181 0002 91B0     		sub	sp, sp, #68
 2182              	.LCFI65:
 2183              		.cfi_def_cfa_offset 72
 2184 0004 00AF     		add	r7, sp, #0
 2185              	.LCFI66:
 2186              		.cfi_def_cfa_register 7
 2187 0006 7860     		str	r0, [r7, #4]
 2188 0008 3960     		str	r1, [r7]
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2189              		.loc 1 1277 0
 2190 000a 0023     		movs	r3, #0
 2191 000c 87F83F30 		strb	r3, [r7, #63]
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MODE(multimode->Mode));
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2192              		.loc 1 1285 0
 2193 0010 7B68     		ldr	r3, [r7, #4]
 2194 0012 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2195 0016 012B     		cmp	r3, #1
 2196 0018 01D1     		bne	.L142
ARM GAS  /tmp/ccAQNJcJ.s 			page 62


 2197              		.loc 1 1285 0 is_stmt 0 discriminator 1
 2198 001a 0223     		movs	r3, #2
 2199 001c 32E0     		b	.L146
 2200              	.L142:
 2201              		.loc 1 1285 0 discriminator 2
 2202 001e 7B68     		ldr	r3, [r7, #4]
 2203 0020 0122     		movs	r2, #1
 2204 0022 83F82420 		strb	r2, [r3, #36]
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Set a temporary handle of the ADC slave associated to the ADC master     */
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 2205              		.loc 1 1288 0 is_stmt 1 discriminator 2
 2206 0026 1A4B     		ldr	r3, .L147
 2207 0028 FB60     		str	r3, [r7, #12]
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - ADC master and ADC slave DMA configuration                            */
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Multimode mode selection                                              */
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* To optimize code, all multimode settings can be set when both ADCs of    */
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* the common group are in state: disabled.                                 */
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((ADC_IS_ENABLE(hadc) == RESET)                     &&
 2208              		.loc 1 1298 0 discriminator 2
 2209 002a 7B68     		ldr	r3, [r7, #4]
 2210 002c 1B68     		ldr	r3, [r3]
 2211 002e 9B68     		ldr	r3, [r3, #8]
 2212 0030 03F00103 		and	r3, r3, #1
 2213 0034 012B     		cmp	r3, #1
 2214 0036 16D0     		beq	.L144
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (ADC_IS_ENABLE(&tmphadcSlave) == RESET)            &&
 2215              		.loc 1 1299 0 discriminator 1
 2216 0038 FB68     		ldr	r3, [r7, #12]
 2217 003a 9B68     		ldr	r3, [r3, #8]
 2218 003c 03F00103 		and	r3, r3, #1
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (ADC_IS_ENABLE(&tmphadcSlave) == RESET)            &&
 2219              		.loc 1 1298 0 discriminator 1
 2220 0040 012B     		cmp	r3, #1
 2221 0042 10D0     		beq	.L144
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance))   )
 2222              		.loc 1 1300 0
 2223 0044 7B68     		ldr	r3, [r7, #4]
 2224 0046 1B68     		ldr	r3, [r3]
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (ADC_IS_ENABLE(&tmphadcSlave) == RESET)            &&
 2225              		.loc 1 1299 0
 2226 0048 124A     		ldr	r2, .L147+4
 2227 004a 9342     		cmp	r3, r2
 2228 004c 0BD1     		bne	.L144
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR1,
 2229              		.loc 1 1302 0
 2230 004e 7B68     		ldr	r3, [r7, #4]
 2231 0050 1B68     		ldr	r3, [r3]
 2232 0052 5B68     		ldr	r3, [r3, #4]
 2233 0054 23F47021 		bic	r1, r3, #983040
 2234 0058 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccAQNJcJ.s 			page 63


 2235 005a 1A68     		ldr	r2, [r3]
 2236 005c 7B68     		ldr	r3, [r7, #4]
 2237 005e 1B68     		ldr	r3, [r3]
 2238 0060 0A43     		orrs	r2, r2, r1
 2239 0062 5A60     		str	r2, [r3, #4]
 2240 0064 08E0     		b	.L145
 2241              	.L144:
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR1_DUALMOD    ,
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                multimode->Mode     );
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 2242              		.loc 1 1311 0
 2243 0066 7B68     		ldr	r3, [r7, #4]
 2244 0068 9B6A     		ldr	r3, [r3, #40]
 2245 006a 43F02002 		orr	r2, r3, #32
 2246 006e 7B68     		ldr	r3, [r7, #4]
 2247 0070 9A62     		str	r2, [r3, #40]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 2248              		.loc 1 1313 0
 2249 0072 0123     		movs	r3, #1
 2250 0074 87F83F30 		strb	r3, [r7, #63]
 2251              	.L145:
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2252              		.loc 1 1318 0
 2253 0078 7B68     		ldr	r3, [r7, #4]
 2254 007a 0022     		movs	r2, #0
 2255 007c 83F82420 		strb	r2, [r3, #36]
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 2256              		.loc 1 1321 0
 2257 0080 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 2258              	.L146:
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** } 
 2259              		.loc 1 1322 0 discriminator 1
 2260 0084 1846     		mov	r0, r3
 2261 0086 4437     		adds	r7, r7, #68
 2262              	.LCFI67:
 2263              		.cfi_def_cfa_offset 4
 2264 0088 BD46     		mov	sp, r7
 2265              	.LCFI68:
 2266              		.cfi_def_cfa_register 13
 2267              		@ sp needed
 2268 008a 80BC     		pop	{r7}
 2269              	.LCFI69:
 2270              		.cfi_restore 7
 2271              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccAQNJcJ.s 			page 64


 2272 008c 7047     		bx	lr
 2273              	.L148:
 2274 008e 00BF     		.align	2
 2275              	.L147:
 2276 0090 00280140 		.word	1073817600
 2277 0094 00240140 		.word	1073816576
 2278              		.cfi_endproc
 2279              	.LFE78:
 2281              		.text
 2282              	.Letext0:
 2283              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2284              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2285              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2286              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2287              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2288              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2289              		.file 8 "/usr/include/newlib/sys/lock.h"
 2290              		.file 9 "/usr/include/newlib/sys/_types.h"
 2291              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 2292              		.file 11 "/usr/include/newlib/sys/reent.h"
 2293              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2294              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2295              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2296              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
ARM GAS  /tmp/ccAQNJcJ.s 			page 65


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_adc_ex.c
     /tmp/ccAQNJcJ.s:16     .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
     /tmp/ccAQNJcJ.s:23     .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
     /tmp/ccAQNJcJ.s:219    .text.HAL_ADCEx_Calibration_Start:0000000000000134 $d
     /tmp/ccAQNJcJ.s:224    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/ccAQNJcJ.s:231    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/ccAQNJcJ.s:400    .text.HAL_ADCEx_InjectedStart:0000000000000104 $d
     /tmp/ccAQNJcJ.s:406    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/ccAQNJcJ.s:413    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/ccAQNJcJ.s:512    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/ccAQNJcJ.s:519    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/ccAQNJcJ.s:810    .text.HAL_ADCEx_InjectedPollForConversion:00000000000001c4 $d
     /tmp/ccAQNJcJ.s:820    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/ccAQNJcJ.s:827    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/ccAQNJcJ.s:1004   .text.HAL_ADCEx_InjectedStart_IT:0000000000000114 $d
     /tmp/ccAQNJcJ.s:1010   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/ccAQNJcJ.s:1017   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
     /tmp/ccAQNJcJ.s:1124   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
     /tmp/ccAQNJcJ.s:1131   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/ccAQNJcJ.s:1327   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000148 $d
     /tmp/ccAQNJcJ.s:1336   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
     /tmp/ccAQNJcJ.s:1343   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/ccAQNJcJ.s:1465   .text.HAL_ADCEx_MultiModeStop_DMA:00000000000000c4 $d
     /tmp/ccAQNJcJ.s:1470   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/ccAQNJcJ.s:1477   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/ccAQNJcJ.s:1561   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
     /tmp/ccAQNJcJ.s:1568   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
     /tmp/ccAQNJcJ.s:1627   .text.HAL_ADCEx_MultiModeGetValue:0000000000000038 $d
     /tmp/ccAQNJcJ.s:1633   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/ccAQNJcJ.s:1640   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/ccAQNJcJ.s:1676   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/ccAQNJcJ.s:1683   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/ccAQNJcJ.s:2156   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000320 $d
     /tmp/ccAQNJcJ.s:2163   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
     /tmp/ccAQNJcJ.s:2170   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/ccAQNJcJ.s:2276   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000090 $d

UNDEFINED SYMBOLS
ADC_ConversionStop_Disable
HAL_RCCEx_GetPeriphCLKFreq
ADC_Enable
HAL_GetTick
SystemCoreClock
HAL_DMA_Start_IT
ADC_DMAConvCplt
ADC_DMAHalfConvCplt
ADC_DMAError
HAL_DMA_Abort
